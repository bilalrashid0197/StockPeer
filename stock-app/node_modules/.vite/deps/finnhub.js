import {
  __commonJS,
  __require
} from "./chunk-WGAPYIUP.js";

// ../node_modules/component-emitter/index.js
var require_component_emitter = __commonJS({
  "../node_modules/component-emitter/index.js"(exports, module) {
    if (typeof module !== "undefined") {
      module.exports = Emitter;
    }
    function Emitter(obj) {
      if (obj)
        return mixin(obj);
    }
    function mixin(obj) {
      for (var key in Emitter.prototype) {
        obj[key] = Emitter.prototype[key];
      }
      return obj;
    }
    Emitter.prototype.on = Emitter.prototype.addEventListener = function(event, fn) {
      this._callbacks = this._callbacks || {};
      (this._callbacks["$" + event] = this._callbacks["$" + event] || []).push(fn);
      return this;
    };
    Emitter.prototype.once = function(event, fn) {
      function on() {
        this.off(event, on);
        fn.apply(this, arguments);
      }
      on.fn = fn;
      this.on(event, on);
      return this;
    };
    Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function(event, fn) {
      this._callbacks = this._callbacks || {};
      if (0 == arguments.length) {
        this._callbacks = {};
        return this;
      }
      var callbacks = this._callbacks["$" + event];
      if (!callbacks)
        return this;
      if (1 == arguments.length) {
        delete this._callbacks["$" + event];
        return this;
      }
      var cb;
      for (var i = 0; i < callbacks.length; i++) {
        cb = callbacks[i];
        if (cb === fn || cb.fn === fn) {
          callbacks.splice(i, 1);
          break;
        }
      }
      if (callbacks.length === 0) {
        delete this._callbacks["$" + event];
      }
      return this;
    };
    Emitter.prototype.emit = function(event) {
      this._callbacks = this._callbacks || {};
      var args = new Array(arguments.length - 1), callbacks = this._callbacks["$" + event];
      for (var i = 1; i < arguments.length; i++) {
        args[i - 1] = arguments[i];
      }
      if (callbacks) {
        callbacks = callbacks.slice(0);
        for (var i = 0, len = callbacks.length; i < len; ++i) {
          callbacks[i].apply(this, args);
        }
      }
      return this;
    };
    Emitter.prototype.listeners = function(event) {
      this._callbacks = this._callbacks || {};
      return this._callbacks["$" + event] || [];
    };
    Emitter.prototype.hasListeners = function(event) {
      return !!this.listeners(event).length;
    };
  }
});

// ../node_modules/fast-safe-stringify/index.js
var require_fast_safe_stringify = __commonJS({
  "../node_modules/fast-safe-stringify/index.js"(exports, module) {
    module.exports = stringify;
    stringify.default = stringify;
    stringify.stable = deterministicStringify;
    stringify.stableStringify = deterministicStringify;
    var LIMIT_REPLACE_NODE = "[...]";
    var CIRCULAR_REPLACE_NODE = "[Circular]";
    var arr = [];
    var replacerStack = [];
    function defaultOptions() {
      return {
        depthLimit: Number.MAX_SAFE_INTEGER,
        edgesLimit: Number.MAX_SAFE_INTEGER
      };
    }
    function stringify(obj, replacer, spacer, options) {
      if (typeof options === "undefined") {
        options = defaultOptions();
      }
      decirc(obj, "", 0, [], void 0, 0, options);
      var res;
      try {
        if (replacerStack.length === 0) {
          res = JSON.stringify(obj, replacer, spacer);
        } else {
          res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);
        }
      } catch (_) {
        return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
      } finally {
        while (arr.length !== 0) {
          var part = arr.pop();
          if (part.length === 4) {
            Object.defineProperty(part[0], part[1], part[3]);
          } else {
            part[0][part[1]] = part[2];
          }
        }
      }
      return res;
    }
    function setReplace(replace, val, k, parent) {
      var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);
      if (propertyDescriptor.get !== void 0) {
        if (propertyDescriptor.configurable) {
          Object.defineProperty(parent, k, { value: replace });
          arr.push([parent, k, val, propertyDescriptor]);
        } else {
          replacerStack.push([val, k, replace]);
        }
      } else {
        parent[k] = replace;
        arr.push([parent, k, val]);
      }
    }
    function decirc(val, k, edgeIndex, stack, parent, depth, options) {
      depth += 1;
      var i;
      if (typeof val === "object" && val !== null) {
        for (i = 0; i < stack.length; i++) {
          if (stack[i] === val) {
            setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);
            return;
          }
        }
        if (typeof options.depthLimit !== "undefined" && depth > options.depthLimit) {
          setReplace(LIMIT_REPLACE_NODE, val, k, parent);
          return;
        }
        if (typeof options.edgesLimit !== "undefined" && edgeIndex + 1 > options.edgesLimit) {
          setReplace(LIMIT_REPLACE_NODE, val, k, parent);
          return;
        }
        stack.push(val);
        if (Array.isArray(val)) {
          for (i = 0; i < val.length; i++) {
            decirc(val[i], i, i, stack, val, depth, options);
          }
        } else {
          var keys = Object.keys(val);
          for (i = 0; i < keys.length; i++) {
            var key = keys[i];
            decirc(val[key], key, i, stack, val, depth, options);
          }
        }
        stack.pop();
      }
    }
    function compareFunction(a, b) {
      if (a < b) {
        return -1;
      }
      if (a > b) {
        return 1;
      }
      return 0;
    }
    function deterministicStringify(obj, replacer, spacer, options) {
      if (typeof options === "undefined") {
        options = defaultOptions();
      }
      var tmp = deterministicDecirc(obj, "", 0, [], void 0, 0, options) || obj;
      var res;
      try {
        if (replacerStack.length === 0) {
          res = JSON.stringify(tmp, replacer, spacer);
        } else {
          res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);
        }
      } catch (_) {
        return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
      } finally {
        while (arr.length !== 0) {
          var part = arr.pop();
          if (part.length === 4) {
            Object.defineProperty(part[0], part[1], part[3]);
          } else {
            part[0][part[1]] = part[2];
          }
        }
      }
      return res;
    }
    function deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {
      depth += 1;
      var i;
      if (typeof val === "object" && val !== null) {
        for (i = 0; i < stack.length; i++) {
          if (stack[i] === val) {
            setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);
            return;
          }
        }
        try {
          if (typeof val.toJSON === "function") {
            return;
          }
        } catch (_) {
          return;
        }
        if (typeof options.depthLimit !== "undefined" && depth > options.depthLimit) {
          setReplace(LIMIT_REPLACE_NODE, val, k, parent);
          return;
        }
        if (typeof options.edgesLimit !== "undefined" && edgeIndex + 1 > options.edgesLimit) {
          setReplace(LIMIT_REPLACE_NODE, val, k, parent);
          return;
        }
        stack.push(val);
        if (Array.isArray(val)) {
          for (i = 0; i < val.length; i++) {
            deterministicDecirc(val[i], i, i, stack, val, depth, options);
          }
        } else {
          var tmp = {};
          var keys = Object.keys(val).sort(compareFunction);
          for (i = 0; i < keys.length; i++) {
            var key = keys[i];
            deterministicDecirc(val[key], key, i, stack, val, depth, options);
            tmp[key] = val[key];
          }
          if (typeof parent !== "undefined") {
            arr.push([parent, k, val]);
            parent[k] = tmp;
          } else {
            return tmp;
          }
        }
        stack.pop();
      }
    }
    function replaceGetterValues(replacer) {
      replacer = typeof replacer !== "undefined" ? replacer : function(k, v) {
        return v;
      };
      return function(key, val) {
        if (replacerStack.length > 0) {
          for (var i = 0; i < replacerStack.length; i++) {
            var part = replacerStack[i];
            if (part[1] === key && part[0] === val) {
              val = part[2];
              replacerStack.splice(i, 1);
              break;
            }
          }
        }
        return replacer.call(this, key, val);
      };
    }
  }
});

// ../node_modules/superagent/lib/is-object.js
var require_is_object = __commonJS({
  "../node_modules/superagent/lib/is-object.js"(exports, module) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function isObject(obj) {
      return obj !== null && _typeof(obj) === "object";
    }
    module.exports = isObject;
  }
});

// ../node_modules/superagent/lib/request-base.js
var require_request_base = __commonJS({
  "../node_modules/superagent/lib/request-base.js"(exports, module) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var isObject = require_is_object();
    module.exports = RequestBase;
    function RequestBase(obj) {
      if (obj)
        return mixin(obj);
    }
    function mixin(obj) {
      for (var key in RequestBase.prototype) {
        if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key))
          obj[key] = RequestBase.prototype[key];
      }
      return obj;
    }
    RequestBase.prototype.clearTimeout = function() {
      clearTimeout(this._timer);
      clearTimeout(this._responseTimeoutTimer);
      clearTimeout(this._uploadTimeoutTimer);
      delete this._timer;
      delete this._responseTimeoutTimer;
      delete this._uploadTimeoutTimer;
      return this;
    };
    RequestBase.prototype.parse = function(fn) {
      this._parser = fn;
      return this;
    };
    RequestBase.prototype.responseType = function(val) {
      this._responseType = val;
      return this;
    };
    RequestBase.prototype.serialize = function(fn) {
      this._serializer = fn;
      return this;
    };
    RequestBase.prototype.timeout = function(options) {
      if (!options || _typeof(options) !== "object") {
        this._timeout = options;
        this._responseTimeout = 0;
        this._uploadTimeout = 0;
        return this;
      }
      for (var option in options) {
        if (Object.prototype.hasOwnProperty.call(options, option)) {
          switch (option) {
            case "deadline":
              this._timeout = options.deadline;
              break;
            case "response":
              this._responseTimeout = options.response;
              break;
            case "upload":
              this._uploadTimeout = options.upload;
              break;
            default:
              console.warn("Unknown timeout option", option);
          }
        }
      }
      return this;
    };
    RequestBase.prototype.retry = function(count, fn) {
      if (arguments.length === 0 || count === true)
        count = 1;
      if (count <= 0)
        count = 0;
      this._maxRetries = count;
      this._retries = 0;
      this._retryCallback = fn;
      return this;
    };
    var ERROR_CODES = ["ECONNRESET", "ETIMEDOUT", "EADDRINFO", "ESOCKETTIMEDOUT"];
    RequestBase.prototype._shouldRetry = function(err, res) {
      if (!this._maxRetries || this._retries++ >= this._maxRetries) {
        return false;
      }
      if (this._retryCallback) {
        try {
          var override = this._retryCallback(err, res);
          if (override === true)
            return true;
          if (override === false)
            return false;
        } catch (err_) {
          console.error(err_);
        }
      }
      if (res && res.status && res.status >= 500 && res.status !== 501)
        return true;
      if (err) {
        if (err.code && ERROR_CODES.includes(err.code))
          return true;
        if (err.timeout && err.code === "ECONNABORTED")
          return true;
        if (err.crossDomain)
          return true;
      }
      return false;
    };
    RequestBase.prototype._retry = function() {
      this.clearTimeout();
      if (this.req) {
        this.req = null;
        this.req = this.request();
      }
      this._aborted = false;
      this.timedout = false;
      this.timedoutError = null;
      return this._end();
    };
    RequestBase.prototype.then = function(resolve, reject) {
      var _this = this;
      if (!this._fullfilledPromise) {
        var self2 = this;
        if (this._endCalled) {
          console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises");
        }
        this._fullfilledPromise = new Promise(function(resolve2, reject2) {
          self2.on("abort", function() {
            if (_this._maxRetries && _this._maxRetries > _this._retries) {
              return;
            }
            if (_this.timedout && _this.timedoutError) {
              reject2(_this.timedoutError);
              return;
            }
            var err = new Error("Aborted");
            err.code = "ABORTED";
            err.status = _this.status;
            err.method = _this.method;
            err.url = _this.url;
            reject2(err);
          });
          self2.end(function(err, res) {
            if (err)
              reject2(err);
            else
              resolve2(res);
          });
        });
      }
      return this._fullfilledPromise.then(resolve, reject);
    };
    RequestBase.prototype.catch = function(cb) {
      return this.then(void 0, cb);
    };
    RequestBase.prototype.use = function(fn) {
      fn(this);
      return this;
    };
    RequestBase.prototype.ok = function(cb) {
      if (typeof cb !== "function")
        throw new Error("Callback required");
      this._okCallback = cb;
      return this;
    };
    RequestBase.prototype._isResponseOK = function(res) {
      if (!res) {
        return false;
      }
      if (this._okCallback) {
        return this._okCallback(res);
      }
      return res.status >= 200 && res.status < 300;
    };
    RequestBase.prototype.get = function(field) {
      return this._header[field.toLowerCase()];
    };
    RequestBase.prototype.getHeader = RequestBase.prototype.get;
    RequestBase.prototype.set = function(field, val) {
      if (isObject(field)) {
        for (var key in field) {
          if (Object.prototype.hasOwnProperty.call(field, key))
            this.set(key, field[key]);
        }
        return this;
      }
      this._header[field.toLowerCase()] = val;
      this.header[field] = val;
      return this;
    };
    RequestBase.prototype.unset = function(field) {
      delete this._header[field.toLowerCase()];
      delete this.header[field];
      return this;
    };
    RequestBase.prototype.field = function(name, val) {
      if (name === null || void 0 === name) {
        throw new Error(".field(name, val) name can not be empty");
      }
      if (this._data) {
        throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");
      }
      if (isObject(name)) {
        for (var key in name) {
          if (Object.prototype.hasOwnProperty.call(name, key))
            this.field(key, name[key]);
        }
        return this;
      }
      if (Array.isArray(val)) {
        for (var i in val) {
          if (Object.prototype.hasOwnProperty.call(val, i))
            this.field(name, val[i]);
        }
        return this;
      }
      if (val === null || void 0 === val) {
        throw new Error(".field(name, val) val can not be empty");
      }
      if (typeof val === "boolean") {
        val = String(val);
      }
      this._getFormData().append(name, val);
      return this;
    };
    RequestBase.prototype.abort = function() {
      if (this._aborted) {
        return this;
      }
      this._aborted = true;
      if (this.xhr)
        this.xhr.abort();
      if (this.req)
        this.req.abort();
      this.clearTimeout();
      this.emit("abort");
      return this;
    };
    RequestBase.prototype._auth = function(user, pass, options, base64Encoder) {
      switch (options.type) {
        case "basic":
          this.set("Authorization", "Basic ".concat(base64Encoder("".concat(user, ":").concat(pass))));
          break;
        case "auto":
          this.username = user;
          this.password = pass;
          break;
        case "bearer":
          this.set("Authorization", "Bearer ".concat(user));
          break;
        default:
          break;
      }
      return this;
    };
    RequestBase.prototype.withCredentials = function(on) {
      if (on === void 0)
        on = true;
      this._withCredentials = on;
      return this;
    };
    RequestBase.prototype.redirects = function(n) {
      this._maxRedirects = n;
      return this;
    };
    RequestBase.prototype.maxResponseSize = function(n) {
      if (typeof n !== "number") {
        throw new TypeError("Invalid argument");
      }
      this._maxResponseSize = n;
      return this;
    };
    RequestBase.prototype.toJSON = function() {
      return {
        method: this.method,
        url: this.url,
        data: this._data,
        headers: this._header
      };
    };
    RequestBase.prototype.send = function(data) {
      var isObj = isObject(data);
      var type = this._header["content-type"];
      if (this._formData) {
        throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");
      }
      if (isObj && !this._data) {
        if (Array.isArray(data)) {
          this._data = [];
        } else if (!this._isHost(data)) {
          this._data = {};
        }
      } else if (data && this._data && this._isHost(this._data)) {
        throw new Error("Can't merge these send calls");
      }
      if (isObj && isObject(this._data)) {
        for (var key in data) {
          if (Object.prototype.hasOwnProperty.call(data, key))
            this._data[key] = data[key];
        }
      } else if (typeof data === "string") {
        if (!type)
          this.type("form");
        type = this._header["content-type"];
        if (type === "application/x-www-form-urlencoded") {
          this._data = this._data ? "".concat(this._data, "&").concat(data) : data;
        } else {
          this._data = (this._data || "") + data;
        }
      } else {
        this._data = data;
      }
      if (!isObj || this._isHost(data)) {
        return this;
      }
      if (!type)
        this.type("json");
      return this;
    };
    RequestBase.prototype.sortQuery = function(sort) {
      this._sort = typeof sort === "undefined" ? true : sort;
      return this;
    };
    RequestBase.prototype._finalizeQueryString = function() {
      var query = this._query.join("&");
      if (query) {
        this.url += (this.url.includes("?") ? "&" : "?") + query;
      }
      this._query.length = 0;
      if (this._sort) {
        var index = this.url.indexOf("?");
        if (index >= 0) {
          var queryArr = this.url.slice(index + 1).split("&");
          if (typeof this._sort === "function") {
            queryArr.sort(this._sort);
          } else {
            queryArr.sort();
          }
          this.url = this.url.slice(0, index) + "?" + queryArr.join("&");
        }
      }
    };
    RequestBase.prototype._appendQueryString = function() {
      console.warn("Unsupported");
    };
    RequestBase.prototype._timeoutError = function(reason, timeout, errno) {
      if (this._aborted) {
        return;
      }
      var err = new Error("".concat(reason + timeout, "ms exceeded"));
      err.timeout = timeout;
      err.code = "ECONNABORTED";
      err.errno = errno;
      this.timedout = true;
      this.timedoutError = err;
      this.abort();
      this.callback(err);
    };
    RequestBase.prototype._setTimeouts = function() {
      var self2 = this;
      if (this._timeout && !this._timer) {
        this._timer = setTimeout(function() {
          self2._timeoutError("Timeout of ", self2._timeout, "ETIME");
        }, this._timeout);
      }
      if (this._responseTimeout && !this._responseTimeoutTimer) {
        this._responseTimeoutTimer = setTimeout(function() {
          self2._timeoutError("Response timeout of ", self2._responseTimeout, "ETIMEDOUT");
        }, this._responseTimeout);
      }
    };
  }
});

// ../node_modules/superagent/lib/utils.js
var require_utils = __commonJS({
  "../node_modules/superagent/lib/utils.js"(exports) {
    "use strict";
    exports.type = function(str) {
      return str.split(/ *; */).shift();
    };
    exports.params = function(str) {
      return str.split(/ *; */).reduce(function(obj, str2) {
        var parts = str2.split(/ *= */);
        var key = parts.shift();
        var val = parts.shift();
        if (key && val)
          obj[key] = val;
        return obj;
      }, {});
    };
    exports.parseLinks = function(str) {
      return str.split(/ *, */).reduce(function(obj, str2) {
        var parts = str2.split(/ *; */);
        var url = parts[0].slice(1, -1);
        var rel = parts[1].split(/ *= */)[1].slice(1, -1);
        obj[rel] = url;
        return obj;
      }, {});
    };
    exports.cleanHeader = function(header, changesOrigin) {
      delete header["content-type"];
      delete header["content-length"];
      delete header["transfer-encoding"];
      delete header.host;
      if (changesOrigin) {
        delete header.authorization;
        delete header.cookie;
      }
      return header;
    };
  }
});

// ../node_modules/superagent/lib/response-base.js
var require_response_base = __commonJS({
  "../node_modules/superagent/lib/response-base.js"(exports, module) {
    "use strict";
    var utils = require_utils();
    module.exports = ResponseBase;
    function ResponseBase(obj) {
      if (obj)
        return mixin(obj);
    }
    function mixin(obj) {
      for (var key in ResponseBase.prototype) {
        if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key))
          obj[key] = ResponseBase.prototype[key];
      }
      return obj;
    }
    ResponseBase.prototype.get = function(field) {
      return this.header[field.toLowerCase()];
    };
    ResponseBase.prototype._setHeaderProperties = function(header) {
      var ct = header["content-type"] || "";
      this.type = utils.type(ct);
      var params = utils.params(ct);
      for (var key in params) {
        if (Object.prototype.hasOwnProperty.call(params, key))
          this[key] = params[key];
      }
      this.links = {};
      try {
        if (header.link) {
          this.links = utils.parseLinks(header.link);
        }
      } catch (_unused) {
      }
    };
    ResponseBase.prototype._setStatusProperties = function(status) {
      var type = status / 100 | 0;
      this.statusCode = status;
      this.status = this.statusCode;
      this.statusType = type;
      this.info = type === 1;
      this.ok = type === 2;
      this.redirect = type === 3;
      this.clientError = type === 4;
      this.serverError = type === 5;
      this.error = type === 4 || type === 5 ? this.toError() : false;
      this.created = status === 201;
      this.accepted = status === 202;
      this.noContent = status === 204;
      this.badRequest = status === 400;
      this.unauthorized = status === 401;
      this.notAcceptable = status === 406;
      this.forbidden = status === 403;
      this.notFound = status === 404;
      this.unprocessableEntity = status === 422;
    };
  }
});

// ../node_modules/superagent/lib/agent-base.js
var require_agent_base = __commonJS({
  "../node_modules/superagent/lib/agent-base.js"(exports, module) {
    "use strict";
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function Agent() {
      this._defaults = [];
    }
    ["use", "on", "once", "set", "query", "type", "accept", "auth", "withCredentials", "sortQuery", "retry", "ok", "redirects", "timeout", "buffer", "serialize", "parse", "ca", "key", "pfx", "cert", "disableTLSCerts"].forEach(function(fn) {
      Agent.prototype[fn] = function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        this._defaults.push({
          fn,
          args
        });
        return this;
      };
    });
    Agent.prototype._setDefaults = function(req) {
      this._defaults.forEach(function(def) {
        req[def.fn].apply(req, _toConsumableArray(def.args));
      });
    };
    module.exports = Agent;
  }
});

// ../node_modules/superagent/lib/client.js
var require_client = __commonJS({
  "../node_modules/superagent/lib/client.js"(exports, module) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var root;
    if (typeof window !== "undefined") {
      root = window;
    } else if (typeof self === "undefined") {
      console.warn("Using browser-only version of superagent in non-browser environment");
      root = void 0;
    } else {
      root = self;
    }
    var Emitter = require_component_emitter();
    var safeStringify = require_fast_safe_stringify();
    var RequestBase = require_request_base();
    var isObject = require_is_object();
    var ResponseBase = require_response_base();
    var Agent = require_agent_base();
    function noop() {
    }
    module.exports = function(method, url) {
      if (typeof url === "function") {
        return new exports.Request("GET", method).end(url);
      }
      if (arguments.length === 1) {
        return new exports.Request("GET", method);
      }
      return new exports.Request(method, url);
    };
    exports = module.exports;
    var request = exports;
    exports.Request = Request;
    request.getXHR = function() {
      if (root.XMLHttpRequest && (!root.location || root.location.protocol !== "file:" || !root.ActiveXObject)) {
        return new XMLHttpRequest();
      }
      try {
        return new ActiveXObject("Microsoft.XMLHTTP");
      } catch (_unused) {
      }
      try {
        return new ActiveXObject("Msxml2.XMLHTTP.6.0");
      } catch (_unused2) {
      }
      try {
        return new ActiveXObject("Msxml2.XMLHTTP.3.0");
      } catch (_unused3) {
      }
      try {
        return new ActiveXObject("Msxml2.XMLHTTP");
      } catch (_unused4) {
      }
      throw new Error("Browser-only version of superagent could not find XHR");
    };
    var trim = "".trim ? function(s) {
      return s.trim();
    } : function(s) {
      return s.replace(/(^\s*|\s*$)/g, "");
    };
    function serialize(obj) {
      if (!isObject(obj))
        return obj;
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key))
          pushEncodedKeyValuePair(pairs, key, obj[key]);
      }
      return pairs.join("&");
    }
    function pushEncodedKeyValuePair(pairs, key, val) {
      if (val === void 0)
        return;
      if (val === null) {
        pairs.push(encodeURI(key));
        return;
      }
      if (Array.isArray(val)) {
        val.forEach(function(v) {
          pushEncodedKeyValuePair(pairs, key, v);
        });
      } else if (isObject(val)) {
        for (var subkey in val) {
          if (Object.prototype.hasOwnProperty.call(val, subkey))
            pushEncodedKeyValuePair(pairs, "".concat(key, "[").concat(subkey, "]"), val[subkey]);
        }
      } else {
        pairs.push(encodeURI(key) + "=" + encodeURIComponent(val));
      }
    }
    request.serializeObject = serialize;
    function parseString(str) {
      var obj = {};
      var pairs = str.split("&");
      var pair;
      var pos;
      for (var i = 0, len = pairs.length; i < len; ++i) {
        pair = pairs[i];
        pos = pair.indexOf("=");
        if (pos === -1) {
          obj[decodeURIComponent(pair)] = "";
        } else {
          obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));
        }
      }
      return obj;
    }
    request.parseString = parseString;
    request.types = {
      html: "text/html",
      json: "application/json",
      xml: "text/xml",
      urlencoded: "application/x-www-form-urlencoded",
      form: "application/x-www-form-urlencoded",
      "form-data": "application/x-www-form-urlencoded"
    };
    request.serialize = {
      "application/x-www-form-urlencoded": serialize,
      "application/json": safeStringify
    };
    request.parse = {
      "application/x-www-form-urlencoded": parseString,
      "application/json": JSON.parse
    };
    function parseHeader(str) {
      var lines = str.split(/\r?\n/);
      var fields = {};
      var index;
      var line;
      var field;
      var val;
      for (var i = 0, len = lines.length; i < len; ++i) {
        line = lines[i];
        index = line.indexOf(":");
        if (index === -1) {
          continue;
        }
        field = line.slice(0, index).toLowerCase();
        val = trim(line.slice(index + 1));
        fields[field] = val;
      }
      return fields;
    }
    function isJSON(mime) {
      return /[/+]json($|[^-\w])/.test(mime);
    }
    function Response(req) {
      this.req = req;
      this.xhr = this.req.xhr;
      this.text = this.req.method !== "HEAD" && (this.xhr.responseType === "" || this.xhr.responseType === "text") || typeof this.xhr.responseType === "undefined" ? this.xhr.responseText : null;
      this.statusText = this.req.xhr.statusText;
      var status = this.xhr.status;
      if (status === 1223) {
        status = 204;
      }
      this._setStatusProperties(status);
      this.headers = parseHeader(this.xhr.getAllResponseHeaders());
      this.header = this.headers;
      this.header["content-type"] = this.xhr.getResponseHeader("content-type");
      this._setHeaderProperties(this.header);
      if (this.text === null && req._responseType) {
        this.body = this.xhr.response;
      } else {
        this.body = this.req.method === "HEAD" ? null : this._parseBody(this.text ? this.text : this.xhr.response);
      }
    }
    ResponseBase(Response.prototype);
    Response.prototype._parseBody = function(str) {
      var parse = request.parse[this.type];
      if (this.req._parser) {
        return this.req._parser(this, str);
      }
      if (!parse && isJSON(this.type)) {
        parse = request.parse["application/json"];
      }
      return parse && str && (str.length > 0 || str instanceof Object) ? parse(str) : null;
    };
    Response.prototype.toError = function() {
      var req = this.req;
      var method = req.method;
      var url = req.url;
      var msg = "cannot ".concat(method, " ").concat(url, " (").concat(this.status, ")");
      var err = new Error(msg);
      err.status = this.status;
      err.method = method;
      err.url = url;
      return err;
    };
    request.Response = Response;
    function Request(method, url) {
      var self2 = this;
      this._query = this._query || [];
      this.method = method;
      this.url = url;
      this.header = {};
      this._header = {};
      this.on("end", function() {
        var err = null;
        var res = null;
        try {
          res = new Response(self2);
        } catch (err_) {
          err = new Error("Parser is unable to parse the response");
          err.parse = true;
          err.original = err_;
          if (self2.xhr) {
            err.rawResponse = typeof self2.xhr.responseType === "undefined" ? self2.xhr.responseText : self2.xhr.response;
            err.status = self2.xhr.status ? self2.xhr.status : null;
            err.statusCode = err.status;
          } else {
            err.rawResponse = null;
            err.status = null;
          }
          return self2.callback(err);
        }
        self2.emit("response", res);
        var new_err;
        try {
          if (!self2._isResponseOK(res)) {
            new_err = new Error(res.statusText || res.text || "Unsuccessful HTTP response");
          }
        } catch (err_) {
          new_err = err_;
        }
        if (new_err) {
          new_err.original = err;
          new_err.response = res;
          new_err.status = res.status;
          self2.callback(new_err, res);
        } else {
          self2.callback(null, res);
        }
      });
    }
    Emitter(Request.prototype);
    RequestBase(Request.prototype);
    Request.prototype.type = function(type) {
      this.set("Content-Type", request.types[type] || type);
      return this;
    };
    Request.prototype.accept = function(type) {
      this.set("Accept", request.types[type] || type);
      return this;
    };
    Request.prototype.auth = function(user, pass, options) {
      if (arguments.length === 1)
        pass = "";
      if (_typeof(pass) === "object" && pass !== null) {
        options = pass;
        pass = "";
      }
      if (!options) {
        options = {
          type: typeof btoa === "function" ? "basic" : "auto"
        };
      }
      var encoder = function encoder2(string) {
        if (typeof btoa === "function") {
          return btoa(string);
        }
        throw new Error("Cannot use basic auth, btoa is not a function");
      };
      return this._auth(user, pass, options, encoder);
    };
    Request.prototype.query = function(val) {
      if (typeof val !== "string")
        val = serialize(val);
      if (val)
        this._query.push(val);
      return this;
    };
    Request.prototype.attach = function(field, file, options) {
      if (file) {
        if (this._data) {
          throw new Error("superagent can't mix .send() and .attach()");
        }
        this._getFormData().append(field, file, options || file.name);
      }
      return this;
    };
    Request.prototype._getFormData = function() {
      if (!this._formData) {
        this._formData = new root.FormData();
      }
      return this._formData;
    };
    Request.prototype.callback = function(err, res) {
      if (this._shouldRetry(err, res)) {
        return this._retry();
      }
      var fn = this._callback;
      this.clearTimeout();
      if (err) {
        if (this._maxRetries)
          err.retries = this._retries - 1;
        this.emit("error", err);
      }
      fn(err, res);
    };
    Request.prototype.crossDomainError = function() {
      var err = new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");
      err.crossDomain = true;
      err.status = this.status;
      err.method = this.method;
      err.url = this.url;
      this.callback(err);
    };
    Request.prototype.agent = function() {
      console.warn("This is not supported in browser version of superagent");
      return this;
    };
    Request.prototype.ca = Request.prototype.agent;
    Request.prototype.buffer = Request.prototype.ca;
    Request.prototype.write = function() {
      throw new Error("Streaming is not supported in browser version of superagent");
    };
    Request.prototype.pipe = Request.prototype.write;
    Request.prototype._isHost = function(obj) {
      return obj && _typeof(obj) === "object" && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== "[object Object]";
    };
    Request.prototype.end = function(fn) {
      if (this._endCalled) {
        console.warn("Warning: .end() was called twice. This is not supported in superagent");
      }
      this._endCalled = true;
      this._callback = fn || noop;
      this._finalizeQueryString();
      this._end();
    };
    Request.prototype._setUploadTimeout = function() {
      var self2 = this;
      if (this._uploadTimeout && !this._uploadTimeoutTimer) {
        this._uploadTimeoutTimer = setTimeout(function() {
          self2._timeoutError("Upload timeout of ", self2._uploadTimeout, "ETIMEDOUT");
        }, this._uploadTimeout);
      }
    };
    Request.prototype._end = function() {
      if (this._aborted)
        return this.callback(new Error("The request has been aborted even before .end() was called"));
      var self2 = this;
      this.xhr = request.getXHR();
      var xhr = this.xhr;
      var data = this._formData || this._data;
      this._setTimeouts();
      xhr.onreadystatechange = function() {
        var readyState = xhr.readyState;
        if (readyState >= 2 && self2._responseTimeoutTimer) {
          clearTimeout(self2._responseTimeoutTimer);
        }
        if (readyState !== 4) {
          return;
        }
        var status;
        try {
          status = xhr.status;
        } catch (_unused5) {
          status = 0;
        }
        if (!status) {
          if (self2.timedout || self2._aborted)
            return;
          return self2.crossDomainError();
        }
        self2.emit("end");
      };
      var handleProgress = function handleProgress2(direction, e) {
        if (e.total > 0) {
          e.percent = e.loaded / e.total * 100;
          if (e.percent === 100) {
            clearTimeout(self2._uploadTimeoutTimer);
          }
        }
        e.direction = direction;
        self2.emit("progress", e);
      };
      if (this.hasListeners("progress")) {
        try {
          xhr.addEventListener("progress", handleProgress.bind(null, "download"));
          if (xhr.upload) {
            xhr.upload.addEventListener("progress", handleProgress.bind(null, "upload"));
          }
        } catch (_unused6) {
        }
      }
      if (xhr.upload) {
        this._setUploadTimeout();
      }
      try {
        if (this.username && this.password) {
          xhr.open(this.method, this.url, true, this.username, this.password);
        } else {
          xhr.open(this.method, this.url, true);
        }
      } catch (err) {
        return this.callback(err);
      }
      if (this._withCredentials)
        xhr.withCredentials = true;
      if (!this._formData && this.method !== "GET" && this.method !== "HEAD" && typeof data !== "string" && !this._isHost(data)) {
        var contentType = this._header["content-type"];
        var _serialize = this._serializer || request.serialize[contentType ? contentType.split(";")[0] : ""];
        if (!_serialize && isJSON(contentType)) {
          _serialize = request.serialize["application/json"];
        }
        if (_serialize)
          data = _serialize(data);
      }
      for (var field in this.header) {
        if (this.header[field] === null)
          continue;
        if (Object.prototype.hasOwnProperty.call(this.header, field))
          xhr.setRequestHeader(field, this.header[field]);
      }
      if (this._responseType) {
        xhr.responseType = this._responseType;
      }
      this.emit("request", this);
      xhr.send(typeof data === "undefined" ? null : data);
    };
    request.agent = function() {
      return new Agent();
    };
    ["GET", "POST", "OPTIONS", "PATCH", "PUT", "DELETE"].forEach(function(method) {
      Agent.prototype[method.toLowerCase()] = function(url, fn) {
        var req = new request.Request(method, url);
        this._setDefaults(req);
        if (fn) {
          req.end(fn);
        }
        return req;
      };
    });
    Agent.prototype.del = Agent.prototype.delete;
    request.get = function(url, data, fn) {
      var req = request("GET", url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data)
        req.query(data);
      if (fn)
        req.end(fn);
      return req;
    };
    request.head = function(url, data, fn) {
      var req = request("HEAD", url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data)
        req.query(data);
      if (fn)
        req.end(fn);
      return req;
    };
    request.options = function(url, data, fn) {
      var req = request("OPTIONS", url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data)
        req.send(data);
      if (fn)
        req.end(fn);
      return req;
    };
    function del(url, data, fn) {
      var req = request("DELETE", url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data)
        req.send(data);
      if (fn)
        req.end(fn);
      return req;
    }
    request.del = del;
    request.delete = del;
    request.patch = function(url, data, fn) {
      var req = request("PATCH", url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data)
        req.send(data);
      if (fn)
        req.end(fn);
      return req;
    };
    request.post = function(url, data, fn) {
      var req = request("POST", url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data)
        req.send(data);
      if (fn)
        req.end(fn);
      return req;
    };
    request.put = function(url, data, fn) {
      var req = request("PUT", url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data)
        req.send(data);
      if (fn)
        req.end(fn);
      return req;
    };
  }
});

// browser-external:querystring
var require_querystring = __commonJS({
  "browser-external:querystring"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "querystring" has been externalized for browser compatibility. Cannot access "querystring.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../node_modules/finnhub/dist/ApiClient.js
var require_ApiClient = __commonJS({
  "../node_modules/finnhub/dist/ApiClient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _superagent = _interopRequireDefault(require_client());
    var _querystring = _interopRequireDefault(require_querystring());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ApiClient = function() {
      function ApiClient2() {
        _classCallCheck(this, ApiClient2);
        this.basePath = "https://finnhub.io/api/v1".replace(/\/+$/, "");
        this.authentications = {
          "api_key": {
            type: "apiKey",
            "in": "query",
            name: "token"
          }
        };
        this.defaultHeaders = {
          "User-Agent": "OpenAPI-Generator/1.2.18/Javascript"
        };
        this.timeout = 6e4;
        this.cache = true;
        this.enableCookies = false;
        if (typeof window === "undefined") {
          this.agent = new _superagent["default"].agent();
        }
        this.requestAgent = null;
        this.plugins = null;
      }
      _createClass(ApiClient2, [{
        key: "paramToString",
        value: function paramToString(param) {
          if (param == void 0 || param == null) {
            return "";
          }
          if (param instanceof Date) {
            return param.toJSON();
          }
          if (ApiClient2.canBeJsonified(param)) {
            return JSON.stringify(param);
          }
          return param.toString();
        }
        /**
        * Returns a boolean indicating if the parameter could be JSON.stringified
        * @param param The actual parameter
        * @returns {Boolean} Flag indicating if <code>param</code> can be JSON.stringified
        */
      }, {
        key: "buildUrl",
        /**
         * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.
         * NOTE: query parameters are not handled here.
         * @param {String} path The path to append to the base URL.
         * @param {Object} pathParams The parameter values to append.
         * @param {String} apiBasePath Base path defined in the path, operation level to override the default one
         * @returns {String} The encoded path with parameter values substituted.
         */
        value: function buildUrl(path, pathParams, apiBasePath) {
          var _this = this;
          if (!path.match(/^\//)) {
            path = "/" + path;
          }
          var url = this.basePath + path;
          if (apiBasePath !== null && apiBasePath !== void 0) {
            url = apiBasePath + path;
          }
          url = url.replace(/\{([\w-\.]+)\}/g, function(fullMatch, key) {
            var value;
            if (pathParams.hasOwnProperty(key)) {
              value = _this.paramToString(pathParams[key]);
            } else {
              value = fullMatch;
            }
            return encodeURIComponent(value);
          });
          return url;
        }
        /**
        * Checks whether the given content type represents JSON.<br>
        * JSON content type examples:<br>
        * <ul>
        * <li>application/json</li>
        * <li>application/json; charset=UTF8</li>
        * <li>APPLICATION/JSON</li>
        * </ul>
        * @param {String} contentType The MIME content type to check.
        * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.
        */
      }, {
        key: "isJsonMime",
        value: function isJsonMime(contentType) {
          return Boolean(contentType != null && contentType.match(/^application\/json(;.*)?$/i));
        }
        /**
        * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.
        * @param {Array.<String>} contentTypes
        * @returns {String} The chosen content type, preferring JSON.
        */
      }, {
        key: "jsonPreferredMime",
        value: function jsonPreferredMime(contentTypes) {
          for (var i = 0; i < contentTypes.length; i++) {
            if (this.isJsonMime(contentTypes[i])) {
              return contentTypes[i];
            }
          }
          return contentTypes[0];
        }
        /**
        * Checks whether the given parameter value represents file-like content.
        * @param param The parameter to check.
        * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.
        */
      }, {
        key: "isFileParam",
        value: function isFileParam(param) {
          if (typeof __require === "function") {
            var fs;
            try {
              fs = require_fs();
            } catch (err) {
            }
            if (fs && fs.ReadStream && param instanceof fs.ReadStream) {
              return true;
            }
          }
          if (typeof Buffer === "function" && param instanceof Buffer) {
            return true;
          }
          if (typeof Blob === "function" && param instanceof Blob) {
            return true;
          }
          if (typeof File === "function" && param instanceof File) {
            return true;
          }
          return false;
        }
        /**
        * Normalizes parameter values:
        * <ul>
        * <li>remove nils</li>
        * <li>keep files and arrays</li>
        * <li>format to string with `paramToString` for other cases</li>
        * </ul>
        * @param {Object.<String, Object>} params The parameters as object properties.
        * @returns {Object.<String, Object>} normalized parameters.
        */
      }, {
        key: "normalizeParams",
        value: function normalizeParams(params) {
          var newParams = {};
          for (var key in params) {
            if (params.hasOwnProperty(key) && params[key] != void 0 && params[key] != null) {
              var value = params[key];
              if (this.isFileParam(value) || Array.isArray(value)) {
                newParams[key] = value;
              } else {
                newParams[key] = this.paramToString(value);
              }
            }
          }
          return newParams;
        }
        /**
        * Builds a string representation of an array-type actual parameter, according to the given collection format.
        * @param {Array} param An array parameter.
        * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.
        * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns
        * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.
        */
      }, {
        key: "buildCollectionParam",
        value: function buildCollectionParam(param, collectionFormat) {
          if (param == null) {
            return null;
          }
          switch (collectionFormat) {
            case "csv":
              return param.map(this.paramToString, this).join(",");
            case "ssv":
              return param.map(this.paramToString, this).join(" ");
            case "tsv":
              return param.map(this.paramToString, this).join("	");
            case "pipes":
              return param.map(this.paramToString, this).join("|");
            case "multi":
              return param.map(this.paramToString, this);
            case "passthrough":
              return param;
            default:
              throw new Error("Unknown collection format: " + collectionFormat);
          }
        }
        /**
        * Applies authentication headers to the request.
        * @param {Object} request The request object created by a <code>superagent()</code> call.
        * @param {Array.<String>} authNames An array of authentication method names.
        */
      }, {
        key: "applyAuthToRequest",
        value: function applyAuthToRequest(request, authNames) {
          var _this2 = this;
          authNames.forEach(function(authName) {
            var auth = _this2.authentications[authName];
            switch (auth.type) {
              case "basic":
                if (auth.username || auth.password) {
                  request.auth(auth.username || "", auth.password || "");
                }
                break;
              case "bearer":
                if (auth.accessToken) {
                  var localVarBearerToken = typeof auth.accessToken === "function" ? auth.accessToken() : auth.accessToken;
                  request.set({
                    "Authorization": "Bearer " + localVarBearerToken
                  });
                }
                break;
              case "apiKey":
                if (auth.apiKey) {
                  var data = {};
                  if (auth.apiKeyPrefix) {
                    data[auth.name] = auth.apiKeyPrefix + " " + auth.apiKey;
                  } else {
                    data[auth.name] = auth.apiKey;
                  }
                  if (auth["in"] === "header") {
                    request.set(data);
                  } else {
                    request.query(data);
                  }
                }
                break;
              case "oauth2":
                if (auth.accessToken) {
                  request.set({
                    "Authorization": "Bearer " + auth.accessToken
                  });
                }
                break;
              default:
                throw new Error("Unknown authentication type: " + auth.type);
            }
          });
        }
        /**
         * Deserializes an HTTP response body into a value of the specified type.
         * @param {Object} response A SuperAgent response object.
         * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types
         * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To
         * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:
         * all properties on <code>data<code> will be converted to this type.
         * @returns A value of the specified type.
         */
      }, {
        key: "deserialize",
        value: function deserialize(response, returnType) {
          if (response == null || returnType == null || response.status == 204) {
            return null;
          }
          var data = response.body;
          if (data == null || _typeof(data) === "object" && typeof data.length === "undefined" && !Object.keys(data).length) {
            data = response.text;
          }
          return ApiClient2.convertToType(data, returnType);
        }
        /**
         * Callback function to receive the result of the operation.
         * @callback module:ApiClient~callApiCallback
         * @param {String} error Error message, if any.
         * @param data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Invokes the REST service using the supplied settings and parameters.
         * @param {String} path The base URL to invoke.
         * @param {String} httpMethod The HTTP method to use.
         * @param {Object.<String, String>} pathParams A map of path parameters and their values.
         * @param {Object.<String, Object>} queryParams A map of query parameters and their values.
         * @param {Object.<String, Object>} headerParams A map of header parameters and their values.
         * @param {Object.<String, Object>} formParams A map of form parameters and their values.
         * @param {Object} bodyParam The value to pass as the request body.
         * @param {Array.<String>} authNames An array of authentication type names.
         * @param {Array.<String>} contentTypes An array of request MIME types.
         * @param {Array.<String>} accepts An array of acceptable response MIME types.
         * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the
         * constructor for a complex type.
         * @param {String} apiBasePath base path defined in the operation/path level to override the default one
         * @param {module:ApiClient~callApiCallback} callback The callback function.
         * @returns {Object} The SuperAgent request object.
         */
      }, {
        key: "callApi",
        value: function callApi(path, httpMethod, pathParams, queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts, returnType, apiBasePath, callback) {
          var _this3 = this;
          var url = this.buildUrl(path, pathParams, apiBasePath);
          var request = (0, _superagent["default"])(httpMethod, url);
          if (this.plugins !== null) {
            for (var index in this.plugins) {
              if (this.plugins.hasOwnProperty(index)) {
                request.use(this.plugins[index]);
              }
            }
          }
          this.applyAuthToRequest(request, authNames);
          if (httpMethod.toUpperCase() === "GET" && this.cache === false) {
            queryParams["_"] = (/* @__PURE__ */ new Date()).getTime();
          }
          request.query(this.normalizeParams(queryParams));
          request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));
          if (this.requestAgent) {
            request.agent(this.requestAgent);
          }
          request.timeout(this.timeout);
          var contentType = this.jsonPreferredMime(contentTypes);
          if (contentType) {
            if (contentType != "multipart/form-data") {
              request.type(contentType);
            }
          }
          if (contentType === "application/x-www-form-urlencoded") {
            request.send(_querystring["default"].stringify(this.normalizeParams(formParams)));
          } else if (contentType == "multipart/form-data") {
            var _formParams = this.normalizeParams(formParams);
            for (var key in _formParams) {
              if (_formParams.hasOwnProperty(key)) {
                var _formParamsValue = _formParams[key];
                if (this.isFileParam(_formParamsValue)) {
                  request.attach(key, _formParamsValue);
                } else if (Array.isArray(_formParamsValue) && _formParamsValue.length && this.isFileParam(_formParamsValue[0])) {
                  _formParamsValue.forEach(function(file) {
                    return request.attach(key, file);
                  });
                } else {
                  request.field(key, _formParamsValue);
                }
              }
            }
          } else if (bodyParam !== null && bodyParam !== void 0) {
            if (!request.header["Content-Type"]) {
              request.type("application/json");
            }
            request.send(bodyParam);
          }
          var accept = this.jsonPreferredMime(accepts);
          if (accept) {
            request.accept(accept);
          }
          if (returnType === "Blob") {
            request.responseType("blob");
          } else if (returnType === "String") {
            request.responseType("string");
          }
          if (this.enableCookies) {
            if (typeof window === "undefined") {
              this.agent._attachCookies(request);
            } else {
              request.withCredentials();
            }
          }
          request.end(function(error, response) {
            if (callback) {
              var data = null;
              if (!error) {
                try {
                  data = _this3.deserialize(response, returnType);
                  if (_this3.enableCookies && typeof window === "undefined") {
                    _this3.agent._saveCookies(response);
                  }
                } catch (err) {
                  error = err;
                }
              }
              callback(error, data, response);
            }
          });
          return request;
        }
        /**
        * Parses an ISO-8601 string representation or epoch representation of a date value.
        * @param {String} str The date value as a string.
        * @returns {Date} The parsed date object.
        */
      }, {
        key: "hostSettings",
        /**
          * Gets an array of host settings
          * @returns An array of host settings
          */
        value: function hostSettings() {
          return [{
            "url": "https://finnhub.io/api/v1",
            "description": "No description provided"
          }];
        }
      }, {
        key: "getBasePathFromSettings",
        value: function getBasePathFromSettings(index) {
          var variables = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var servers = this.hostSettings();
          if (index < 0 || index >= servers.length) {
            throw new Error("Invalid index " + index + " when selecting the host settings. Must be less than " + servers.length);
          }
          var server = servers[index];
          var url = server["url"];
          for (var variable_name in server["variables"]) {
            if (variable_name in variables) {
              var variable = server["variables"][variable_name];
              if (!("enum_values" in variable) || variable["enum_values"].includes(variables[variable_name])) {
                url = url.replace("{" + variable_name + "}", variables[variable_name]);
              } else {
                throw new Error("The variable `" + variable_name + "` in the host URL has invalid value " + variables[variable_name] + ". Must be " + server["variables"][variable_name]["enum_values"] + ".");
              }
            } else {
              url = url.replace("{" + variable_name + "}", server["variables"][variable_name]["default_value"]);
            }
          }
          return url;
        }
        /**
        * Constructs a new map or array model from REST data.
        * @param data {Object|Array} The REST data.
        * @param obj {Object|Array} The target object or array.
        */
      }], [{
        key: "canBeJsonified",
        value: function canBeJsonified(str) {
          if (typeof str !== "string" && _typeof(str) !== "object")
            return false;
          try {
            var type = str.toString();
            return type === "[object Object]" || type === "[object Array]";
          } catch (err) {
            return false;
          }
        }
      }, {
        key: "parseDate",
        value: function parseDate(str) {
          if (isNaN(str)) {
            return new Date(str.replace(/(\d)(T)(\d)/i, "$1 $3"));
          }
          return /* @__PURE__ */ new Date(+str);
        }
        /**
        * Converts a value to the specified type.
        * @param {(String|Object)} data The data to convert, as a string or object.
        * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types
        * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To
        * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:
        * all properties on <code>data<code> will be converted to this type.
        * @returns An instance of the specified type or null or undefined if data is null or undefined.
        */
      }, {
        key: "convertToType",
        value: function convertToType(data, type) {
          if (data === null || data === void 0)
            return data;
          switch (type) {
            case "Boolean":
              return Boolean(data);
            case "Integer":
              return parseInt(data, 10);
            case "Number":
              return parseFloat(data);
            case "String":
              return String(data);
            case "Date":
              return ApiClient2.parseDate(String(data));
            case "Blob":
              return data;
            default:
              if (type === Object) {
                return data;
              } else if (typeof type.constructFromObject === "function") {
                return type.constructFromObject(data);
              } else if (Array.isArray(type)) {
                var itemType = type[0];
                return data.map(function(item) {
                  return ApiClient2.convertToType(item, itemType);
                });
              } else if (_typeof(type) === "object") {
                var keyType, valueType;
                for (var k in type) {
                  if (type.hasOwnProperty(k)) {
                    keyType = k;
                    valueType = type[k];
                    break;
                  }
                }
                var result = {};
                for (var k in data) {
                  if (data.hasOwnProperty(k)) {
                    var key = ApiClient2.convertToType(k, keyType);
                    var value = ApiClient2.convertToType(data[k], valueType);
                    result[key] = value;
                  }
                }
                return result;
              } else {
                return data;
              }
          }
        }
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj, itemType) {
          if (Array.isArray(data)) {
            for (var i = 0; i < data.length; i++) {
              if (data.hasOwnProperty(i))
                obj[i] = ApiClient2.convertToType(data[i], itemType);
            }
          } else {
            for (var k in data) {
              if (data.hasOwnProperty(k))
                obj[k] = ApiClient2.convertToType(data[k], itemType);
            }
          }
        }
      }]);
      return ApiClient2;
    }();
    ApiClient.CollectionFormatEnum = {
      /**
       * Comma-separated values. Value: <code>csv</code>
       * @const
       */
      CSV: ",",
      /**
       * Space-separated values. Value: <code>ssv</code>
       * @const
       */
      SSV: " ",
      /**
       * Tab-separated values. Value: <code>tsv</code>
       * @const
       */
      TSV: "	",
      /**
       * Pipe(|)-separated values. Value: <code>pipes</code>
       * @const
       */
      PIPES: "|",
      /**
       * Native array. Value: <code>multi</code>
       * @const
       */
      MULTI: "multi"
    };
    ApiClient.instance = new ApiClient();
    var _default = ApiClient;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Indicator.js
var require_Indicator = __commonJS({
  "../node_modules/finnhub/dist/model/Indicator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Indicator = function() {
      function Indicator2() {
        _classCallCheck(this, Indicator2);
        Indicator2.initialize(this);
      }
      _createClass(Indicator2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Indicator</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Indicator} obj Optional instance to populate.
         * @return {module:model/Indicator} The populated <code>Indicator</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Indicator2();
            if (data.hasOwnProperty("buy")) {
              obj["buy"] = _ApiClient["default"].convertToType(data["buy"], "Number");
            }
            if (data.hasOwnProperty("neutral")) {
              obj["neutral"] = _ApiClient["default"].convertToType(data["neutral"], "Number");
            }
            if (data.hasOwnProperty("sell")) {
              obj["sell"] = _ApiClient["default"].convertToType(data["sell"], "Number");
            }
          }
          return obj;
        }
      }]);
      return Indicator2;
    }();
    Indicator.prototype["buy"] = void 0;
    Indicator.prototype["neutral"] = void 0;
    Indicator.prototype["sell"] = void 0;
    var _default = Indicator;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/TechnicalAnalysis.js
var require_TechnicalAnalysis = __commonJS({
  "../node_modules/finnhub/dist/model/TechnicalAnalysis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _Indicator = _interopRequireDefault(require_Indicator());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var TechnicalAnalysis = function() {
      function TechnicalAnalysis2() {
        _classCallCheck(this, TechnicalAnalysis2);
        TechnicalAnalysis2.initialize(this);
      }
      _createClass(TechnicalAnalysis2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>TechnicalAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/TechnicalAnalysis} obj Optional instance to populate.
         * @return {module:model/TechnicalAnalysis} The populated <code>TechnicalAnalysis</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new TechnicalAnalysis2();
            if (data.hasOwnProperty("count")) {
              obj["count"] = _Indicator["default"].constructFromObject(data["count"]);
            }
            if (data.hasOwnProperty("signal")) {
              obj["signal"] = _ApiClient["default"].convertToType(data["signal"], "String");
            }
          }
          return obj;
        }
      }]);
      return TechnicalAnalysis2;
    }();
    TechnicalAnalysis.prototype["count"] = void 0;
    TechnicalAnalysis.prototype["signal"] = void 0;
    var _default = TechnicalAnalysis;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Trend.js
var require_Trend = __commonJS({
  "../node_modules/finnhub/dist/model/Trend.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Trend = function() {
      function Trend2() {
        _classCallCheck(this, Trend2);
        Trend2.initialize(this);
      }
      _createClass(Trend2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Trend</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Trend} obj Optional instance to populate.
         * @return {module:model/Trend} The populated <code>Trend</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Trend2();
            if (data.hasOwnProperty("adx")) {
              obj["adx"] = _ApiClient["default"].convertToType(data["adx"], "Number");
            }
            if (data.hasOwnProperty("trending")) {
              obj["trending"] = _ApiClient["default"].convertToType(data["trending"], "Boolean");
            }
          }
          return obj;
        }
      }]);
      return Trend2;
    }();
    Trend.prototype["adx"] = void 0;
    Trend.prototype["trending"] = void 0;
    var _default = Trend;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/AggregateIndicators.js
var require_AggregateIndicators = __commonJS({
  "../node_modules/finnhub/dist/model/AggregateIndicators.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _TechnicalAnalysis = _interopRequireDefault(require_TechnicalAnalysis());
    var _Trend = _interopRequireDefault(require_Trend());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var AggregateIndicators = function() {
      function AggregateIndicators2() {
        _classCallCheck(this, AggregateIndicators2);
        AggregateIndicators2.initialize(this);
      }
      _createClass(AggregateIndicators2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>AggregateIndicators</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/AggregateIndicators} obj Optional instance to populate.
         * @return {module:model/AggregateIndicators} The populated <code>AggregateIndicators</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new AggregateIndicators2();
            if (data.hasOwnProperty("technicalAnalysis")) {
              obj["technicalAnalysis"] = _TechnicalAnalysis["default"].constructFromObject(data["technicalAnalysis"]);
            }
            if (data.hasOwnProperty("trend")) {
              obj["trend"] = _Trend["default"].constructFromObject(data["trend"]);
            }
          }
          return obj;
        }
      }]);
      return AggregateIndicators2;
    }();
    AggregateIndicators.prototype["technicalAnalysis"] = void 0;
    AggregateIndicators.prototype["trend"] = void 0;
    var _default = AggregateIndicators;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/BasicFinancials.js
var require_BasicFinancials = __commonJS({
  "../node_modules/finnhub/dist/model/BasicFinancials.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var BasicFinancials = function() {
      function BasicFinancials2() {
        _classCallCheck(this, BasicFinancials2);
        BasicFinancials2.initialize(this);
      }
      _createClass(BasicFinancials2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>BasicFinancials</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/BasicFinancials} obj Optional instance to populate.
         * @return {module:model/BasicFinancials} The populated <code>BasicFinancials</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new BasicFinancials2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("metricType")) {
              obj["metricType"] = _ApiClient["default"].convertToType(data["metricType"], "String");
            }
            if (data.hasOwnProperty("series")) {
              obj["series"] = _ApiClient["default"].convertToType(data["series"], Object);
            }
            if (data.hasOwnProperty("metric")) {
              obj["metric"] = _ApiClient["default"].convertToType(data["metric"], Object);
            }
          }
          return obj;
        }
      }]);
      return BasicFinancials2;
    }();
    BasicFinancials.prototype["symbol"] = void 0;
    BasicFinancials.prototype["metricType"] = void 0;
    BasicFinancials.prototype["series"] = void 0;
    BasicFinancials.prototype["metric"] = void 0;
    var _default = BasicFinancials;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/BondCandles.js
var require_BondCandles = __commonJS({
  "../node_modules/finnhub/dist/model/BondCandles.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var BondCandles = function() {
      function BondCandles2() {
        _classCallCheck(this, BondCandles2);
        BondCandles2.initialize(this);
      }
      _createClass(BondCandles2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>BondCandles</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/BondCandles} obj Optional instance to populate.
         * @return {module:model/BondCandles} The populated <code>BondCandles</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new BondCandles2();
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], ["Number"]);
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], ["Number"]);
            }
            if (data.hasOwnProperty("s")) {
              obj["s"] = _ApiClient["default"].convertToType(data["s"], "String");
            }
          }
          return obj;
        }
      }]);
      return BondCandles2;
    }();
    BondCandles.prototype["c"] = void 0;
    BondCandles.prototype["t"] = void 0;
    BondCandles.prototype["s"] = void 0;
    var _default = BondCandles;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/BondProfile.js
var require_BondProfile = __commonJS({
  "../node_modules/finnhub/dist/model/BondProfile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var BondProfile = function() {
      function BondProfile2() {
        _classCallCheck(this, BondProfile2);
        BondProfile2.initialize(this);
      }
      _createClass(BondProfile2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>BondProfile</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/BondProfile} obj Optional instance to populate.
         * @return {module:model/BondProfile} The populated <code>BondProfile</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new BondProfile2();
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("figi")) {
              obj["figi"] = _ApiClient["default"].convertToType(data["figi"], "String");
            }
            if (data.hasOwnProperty("coupon")) {
              obj["coupon"] = _ApiClient["default"].convertToType(data["coupon"], "Number");
            }
            if (data.hasOwnProperty("maturityDate")) {
              obj["maturityDate"] = _ApiClient["default"].convertToType(data["maturityDate"], "String");
            }
            if (data.hasOwnProperty("offeringPrice")) {
              obj["offeringPrice"] = _ApiClient["default"].convertToType(data["offeringPrice"], "Number");
            }
            if (data.hasOwnProperty("issueDate")) {
              obj["issueDate"] = _ApiClient["default"].convertToType(data["issueDate"], "String");
            }
            if (data.hasOwnProperty("bondType")) {
              obj["bondType"] = _ApiClient["default"].convertToType(data["bondType"], "String");
            }
            if (data.hasOwnProperty("debtType")) {
              obj["debtType"] = _ApiClient["default"].convertToType(data["debtType"], "String");
            }
            if (data.hasOwnProperty("industryGroup")) {
              obj["industryGroup"] = _ApiClient["default"].convertToType(data["industryGroup"], "String");
            }
            if (data.hasOwnProperty("industrySubGroup")) {
              obj["industrySubGroup"] = _ApiClient["default"].convertToType(data["industrySubGroup"], "String");
            }
            if (data.hasOwnProperty("asset")) {
              obj["asset"] = _ApiClient["default"].convertToType(data["asset"], "String");
            }
            if (data.hasOwnProperty("assetType")) {
              obj["assetType"] = _ApiClient["default"].convertToType(data["assetType"], "String");
            }
            if (data.hasOwnProperty("datedDate")) {
              obj["datedDate"] = _ApiClient["default"].convertToType(data["datedDate"], "String");
            }
            if (data.hasOwnProperty("firstCouponDate")) {
              obj["firstCouponDate"] = _ApiClient["default"].convertToType(data["firstCouponDate"], "String");
            }
            if (data.hasOwnProperty("originalOffering")) {
              obj["originalOffering"] = _ApiClient["default"].convertToType(data["originalOffering"], "Number");
            }
            if (data.hasOwnProperty("amountOutstanding")) {
              obj["amountOutstanding"] = _ApiClient["default"].convertToType(data["amountOutstanding"], "Number");
            }
            if (data.hasOwnProperty("paymentFrequency")) {
              obj["paymentFrequency"] = _ApiClient["default"].convertToType(data["paymentFrequency"], "String");
            }
            if (data.hasOwnProperty("securityLevel")) {
              obj["securityLevel"] = _ApiClient["default"].convertToType(data["securityLevel"], "String");
            }
            if (data.hasOwnProperty("callable")) {
              obj["callable"] = _ApiClient["default"].convertToType(data["callable"], "Boolean");
            }
            if (data.hasOwnProperty("couponType")) {
              obj["couponType"] = _ApiClient["default"].convertToType(data["couponType"], "String");
            }
          }
          return obj;
        }
      }]);
      return BondProfile2;
    }();
    BondProfile.prototype["isin"] = void 0;
    BondProfile.prototype["cusip"] = void 0;
    BondProfile.prototype["figi"] = void 0;
    BondProfile.prototype["coupon"] = void 0;
    BondProfile.prototype["maturityDate"] = void 0;
    BondProfile.prototype["offeringPrice"] = void 0;
    BondProfile.prototype["issueDate"] = void 0;
    BondProfile.prototype["bondType"] = void 0;
    BondProfile.prototype["debtType"] = void 0;
    BondProfile.prototype["industryGroup"] = void 0;
    BondProfile.prototype["industrySubGroup"] = void 0;
    BondProfile.prototype["asset"] = void 0;
    BondProfile.prototype["assetType"] = void 0;
    BondProfile.prototype["datedDate"] = void 0;
    BondProfile.prototype["firstCouponDate"] = void 0;
    BondProfile.prototype["originalOffering"] = void 0;
    BondProfile.prototype["amountOutstanding"] = void 0;
    BondProfile.prototype["paymentFrequency"] = void 0;
    BondProfile.prototype["securityLevel"] = void 0;
    BondProfile.prototype["callable"] = void 0;
    BondProfile.prototype["couponType"] = void 0;
    var _default = BondProfile;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/BondTickData.js
var require_BondTickData = __commonJS({
  "../node_modules/finnhub/dist/model/BondTickData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var BondTickData = function() {
      function BondTickData2() {
        _classCallCheck(this, BondTickData2);
        BondTickData2.initialize(this);
      }
      _createClass(BondTickData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>BondTickData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/BondTickData} obj Optional instance to populate.
         * @return {module:model/BondTickData} The populated <code>BondTickData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new BondTickData2();
            if (data.hasOwnProperty("skip")) {
              obj["skip"] = _ApiClient["default"].convertToType(data["skip"], "Number");
            }
            if (data.hasOwnProperty("count")) {
              obj["count"] = _ApiClient["default"].convertToType(data["count"], "Number");
            }
            if (data.hasOwnProperty("total")) {
              obj["total"] = _ApiClient["default"].convertToType(data["total"], "Number");
            }
            if (data.hasOwnProperty("v")) {
              obj["v"] = _ApiClient["default"].convertToType(data["v"], ["Number"]);
            }
            if (data.hasOwnProperty("p")) {
              obj["p"] = _ApiClient["default"].convertToType(data["p"], ["Number"]);
            }
            if (data.hasOwnProperty("y")) {
              obj["y"] = _ApiClient["default"].convertToType(data["y"], ["Number"]);
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], ["Number"]);
            }
            if (data.hasOwnProperty("si")) {
              obj["si"] = _ApiClient["default"].convertToType(data["si"], ["String"]);
            }
            if (data.hasOwnProperty("cp")) {
              obj["cp"] = _ApiClient["default"].convertToType(data["cp"], ["String"]);
            }
            if (data.hasOwnProperty("rp")) {
              obj["rp"] = _ApiClient["default"].convertToType(data["rp"], ["String"]);
            }
            if (data.hasOwnProperty("ats")) {
              obj["ats"] = _ApiClient["default"].convertToType(data["ats"], ["String"]);
            }
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], [["String"]]);
            }
          }
          return obj;
        }
      }]);
      return BondTickData2;
    }();
    BondTickData.prototype["skip"] = void 0;
    BondTickData.prototype["count"] = void 0;
    BondTickData.prototype["total"] = void 0;
    BondTickData.prototype["v"] = void 0;
    BondTickData.prototype["p"] = void 0;
    BondTickData.prototype["y"] = void 0;
    BondTickData.prototype["t"] = void 0;
    BondTickData.prototype["si"] = void 0;
    BondTickData.prototype["cp"] = void 0;
    BondTickData.prototype["rp"] = void 0;
    BondTickData.prototype["ats"] = void 0;
    BondTickData.prototype["c"] = void 0;
    var _default = BondTickData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/BondYieldCurveInfo.js
var require_BondYieldCurveInfo = __commonJS({
  "../node_modules/finnhub/dist/model/BondYieldCurveInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var BondYieldCurveInfo = function() {
      function BondYieldCurveInfo2() {
        _classCallCheck(this, BondYieldCurveInfo2);
        BondYieldCurveInfo2.initialize(this);
      }
      _createClass(BondYieldCurveInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>BondYieldCurveInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/BondYieldCurveInfo} obj Optional instance to populate.
         * @return {module:model/BondYieldCurveInfo} The populated <code>BondYieldCurveInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new BondYieldCurveInfo2();
            if (data.hasOwnProperty("d")) {
              obj["d"] = _ApiClient["default"].convertToType(data["d"], "String");
            }
            if (data.hasOwnProperty("v")) {
              obj["v"] = _ApiClient["default"].convertToType(data["v"], "Number");
            }
          }
          return obj;
        }
      }]);
      return BondYieldCurveInfo2;
    }();
    BondYieldCurveInfo.prototype["d"] = void 0;
    BondYieldCurveInfo.prototype["v"] = void 0;
    var _default = BondYieldCurveInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/BondYieldCurve.js
var require_BondYieldCurve = __commonJS({
  "../node_modules/finnhub/dist/model/BondYieldCurve.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _BondYieldCurveInfo = _interopRequireDefault(require_BondYieldCurveInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var BondYieldCurve = function() {
      function BondYieldCurve2() {
        _classCallCheck(this, BondYieldCurve2);
        BondYieldCurve2.initialize(this);
      }
      _createClass(BondYieldCurve2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>BondYieldCurve</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/BondYieldCurve} obj Optional instance to populate.
         * @return {module:model/BondYieldCurve} The populated <code>BondYieldCurve</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new BondYieldCurve2();
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_BondYieldCurveInfo["default"]]);
            }
            if (data.hasOwnProperty("code")) {
              obj["code"] = _ApiClient["default"].convertToType(data["code"], "String");
            }
          }
          return obj;
        }
      }]);
      return BondYieldCurve2;
    }();
    BondYieldCurve.prototype["data"] = void 0;
    BondYieldCurve.prototype["code"] = void 0;
    var _default = BondYieldCurve;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/BreakdownItem.js
var require_BreakdownItem = __commonJS({
  "../node_modules/finnhub/dist/model/BreakdownItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var BreakdownItem = function() {
      function BreakdownItem2() {
        _classCallCheck(this, BreakdownItem2);
        BreakdownItem2.initialize(this);
      }
      _createClass(BreakdownItem2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>BreakdownItem</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/BreakdownItem} obj Optional instance to populate.
         * @return {module:model/BreakdownItem} The populated <code>BreakdownItem</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new BreakdownItem2();
            if (data.hasOwnProperty("accessNumber")) {
              obj["accessNumber"] = _ApiClient["default"].convertToType(data["accessNumber"], "String");
            }
            if (data.hasOwnProperty("breakdown")) {
              obj["breakdown"] = _ApiClient["default"].convertToType(data["breakdown"], Object);
            }
          }
          return obj;
        }
      }]);
      return BreakdownItem2;
    }();
    BreakdownItem.prototype["accessNumber"] = void 0;
    BreakdownItem.prototype["breakdown"] = void 0;
    var _default = BreakdownItem;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Company.js
var require_Company = __commonJS({
  "../node_modules/finnhub/dist/model/Company.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Company = function() {
      function Company2() {
        _classCallCheck(this, Company2);
        Company2.initialize(this);
      }
      _createClass(Company2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Company</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Company} obj Optional instance to populate.
         * @return {module:model/Company} The populated <code>Company</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Company2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("age")) {
              obj["age"] = _ApiClient["default"].convertToType(data["age"], "Number");
            }
            if (data.hasOwnProperty("title")) {
              obj["title"] = _ApiClient["default"].convertToType(data["title"], "String");
            }
            if (data.hasOwnProperty("since")) {
              obj["since"] = _ApiClient["default"].convertToType(data["since"], "String");
            }
            if (data.hasOwnProperty("sex")) {
              obj["sex"] = _ApiClient["default"].convertToType(data["sex"], "String");
            }
            if (data.hasOwnProperty("compensation")) {
              obj["compensation"] = _ApiClient["default"].convertToType(data["compensation"], "Number");
            }
            if (data.hasOwnProperty("currency")) {
              obj["currency"] = _ApiClient["default"].convertToType(data["currency"], "String");
            }
          }
          return obj;
        }
      }]);
      return Company2;
    }();
    Company.prototype["name"] = void 0;
    Company.prototype["age"] = void 0;
    Company.prototype["title"] = void 0;
    Company.prototype["since"] = void 0;
    Company.prototype["sex"] = void 0;
    Company.prototype["compensation"] = void 0;
    Company.prototype["currency"] = void 0;
    var _default = Company;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyESG.js
var require_CompanyESG = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyESG.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyESG = function() {
      function CompanyESG2() {
        _classCallCheck(this, CompanyESG2);
        CompanyESG2.initialize(this);
      }
      _createClass(CompanyESG2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyESG</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyESG} obj Optional instance to populate.
         * @return {module:model/CompanyESG} The populated <code>CompanyESG</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyESG2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("totalESGScore")) {
              obj["totalESGScore"] = _ApiClient["default"].convertToType(data["totalESGScore"], "Number");
            }
            if (data.hasOwnProperty("environmentScore")) {
              obj["environmentScore"] = _ApiClient["default"].convertToType(data["environmentScore"], "Number");
            }
            if (data.hasOwnProperty("governanceScore")) {
              obj["governanceScore"] = _ApiClient["default"].convertToType(data["governanceScore"], "Number");
            }
            if (data.hasOwnProperty("socialScore")) {
              obj["socialScore"] = _ApiClient["default"].convertToType(data["socialScore"], "Number");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], Object);
            }
          }
          return obj;
        }
      }]);
      return CompanyESG2;
    }();
    CompanyESG.prototype["symbol"] = void 0;
    CompanyESG.prototype["totalESGScore"] = void 0;
    CompanyESG.prototype["environmentScore"] = void 0;
    CompanyESG.prototype["governanceScore"] = void 0;
    CompanyESG.prototype["socialScore"] = void 0;
    CompanyESG.prototype["data"] = void 0;
    var _default = CompanyESG;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyEarningsQualityScoreData.js
var require_CompanyEarningsQualityScoreData = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyEarningsQualityScoreData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyEarningsQualityScoreData = function() {
      function CompanyEarningsQualityScoreData2() {
        _classCallCheck(this, CompanyEarningsQualityScoreData2);
        CompanyEarningsQualityScoreData2.initialize(this);
      }
      _createClass(CompanyEarningsQualityScoreData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyEarningsQualityScoreData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyEarningsQualityScoreData} obj Optional instance to populate.
         * @return {module:model/CompanyEarningsQualityScoreData} The populated <code>CompanyEarningsQualityScoreData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyEarningsQualityScoreData2();
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "String");
            }
            if (data.hasOwnProperty("growth")) {
              obj["growth"] = _ApiClient["default"].convertToType(data["growth"], "Number");
            }
            if (data.hasOwnProperty("profitability")) {
              obj["profitability"] = _ApiClient["default"].convertToType(data["profitability"], "Number");
            }
            if (data.hasOwnProperty("cashGenerationCapitalAllocation")) {
              obj["cashGenerationCapitalAllocation"] = _ApiClient["default"].convertToType(data["cashGenerationCapitalAllocation"], "Number");
            }
            if (data.hasOwnProperty("leverage")) {
              obj["leverage"] = _ApiClient["default"].convertToType(data["leverage"], "Number");
            }
            if (data.hasOwnProperty("score")) {
              obj["score"] = _ApiClient["default"].convertToType(data["score"], "Number");
            }
            if (data.hasOwnProperty("letterScore")) {
              obj["letterScore"] = _ApiClient["default"].convertToType(data["letterScore"], "String");
            }
          }
          return obj;
        }
      }]);
      return CompanyEarningsQualityScoreData2;
    }();
    CompanyEarningsQualityScoreData.prototype["period"] = void 0;
    CompanyEarningsQualityScoreData.prototype["growth"] = void 0;
    CompanyEarningsQualityScoreData.prototype["profitability"] = void 0;
    CompanyEarningsQualityScoreData.prototype["cashGenerationCapitalAllocation"] = void 0;
    CompanyEarningsQualityScoreData.prototype["leverage"] = void 0;
    CompanyEarningsQualityScoreData.prototype["score"] = void 0;
    CompanyEarningsQualityScoreData.prototype["letterScore"] = void 0;
    var _default = CompanyEarningsQualityScoreData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyEarningsQualityScore.js
var require_CompanyEarningsQualityScore = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyEarningsQualityScore.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _CompanyEarningsQualityScoreData = _interopRequireDefault(require_CompanyEarningsQualityScoreData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyEarningsQualityScore = function() {
      function CompanyEarningsQualityScore2() {
        _classCallCheck(this, CompanyEarningsQualityScore2);
        CompanyEarningsQualityScore2.initialize(this);
      }
      _createClass(CompanyEarningsQualityScore2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyEarningsQualityScore</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyEarningsQualityScore} obj Optional instance to populate.
         * @return {module:model/CompanyEarningsQualityScore} The populated <code>CompanyEarningsQualityScore</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyEarningsQualityScore2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("freq")) {
              obj["freq"] = _ApiClient["default"].convertToType(data["freq"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_CompanyEarningsQualityScoreData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return CompanyEarningsQualityScore2;
    }();
    CompanyEarningsQualityScore.prototype["symbol"] = void 0;
    CompanyEarningsQualityScore.prototype["freq"] = void 0;
    CompanyEarningsQualityScore.prototype["data"] = void 0;
    var _default = CompanyEarningsQualityScore;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyExecutive.js
var require_CompanyExecutive = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyExecutive.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _Company = _interopRequireDefault(require_Company());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyExecutive = function() {
      function CompanyExecutive2() {
        _classCallCheck(this, CompanyExecutive2);
        CompanyExecutive2.initialize(this);
      }
      _createClass(CompanyExecutive2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyExecutive</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyExecutive} obj Optional instance to populate.
         * @return {module:model/CompanyExecutive} The populated <code>CompanyExecutive</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyExecutive2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("executive")) {
              obj["executive"] = _ApiClient["default"].convertToType(data["executive"], [_Company["default"]]);
            }
          }
          return obj;
        }
      }]);
      return CompanyExecutive2;
    }();
    CompanyExecutive.prototype["symbol"] = void 0;
    CompanyExecutive.prototype["executive"] = void 0;
    var _default = CompanyExecutive;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyNews.js
var require_CompanyNews = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyNews.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyNews = function() {
      function CompanyNews2() {
        _classCallCheck(this, CompanyNews2);
        CompanyNews2.initialize(this);
      }
      _createClass(CompanyNews2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyNews</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyNews} obj Optional instance to populate.
         * @return {module:model/CompanyNews} The populated <code>CompanyNews</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyNews2();
            if (data.hasOwnProperty("category")) {
              obj["category"] = _ApiClient["default"].convertToType(data["category"], "String");
            }
            if (data.hasOwnProperty("datetime")) {
              obj["datetime"] = _ApiClient["default"].convertToType(data["datetime"], "Number");
            }
            if (data.hasOwnProperty("headline")) {
              obj["headline"] = _ApiClient["default"].convertToType(data["headline"], "String");
            }
            if (data.hasOwnProperty("id")) {
              obj["id"] = _ApiClient["default"].convertToType(data["id"], "Number");
            }
            if (data.hasOwnProperty("image")) {
              obj["image"] = _ApiClient["default"].convertToType(data["image"], "String");
            }
            if (data.hasOwnProperty("related")) {
              obj["related"] = _ApiClient["default"].convertToType(data["related"], "String");
            }
            if (data.hasOwnProperty("source")) {
              obj["source"] = _ApiClient["default"].convertToType(data["source"], "String");
            }
            if (data.hasOwnProperty("summary")) {
              obj["summary"] = _ApiClient["default"].convertToType(data["summary"], "String");
            }
            if (data.hasOwnProperty("url")) {
              obj["url"] = _ApiClient["default"].convertToType(data["url"], "String");
            }
          }
          return obj;
        }
      }]);
      return CompanyNews2;
    }();
    CompanyNews.prototype["category"] = void 0;
    CompanyNews.prototype["datetime"] = void 0;
    CompanyNews.prototype["headline"] = void 0;
    CompanyNews.prototype["id"] = void 0;
    CompanyNews.prototype["image"] = void 0;
    CompanyNews.prototype["related"] = void 0;
    CompanyNews.prototype["source"] = void 0;
    CompanyNews.prototype["summary"] = void 0;
    CompanyNews.prototype["url"] = void 0;
    var _default = CompanyNews;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyNewsStatistics.js
var require_CompanyNewsStatistics = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyNewsStatistics.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyNewsStatistics = function() {
      function CompanyNewsStatistics2() {
        _classCallCheck(this, CompanyNewsStatistics2);
        CompanyNewsStatistics2.initialize(this);
      }
      _createClass(CompanyNewsStatistics2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyNewsStatistics</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyNewsStatistics} obj Optional instance to populate.
         * @return {module:model/CompanyNewsStatistics} The populated <code>CompanyNewsStatistics</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyNewsStatistics2();
            if (data.hasOwnProperty("articlesInLastWeek")) {
              obj["articlesInLastWeek"] = _ApiClient["default"].convertToType(data["articlesInLastWeek"], "Number");
            }
            if (data.hasOwnProperty("buzz")) {
              obj["buzz"] = _ApiClient["default"].convertToType(data["buzz"], "Number");
            }
            if (data.hasOwnProperty("weeklyAverage")) {
              obj["weeklyAverage"] = _ApiClient["default"].convertToType(data["weeklyAverage"], "Number");
            }
          }
          return obj;
        }
      }]);
      return CompanyNewsStatistics2;
    }();
    CompanyNewsStatistics.prototype["articlesInLastWeek"] = void 0;
    CompanyNewsStatistics.prototype["buzz"] = void 0;
    CompanyNewsStatistics.prototype["weeklyAverage"] = void 0;
    var _default = CompanyNewsStatistics;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyProfile.js
var require_CompanyProfile = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyProfile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyProfile = function() {
      function CompanyProfile2() {
        _classCallCheck(this, CompanyProfile2);
        CompanyProfile2.initialize(this);
      }
      _createClass(CompanyProfile2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyProfile</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyProfile} obj Optional instance to populate.
         * @return {module:model/CompanyProfile} The populated <code>CompanyProfile</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyProfile2();
            if (data.hasOwnProperty("alias")) {
              obj["alias"] = _ApiClient["default"].convertToType(data["alias"], ["String"]);
            }
            if (data.hasOwnProperty("address")) {
              obj["address"] = _ApiClient["default"].convertToType(data["address"], "String");
            }
            if (data.hasOwnProperty("city")) {
              obj["city"] = _ApiClient["default"].convertToType(data["city"], "String");
            }
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("currency")) {
              obj["currency"] = _ApiClient["default"].convertToType(data["currency"], "String");
            }
            if (data.hasOwnProperty("estimateCurrency")) {
              obj["estimateCurrency"] = _ApiClient["default"].convertToType(data["estimateCurrency"], "String");
            }
            if (data.hasOwnProperty("marketCapCurrency")) {
              obj["marketCapCurrency"] = _ApiClient["default"].convertToType(data["marketCapCurrency"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("sedol")) {
              obj["sedol"] = _ApiClient["default"].convertToType(data["sedol"], "String");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("exchange")) {
              obj["exchange"] = _ApiClient["default"].convertToType(data["exchange"], "String");
            }
            if (data.hasOwnProperty("ggroup")) {
              obj["ggroup"] = _ApiClient["default"].convertToType(data["ggroup"], "String");
            }
            if (data.hasOwnProperty("gind")) {
              obj["gind"] = _ApiClient["default"].convertToType(data["gind"], "String");
            }
            if (data.hasOwnProperty("gsector")) {
              obj["gsector"] = _ApiClient["default"].convertToType(data["gsector"], "String");
            }
            if (data.hasOwnProperty("gsubind")) {
              obj["gsubind"] = _ApiClient["default"].convertToType(data["gsubind"], "String");
            }
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("lei")) {
              obj["lei"] = _ApiClient["default"].convertToType(data["lei"], "String");
            }
            if (data.hasOwnProperty("naicsNationalIndustry")) {
              obj["naicsNationalIndustry"] = _ApiClient["default"].convertToType(data["naicsNationalIndustry"], "String");
            }
            if (data.hasOwnProperty("naics")) {
              obj["naics"] = _ApiClient["default"].convertToType(data["naics"], "String");
            }
            if (data.hasOwnProperty("naicsSector")) {
              obj["naicsSector"] = _ApiClient["default"].convertToType(data["naicsSector"], "String");
            }
            if (data.hasOwnProperty("naicsSubsector")) {
              obj["naicsSubsector"] = _ApiClient["default"].convertToType(data["naicsSubsector"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("phone")) {
              obj["phone"] = _ApiClient["default"].convertToType(data["phone"], "String");
            }
            if (data.hasOwnProperty("state")) {
              obj["state"] = _ApiClient["default"].convertToType(data["state"], "String");
            }
            if (data.hasOwnProperty("ticker")) {
              obj["ticker"] = _ApiClient["default"].convertToType(data["ticker"], "String");
            }
            if (data.hasOwnProperty("weburl")) {
              obj["weburl"] = _ApiClient["default"].convertToType(data["weburl"], "String");
            }
            if (data.hasOwnProperty("ipo")) {
              obj["ipo"] = _ApiClient["default"].convertToType(data["ipo"], "Date");
            }
            if (data.hasOwnProperty("marketCapitalization")) {
              obj["marketCapitalization"] = _ApiClient["default"].convertToType(data["marketCapitalization"], "Number");
            }
            if (data.hasOwnProperty("shareOutstanding")) {
              obj["shareOutstanding"] = _ApiClient["default"].convertToType(data["shareOutstanding"], "Number");
            }
            if (data.hasOwnProperty("employeeTotal")) {
              obj["employeeTotal"] = _ApiClient["default"].convertToType(data["employeeTotal"], "Number");
            }
            if (data.hasOwnProperty("logo")) {
              obj["logo"] = _ApiClient["default"].convertToType(data["logo"], "String");
            }
            if (data.hasOwnProperty("finnhubIndustry")) {
              obj["finnhubIndustry"] = _ApiClient["default"].convertToType(data["finnhubIndustry"], "String");
            }
          }
          return obj;
        }
      }]);
      return CompanyProfile2;
    }();
    CompanyProfile.prototype["alias"] = void 0;
    CompanyProfile.prototype["address"] = void 0;
    CompanyProfile.prototype["city"] = void 0;
    CompanyProfile.prototype["country"] = void 0;
    CompanyProfile.prototype["currency"] = void 0;
    CompanyProfile.prototype["estimateCurrency"] = void 0;
    CompanyProfile.prototype["marketCapCurrency"] = void 0;
    CompanyProfile.prototype["cusip"] = void 0;
    CompanyProfile.prototype["sedol"] = void 0;
    CompanyProfile.prototype["description"] = void 0;
    CompanyProfile.prototype["exchange"] = void 0;
    CompanyProfile.prototype["ggroup"] = void 0;
    CompanyProfile.prototype["gind"] = void 0;
    CompanyProfile.prototype["gsector"] = void 0;
    CompanyProfile.prototype["gsubind"] = void 0;
    CompanyProfile.prototype["isin"] = void 0;
    CompanyProfile.prototype["lei"] = void 0;
    CompanyProfile.prototype["naicsNationalIndustry"] = void 0;
    CompanyProfile.prototype["naics"] = void 0;
    CompanyProfile.prototype["naicsSector"] = void 0;
    CompanyProfile.prototype["naicsSubsector"] = void 0;
    CompanyProfile.prototype["name"] = void 0;
    CompanyProfile.prototype["phone"] = void 0;
    CompanyProfile.prototype["state"] = void 0;
    CompanyProfile.prototype["ticker"] = void 0;
    CompanyProfile.prototype["weburl"] = void 0;
    CompanyProfile.prototype["ipo"] = void 0;
    CompanyProfile.prototype["marketCapitalization"] = void 0;
    CompanyProfile.prototype["shareOutstanding"] = void 0;
    CompanyProfile.prototype["employeeTotal"] = void 0;
    CompanyProfile.prototype["logo"] = void 0;
    CompanyProfile.prototype["finnhubIndustry"] = void 0;
    var _default = CompanyProfile;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CompanyProfile2.js
var require_CompanyProfile2 = __commonJS({
  "../node_modules/finnhub/dist/model/CompanyProfile2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CompanyProfile2 = function() {
      function CompanyProfile22() {
        _classCallCheck(this, CompanyProfile22);
        CompanyProfile22.initialize(this);
      }
      _createClass(CompanyProfile22, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CompanyProfile2</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CompanyProfile2} obj Optional instance to populate.
         * @return {module:model/CompanyProfile2} The populated <code>CompanyProfile2</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CompanyProfile22();
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("currency")) {
              obj["currency"] = _ApiClient["default"].convertToType(data["currency"], "String");
            }
            if (data.hasOwnProperty("exchange")) {
              obj["exchange"] = _ApiClient["default"].convertToType(data["exchange"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("ticker")) {
              obj["ticker"] = _ApiClient["default"].convertToType(data["ticker"], "String");
            }
            if (data.hasOwnProperty("ipo")) {
              obj["ipo"] = _ApiClient["default"].convertToType(data["ipo"], "Date");
            }
            if (data.hasOwnProperty("marketCapitalization")) {
              obj["marketCapitalization"] = _ApiClient["default"].convertToType(data["marketCapitalization"], "Number");
            }
            if (data.hasOwnProperty("shareOutstanding")) {
              obj["shareOutstanding"] = _ApiClient["default"].convertToType(data["shareOutstanding"], "Number");
            }
            if (data.hasOwnProperty("logo")) {
              obj["logo"] = _ApiClient["default"].convertToType(data["logo"], "String");
            }
            if (data.hasOwnProperty("phone")) {
              obj["phone"] = _ApiClient["default"].convertToType(data["phone"], "String");
            }
            if (data.hasOwnProperty("weburl")) {
              obj["weburl"] = _ApiClient["default"].convertToType(data["weburl"], "String");
            }
            if (data.hasOwnProperty("finnhubIndustry")) {
              obj["finnhubIndustry"] = _ApiClient["default"].convertToType(data["finnhubIndustry"], "String");
            }
          }
          return obj;
        }
      }]);
      return CompanyProfile22;
    }();
    CompanyProfile2.prototype["country"] = void 0;
    CompanyProfile2.prototype["currency"] = void 0;
    CompanyProfile2.prototype["exchange"] = void 0;
    CompanyProfile2.prototype["name"] = void 0;
    CompanyProfile2.prototype["ticker"] = void 0;
    CompanyProfile2.prototype["ipo"] = void 0;
    CompanyProfile2.prototype["marketCapitalization"] = void 0;
    CompanyProfile2.prototype["shareOutstanding"] = void 0;
    CompanyProfile2.prototype["logo"] = void 0;
    CompanyProfile2.prototype["phone"] = void 0;
    CompanyProfile2.prototype["weburl"] = void 0;
    CompanyProfile2.prototype["finnhubIndustry"] = void 0;
    var _default = CompanyProfile2;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CongressionalTransaction.js
var require_CongressionalTransaction = __commonJS({
  "../node_modules/finnhub/dist/model/CongressionalTransaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CongressionalTransaction = function() {
      function CongressionalTransaction2() {
        _classCallCheck(this, CongressionalTransaction2);
        CongressionalTransaction2.initialize(this);
      }
      _createClass(CongressionalTransaction2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CongressionalTransaction</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CongressionalTransaction} obj Optional instance to populate.
         * @return {module:model/CongressionalTransaction} The populated <code>CongressionalTransaction</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CongressionalTransaction2();
            if (data.hasOwnProperty("amountFrom")) {
              obj["amountFrom"] = _ApiClient["default"].convertToType(data["amountFrom"], "Number");
            }
            if (data.hasOwnProperty("amountTo")) {
              obj["amountTo"] = _ApiClient["default"].convertToType(data["amountTo"], "Number");
            }
            if (data.hasOwnProperty("assetName")) {
              obj["assetName"] = _ApiClient["default"].convertToType(data["assetName"], "String");
            }
            if (data.hasOwnProperty("filingDate")) {
              obj["filingDate"] = _ApiClient["default"].convertToType(data["filingDate"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("ownerType")) {
              obj["ownerType"] = _ApiClient["default"].convertToType(data["ownerType"], "String");
            }
            if (data.hasOwnProperty("position")) {
              obj["position"] = _ApiClient["default"].convertToType(data["position"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("transactionDate")) {
              obj["transactionDate"] = _ApiClient["default"].convertToType(data["transactionDate"], "String");
            }
            if (data.hasOwnProperty("transactionType")) {
              obj["transactionType"] = _ApiClient["default"].convertToType(data["transactionType"], "String");
            }
          }
          return obj;
        }
      }]);
      return CongressionalTransaction2;
    }();
    CongressionalTransaction.prototype["amountFrom"] = void 0;
    CongressionalTransaction.prototype["amountTo"] = void 0;
    CongressionalTransaction.prototype["assetName"] = void 0;
    CongressionalTransaction.prototype["filingDate"] = void 0;
    CongressionalTransaction.prototype["name"] = void 0;
    CongressionalTransaction.prototype["ownerType"] = void 0;
    CongressionalTransaction.prototype["position"] = void 0;
    CongressionalTransaction.prototype["symbol"] = void 0;
    CongressionalTransaction.prototype["transactionDate"] = void 0;
    CongressionalTransaction.prototype["transactionType"] = void 0;
    var _default = CongressionalTransaction;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CongressionalTrading.js
var require_CongressionalTrading = __commonJS({
  "../node_modules/finnhub/dist/model/CongressionalTrading.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _CongressionalTransaction = _interopRequireDefault(require_CongressionalTransaction());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CongressionalTrading = function() {
      function CongressionalTrading2() {
        _classCallCheck(this, CongressionalTrading2);
        CongressionalTrading2.initialize(this);
      }
      _createClass(CongressionalTrading2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CongressionalTrading</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CongressionalTrading} obj Optional instance to populate.
         * @return {module:model/CongressionalTrading} The populated <code>CongressionalTrading</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CongressionalTrading2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_CongressionalTransaction["default"]]);
            }
          }
          return obj;
        }
      }]);
      return CongressionalTrading2;
    }();
    CongressionalTrading.prototype["symbol"] = void 0;
    CongressionalTrading.prototype["data"] = void 0;
    var _default = CongressionalTrading;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CountryMetadata.js
var require_CountryMetadata = __commonJS({
  "../node_modules/finnhub/dist/model/CountryMetadata.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CountryMetadata = function() {
      function CountryMetadata2() {
        _classCallCheck(this, CountryMetadata2);
        CountryMetadata2.initialize(this);
      }
      _createClass(CountryMetadata2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CountryMetadata</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CountryMetadata} obj Optional instance to populate.
         * @return {module:model/CountryMetadata} The populated <code>CountryMetadata</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CountryMetadata2();
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("code2")) {
              obj["code2"] = _ApiClient["default"].convertToType(data["code2"], "String");
            }
            if (data.hasOwnProperty("code3")) {
              obj["code3"] = _ApiClient["default"].convertToType(data["code3"], "String");
            }
            if (data.hasOwnProperty("codeNo")) {
              obj["codeNo"] = _ApiClient["default"].convertToType(data["codeNo"], "String");
            }
            if (data.hasOwnProperty("currency")) {
              obj["currency"] = _ApiClient["default"].convertToType(data["currency"], "String");
            }
            if (data.hasOwnProperty("currencyCode")) {
              obj["currencyCode"] = _ApiClient["default"].convertToType(data["currencyCode"], "String");
            }
            if (data.hasOwnProperty("region")) {
              obj["region"] = _ApiClient["default"].convertToType(data["region"], "String");
            }
            if (data.hasOwnProperty("subRegion")) {
              obj["subRegion"] = _ApiClient["default"].convertToType(data["subRegion"], "String");
            }
            if (data.hasOwnProperty("rating")) {
              obj["rating"] = _ApiClient["default"].convertToType(data["rating"], "String");
            }
            if (data.hasOwnProperty("defaultSpread")) {
              obj["defaultSpread"] = _ApiClient["default"].convertToType(data["defaultSpread"], "Number");
            }
            if (data.hasOwnProperty("countryRiskPremium")) {
              obj["countryRiskPremium"] = _ApiClient["default"].convertToType(data["countryRiskPremium"], "Number");
            }
            if (data.hasOwnProperty("equityRiskPremium")) {
              obj["equityRiskPremium"] = _ApiClient["default"].convertToType(data["equityRiskPremium"], "Number");
            }
          }
          return obj;
        }
      }]);
      return CountryMetadata2;
    }();
    CountryMetadata.prototype["country"] = void 0;
    CountryMetadata.prototype["code2"] = void 0;
    CountryMetadata.prototype["code3"] = void 0;
    CountryMetadata.prototype["codeNo"] = void 0;
    CountryMetadata.prototype["currency"] = void 0;
    CountryMetadata.prototype["currencyCode"] = void 0;
    CountryMetadata.prototype["region"] = void 0;
    CountryMetadata.prototype["subRegion"] = void 0;
    CountryMetadata.prototype["rating"] = void 0;
    CountryMetadata.prototype["defaultSpread"] = void 0;
    CountryMetadata.prototype["countryRiskPremium"] = void 0;
    CountryMetadata.prototype["equityRiskPremium"] = void 0;
    var _default = CountryMetadata;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CovidInfo.js
var require_CovidInfo = __commonJS({
  "../node_modules/finnhub/dist/model/CovidInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CovidInfo = function() {
      function CovidInfo2() {
        _classCallCheck(this, CovidInfo2);
        CovidInfo2.initialize(this);
      }
      _createClass(CovidInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CovidInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CovidInfo} obj Optional instance to populate.
         * @return {module:model/CovidInfo} The populated <code>CovidInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CovidInfo2();
            if (data.hasOwnProperty("state")) {
              obj["state"] = _ApiClient["default"].convertToType(data["state"], "String");
            }
            if (data.hasOwnProperty("case")) {
              obj["case"] = _ApiClient["default"].convertToType(data["case"], "Number");
            }
            if (data.hasOwnProperty("death")) {
              obj["death"] = _ApiClient["default"].convertToType(data["death"], "Number");
            }
            if (data.hasOwnProperty("updated")) {
              obj["updated"] = _ApiClient["default"].convertToType(data["updated"], "String");
            }
          }
          return obj;
        }
      }]);
      return CovidInfo2;
    }();
    CovidInfo.prototype["state"] = void 0;
    CovidInfo.prototype["case"] = void 0;
    CovidInfo.prototype["death"] = void 0;
    CovidInfo.prototype["updated"] = void 0;
    var _default = CovidInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CryptoCandles.js
var require_CryptoCandles = __commonJS({
  "../node_modules/finnhub/dist/model/CryptoCandles.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CryptoCandles = function() {
      function CryptoCandles2() {
        _classCallCheck(this, CryptoCandles2);
        CryptoCandles2.initialize(this);
      }
      _createClass(CryptoCandles2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CryptoCandles</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CryptoCandles} obj Optional instance to populate.
         * @return {module:model/CryptoCandles} The populated <code>CryptoCandles</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CryptoCandles2();
            if (data.hasOwnProperty("o")) {
              obj["o"] = _ApiClient["default"].convertToType(data["o"], ["Number"]);
            }
            if (data.hasOwnProperty("h")) {
              obj["h"] = _ApiClient["default"].convertToType(data["h"], ["Number"]);
            }
            if (data.hasOwnProperty("l")) {
              obj["l"] = _ApiClient["default"].convertToType(data["l"], ["Number"]);
            }
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], ["Number"]);
            }
            if (data.hasOwnProperty("v")) {
              obj["v"] = _ApiClient["default"].convertToType(data["v"], ["Number"]);
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], ["Number"]);
            }
            if (data.hasOwnProperty("s")) {
              obj["s"] = _ApiClient["default"].convertToType(data["s"], "String");
            }
          }
          return obj;
        }
      }]);
      return CryptoCandles2;
    }();
    CryptoCandles.prototype["o"] = void 0;
    CryptoCandles.prototype["h"] = void 0;
    CryptoCandles.prototype["l"] = void 0;
    CryptoCandles.prototype["c"] = void 0;
    CryptoCandles.prototype["v"] = void 0;
    CryptoCandles.prototype["t"] = void 0;
    CryptoCandles.prototype["s"] = void 0;
    var _default = CryptoCandles;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CryptoProfile.js
var require_CryptoProfile = __commonJS({
  "../node_modules/finnhub/dist/model/CryptoProfile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CryptoProfile = function() {
      function CryptoProfile2() {
        _classCallCheck(this, CryptoProfile2);
        CryptoProfile2.initialize(this);
      }
      _createClass(CryptoProfile2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CryptoProfile</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CryptoProfile} obj Optional instance to populate.
         * @return {module:model/CryptoProfile} The populated <code>CryptoProfile</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CryptoProfile2();
            if (data.hasOwnProperty("longName")) {
              obj["longName"] = _ApiClient["default"].convertToType(data["longName"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("website")) {
              obj["website"] = _ApiClient["default"].convertToType(data["website"], "String");
            }
            if (data.hasOwnProperty("marketCap")) {
              obj["marketCap"] = _ApiClient["default"].convertToType(data["marketCap"], "Number");
            }
            if (data.hasOwnProperty("totalSupply")) {
              obj["totalSupply"] = _ApiClient["default"].convertToType(data["totalSupply"], "Number");
            }
            if (data.hasOwnProperty("maxSupply")) {
              obj["maxSupply"] = _ApiClient["default"].convertToType(data["maxSupply"], "Number");
            }
            if (data.hasOwnProperty("circulatingSupply")) {
              obj["circulatingSupply"] = _ApiClient["default"].convertToType(data["circulatingSupply"], "Number");
            }
            if (data.hasOwnProperty("logo")) {
              obj["logo"] = _ApiClient["default"].convertToType(data["logo"], "String");
            }
            if (data.hasOwnProperty("launchDate")) {
              obj["launchDate"] = _ApiClient["default"].convertToType(data["launchDate"], "String");
            }
            if (data.hasOwnProperty("proofType")) {
              obj["proofType"] = _ApiClient["default"].convertToType(data["proofType"], "String");
            }
          }
          return obj;
        }
      }]);
      return CryptoProfile2;
    }();
    CryptoProfile.prototype["longName"] = void 0;
    CryptoProfile.prototype["name"] = void 0;
    CryptoProfile.prototype["description"] = void 0;
    CryptoProfile.prototype["website"] = void 0;
    CryptoProfile.prototype["marketCap"] = void 0;
    CryptoProfile.prototype["totalSupply"] = void 0;
    CryptoProfile.prototype["maxSupply"] = void 0;
    CryptoProfile.prototype["circulatingSupply"] = void 0;
    CryptoProfile.prototype["logo"] = void 0;
    CryptoProfile.prototype["launchDate"] = void 0;
    CryptoProfile.prototype["proofType"] = void 0;
    var _default = CryptoProfile;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/CryptoSymbol.js
var require_CryptoSymbol = __commonJS({
  "../node_modules/finnhub/dist/model/CryptoSymbol.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CryptoSymbol = function() {
      function CryptoSymbol2() {
        _classCallCheck(this, CryptoSymbol2);
        CryptoSymbol2.initialize(this);
      }
      _createClass(CryptoSymbol2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>CryptoSymbol</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/CryptoSymbol} obj Optional instance to populate.
         * @return {module:model/CryptoSymbol} The populated <code>CryptoSymbol</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new CryptoSymbol2();
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("displaySymbol")) {
              obj["displaySymbol"] = _ApiClient["default"].convertToType(data["displaySymbol"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return CryptoSymbol2;
    }();
    CryptoSymbol.prototype["description"] = void 0;
    CryptoSymbol.prototype["displaySymbol"] = void 0;
    CryptoSymbol.prototype["symbol"] = void 0;
    var _default = CryptoSymbol;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Development.js
var require_Development = __commonJS({
  "../node_modules/finnhub/dist/model/Development.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Development = function() {
      function Development2() {
        _classCallCheck(this, Development2);
        Development2.initialize(this);
      }
      _createClass(Development2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Development</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Development} obj Optional instance to populate.
         * @return {module:model/Development} The populated <code>Development</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Development2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("datetime")) {
              obj["datetime"] = _ApiClient["default"].convertToType(data["datetime"], "String");
            }
            if (data.hasOwnProperty("headline")) {
              obj["headline"] = _ApiClient["default"].convertToType(data["headline"], "String");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("url")) {
              obj["url"] = _ApiClient["default"].convertToType(data["url"], "String");
            }
          }
          return obj;
        }
      }]);
      return Development2;
    }();
    Development.prototype["symbol"] = void 0;
    Development.prototype["datetime"] = void 0;
    Development.prototype["headline"] = void 0;
    Development.prototype["description"] = void 0;
    Development.prototype["url"] = void 0;
    var _default = Development;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Dividends.js
var require_Dividends = __commonJS({
  "../node_modules/finnhub/dist/model/Dividends.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Dividends = function() {
      function Dividends2() {
        _classCallCheck(this, Dividends2);
        Dividends2.initialize(this);
      }
      _createClass(Dividends2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Dividends</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Dividends} obj Optional instance to populate.
         * @return {module:model/Dividends} The populated <code>Dividends</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Dividends2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("date")) {
              obj["date"] = _ApiClient["default"].convertToType(data["date"], "Date");
            }
            if (data.hasOwnProperty("amount")) {
              obj["amount"] = _ApiClient["default"].convertToType(data["amount"], "Number");
            }
            if (data.hasOwnProperty("adjustedAmount")) {
              obj["adjustedAmount"] = _ApiClient["default"].convertToType(data["adjustedAmount"], "Number");
            }
            if (data.hasOwnProperty("payDate")) {
              obj["payDate"] = _ApiClient["default"].convertToType(data["payDate"], "Date");
            }
            if (data.hasOwnProperty("recordDate")) {
              obj["recordDate"] = _ApiClient["default"].convertToType(data["recordDate"], "Date");
            }
            if (data.hasOwnProperty("declarationDate")) {
              obj["declarationDate"] = _ApiClient["default"].convertToType(data["declarationDate"], "Date");
            }
            if (data.hasOwnProperty("currency")) {
              obj["currency"] = _ApiClient["default"].convertToType(data["currency"], "String");
            }
            if (data.hasOwnProperty("freq")) {
              obj["freq"] = _ApiClient["default"].convertToType(data["freq"], "String");
            }
          }
          return obj;
        }
      }]);
      return Dividends2;
    }();
    Dividends.prototype["symbol"] = void 0;
    Dividends.prototype["date"] = void 0;
    Dividends.prototype["amount"] = void 0;
    Dividends.prototype["adjustedAmount"] = void 0;
    Dividends.prototype["payDate"] = void 0;
    Dividends.prototype["recordDate"] = void 0;
    Dividends.prototype["declarationDate"] = void 0;
    Dividends.prototype["currency"] = void 0;
    Dividends.prototype["freq"] = void 0;
    var _default = Dividends;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Dividends2Info.js
var require_Dividends2Info = __commonJS({
  "../node_modules/finnhub/dist/model/Dividends2Info.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Dividends2Info = function() {
      function Dividends2Info2() {
        _classCallCheck(this, Dividends2Info2);
        Dividends2Info2.initialize(this);
      }
      _createClass(Dividends2Info2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Dividends2Info</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Dividends2Info} obj Optional instance to populate.
         * @return {module:model/Dividends2Info} The populated <code>Dividends2Info</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Dividends2Info2();
            if (data.hasOwnProperty("exDate")) {
              obj["exDate"] = _ApiClient["default"].convertToType(data["exDate"], "Date");
            }
            if (data.hasOwnProperty("amount")) {
              obj["amount"] = _ApiClient["default"].convertToType(data["amount"], "Number");
            }
          }
          return obj;
        }
      }]);
      return Dividends2Info2;
    }();
    Dividends2Info.prototype["exDate"] = void 0;
    Dividends2Info.prototype["amount"] = void 0;
    var _default = Dividends2Info;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Dividends2.js
var require_Dividends2 = __commonJS({
  "../node_modules/finnhub/dist/model/Dividends2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _Dividends2Info = _interopRequireDefault(require_Dividends2Info());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Dividends2 = function() {
      function Dividends22() {
        _classCallCheck(this, Dividends22);
        Dividends22.initialize(this);
      }
      _createClass(Dividends22, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Dividends2</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Dividends2} obj Optional instance to populate.
         * @return {module:model/Dividends2} The populated <code>Dividends2</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Dividends22();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_Dividends2Info["default"]]);
            }
          }
          return obj;
        }
      }]);
      return Dividends22;
    }();
    Dividends2.prototype["symbol"] = void 0;
    Dividends2.prototype["data"] = void 0;
    var _default = Dividends2;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ExcerptResponse.js
var require_ExcerptResponse = __commonJS({
  "../node_modules/finnhub/dist/model/ExcerptResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ExcerptResponse = function() {
      function ExcerptResponse2() {
        _classCallCheck(this, ExcerptResponse2);
        ExcerptResponse2.initialize(this);
      }
      _createClass(ExcerptResponse2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ExcerptResponse</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ExcerptResponse} obj Optional instance to populate.
         * @return {module:model/ExcerptResponse} The populated <code>ExcerptResponse</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ExcerptResponse2();
            if (data.hasOwnProperty("content")) {
              obj["content"] = _ApiClient["default"].convertToType(data["content"], "String");
            }
            if (data.hasOwnProperty("snippetId")) {
              obj["snippetId"] = _ApiClient["default"].convertToType(data["snippetId"], "String");
            }
            if (data.hasOwnProperty("startOffset")) {
              obj["startOffset"] = _ApiClient["default"].convertToType(data["startOffset"], "String");
            }
            if (data.hasOwnProperty("endOffset")) {
              obj["endOffset"] = _ApiClient["default"].convertToType(data["endOffset"], "String");
            }
          }
          return obj;
        }
      }]);
      return ExcerptResponse2;
    }();
    ExcerptResponse.prototype["content"] = void 0;
    ExcerptResponse.prototype["snippetId"] = void 0;
    ExcerptResponse.prototype["startOffset"] = void 0;
    ExcerptResponse.prototype["endOffset"] = void 0;
    var _default = ExcerptResponse;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/DocumentResponse.js
var require_DocumentResponse = __commonJS({
  "../node_modules/finnhub/dist/model/DocumentResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _ExcerptResponse = _interopRequireDefault(require_ExcerptResponse());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var DocumentResponse = function() {
      function DocumentResponse2() {
        _classCallCheck(this, DocumentResponse2);
        DocumentResponse2.initialize(this);
      }
      _createClass(DocumentResponse2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>DocumentResponse</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/DocumentResponse} obj Optional instance to populate.
         * @return {module:model/DocumentResponse} The populated <code>DocumentResponse</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new DocumentResponse2();
            if (data.hasOwnProperty("documentId")) {
              obj["documentId"] = _ApiClient["default"].convertToType(data["documentId"], "String");
            }
            if (data.hasOwnProperty("title")) {
              obj["title"] = _ApiClient["default"].convertToType(data["title"], "String");
            }
            if (data.hasOwnProperty("hits")) {
              obj["hits"] = _ApiClient["default"].convertToType(data["hits"], "String");
            }
            if (data.hasOwnProperty("url")) {
              obj["url"] = _ApiClient["default"].convertToType(data["url"], "String");
            }
            if (data.hasOwnProperty("format")) {
              obj["format"] = _ApiClient["default"].convertToType(data["format"], "String");
            }
            if (data.hasOwnProperty("excerpts")) {
              obj["excerpts"] = _ApiClient["default"].convertToType(data["excerpts"], [_ExcerptResponse["default"]]);
            }
          }
          return obj;
        }
      }]);
      return DocumentResponse2;
    }();
    DocumentResponse.prototype["documentId"] = void 0;
    DocumentResponse.prototype["title"] = void 0;
    DocumentResponse.prototype["hits"] = void 0;
    DocumentResponse.prototype["url"] = void 0;
    DocumentResponse.prototype["format"] = void 0;
    DocumentResponse.prototype["excerpts"] = void 0;
    var _default = DocumentResponse;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFCountryExposureData.js
var require_ETFCountryExposureData = __commonJS({
  "../node_modules/finnhub/dist/model/ETFCountryExposureData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFCountryExposureData = function() {
      function ETFCountryExposureData2() {
        _classCallCheck(this, ETFCountryExposureData2);
        ETFCountryExposureData2.initialize(this);
      }
      _createClass(ETFCountryExposureData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFCountryExposureData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFCountryExposureData} obj Optional instance to populate.
         * @return {module:model/ETFCountryExposureData} The populated <code>ETFCountryExposureData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFCountryExposureData2();
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("exposure")) {
              obj["exposure"] = _ApiClient["default"].convertToType(data["exposure"], "Number");
            }
          }
          return obj;
        }
      }]);
      return ETFCountryExposureData2;
    }();
    ETFCountryExposureData.prototype["country"] = void 0;
    ETFCountryExposureData.prototype["exposure"] = void 0;
    var _default = ETFCountryExposureData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFHoldingsData.js
var require_ETFHoldingsData = __commonJS({
  "../node_modules/finnhub/dist/model/ETFHoldingsData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFHoldingsData = function() {
      function ETFHoldingsData2() {
        _classCallCheck(this, ETFHoldingsData2);
        ETFHoldingsData2.initialize(this);
      }
      _createClass(ETFHoldingsData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFHoldingsData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFHoldingsData} obj Optional instance to populate.
         * @return {module:model/ETFHoldingsData} The populated <code>ETFHoldingsData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFHoldingsData2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("share")) {
              obj["share"] = _ApiClient["default"].convertToType(data["share"], "Number");
            }
            if (data.hasOwnProperty("percent")) {
              obj["percent"] = _ApiClient["default"].convertToType(data["percent"], "Number");
            }
            if (data.hasOwnProperty("value")) {
              obj["value"] = _ApiClient["default"].convertToType(data["value"], "Number");
            }
            if (data.hasOwnProperty("assetType")) {
              obj["assetType"] = _ApiClient["default"].convertToType(data["assetType"], "String");
            }
          }
          return obj;
        }
      }]);
      return ETFHoldingsData2;
    }();
    ETFHoldingsData.prototype["symbol"] = void 0;
    ETFHoldingsData.prototype["name"] = void 0;
    ETFHoldingsData.prototype["isin"] = void 0;
    ETFHoldingsData.prototype["cusip"] = void 0;
    ETFHoldingsData.prototype["share"] = void 0;
    ETFHoldingsData.prototype["percent"] = void 0;
    ETFHoldingsData.prototype["value"] = void 0;
    ETFHoldingsData.prototype["assetType"] = void 0;
    var _default = ETFHoldingsData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFProfileData.js
var require_ETFProfileData = __commonJS({
  "../node_modules/finnhub/dist/model/ETFProfileData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFProfileData = function() {
      function ETFProfileData2() {
        _classCallCheck(this, ETFProfileData2);
        ETFProfileData2.initialize(this);
      }
      _createClass(ETFProfileData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFProfileData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFProfileData} obj Optional instance to populate.
         * @return {module:model/ETFProfileData} The populated <code>ETFProfileData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFProfileData2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("assetClass")) {
              obj["assetClass"] = _ApiClient["default"].convertToType(data["assetClass"], "String");
            }
            if (data.hasOwnProperty("investmentSegment")) {
              obj["investmentSegment"] = _ApiClient["default"].convertToType(data["investmentSegment"], "String");
            }
            if (data.hasOwnProperty("aum")) {
              obj["aum"] = _ApiClient["default"].convertToType(data["aum"], "Number");
            }
            if (data.hasOwnProperty("nav")) {
              obj["nav"] = _ApiClient["default"].convertToType(data["nav"], "Number");
            }
            if (data.hasOwnProperty("navCurrency")) {
              obj["navCurrency"] = _ApiClient["default"].convertToType(data["navCurrency"], "String");
            }
            if (data.hasOwnProperty("expenseRatio")) {
              obj["expenseRatio"] = _ApiClient["default"].convertToType(data["expenseRatio"], "Number");
            }
            if (data.hasOwnProperty("trackingIndex")) {
              obj["trackingIndex"] = _ApiClient["default"].convertToType(data["trackingIndex"], "String");
            }
            if (data.hasOwnProperty("etfCompany")) {
              obj["etfCompany"] = _ApiClient["default"].convertToType(data["etfCompany"], "String");
            }
            if (data.hasOwnProperty("domicile")) {
              obj["domicile"] = _ApiClient["default"].convertToType(data["domicile"], "String");
            }
            if (data.hasOwnProperty("inceptionDate")) {
              obj["inceptionDate"] = _ApiClient["default"].convertToType(data["inceptionDate"], "Date");
            }
            if (data.hasOwnProperty("website")) {
              obj["website"] = _ApiClient["default"].convertToType(data["website"], "String");
            }
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("priceToEarnings")) {
              obj["priceToEarnings"] = _ApiClient["default"].convertToType(data["priceToEarnings"], "Number");
            }
            if (data.hasOwnProperty("priceToBook")) {
              obj["priceToBook"] = _ApiClient["default"].convertToType(data["priceToBook"], "Number");
            }
            if (data.hasOwnProperty("avgVolume")) {
              obj["avgVolume"] = _ApiClient["default"].convertToType(data["avgVolume"], "Number");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("isInverse")) {
              obj["isInverse"] = _ApiClient["default"].convertToType(data["isInverse"], "Boolean");
            }
            if (data.hasOwnProperty("isLeveraged")) {
              obj["isLeveraged"] = _ApiClient["default"].convertToType(data["isLeveraged"], "Boolean");
            }
            if (data.hasOwnProperty("leverageFactor")) {
              obj["leverageFactor"] = _ApiClient["default"].convertToType(data["leverageFactor"], "Number");
            }
          }
          return obj;
        }
      }]);
      return ETFProfileData2;
    }();
    ETFProfileData.prototype["name"] = void 0;
    ETFProfileData.prototype["assetClass"] = void 0;
    ETFProfileData.prototype["investmentSegment"] = void 0;
    ETFProfileData.prototype["aum"] = void 0;
    ETFProfileData.prototype["nav"] = void 0;
    ETFProfileData.prototype["navCurrency"] = void 0;
    ETFProfileData.prototype["expenseRatio"] = void 0;
    ETFProfileData.prototype["trackingIndex"] = void 0;
    ETFProfileData.prototype["etfCompany"] = void 0;
    ETFProfileData.prototype["domicile"] = void 0;
    ETFProfileData.prototype["inceptionDate"] = void 0;
    ETFProfileData.prototype["website"] = void 0;
    ETFProfileData.prototype["isin"] = void 0;
    ETFProfileData.prototype["cusip"] = void 0;
    ETFProfileData.prototype["priceToEarnings"] = void 0;
    ETFProfileData.prototype["priceToBook"] = void 0;
    ETFProfileData.prototype["avgVolume"] = void 0;
    ETFProfileData.prototype["description"] = void 0;
    ETFProfileData.prototype["isInverse"] = void 0;
    ETFProfileData.prototype["isLeveraged"] = void 0;
    ETFProfileData.prototype["leverageFactor"] = void 0;
    var _default = ETFProfileData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFSectorExposureData.js
var require_ETFSectorExposureData = __commonJS({
  "../node_modules/finnhub/dist/model/ETFSectorExposureData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFSectorExposureData = function() {
      function ETFSectorExposureData2() {
        _classCallCheck(this, ETFSectorExposureData2);
        ETFSectorExposureData2.initialize(this);
      }
      _createClass(ETFSectorExposureData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFSectorExposureData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFSectorExposureData} obj Optional instance to populate.
         * @return {module:model/ETFSectorExposureData} The populated <code>ETFSectorExposureData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFSectorExposureData2();
            if (data.hasOwnProperty("industry")) {
              obj["industry"] = _ApiClient["default"].convertToType(data["industry"], "String");
            }
            if (data.hasOwnProperty("exposure")) {
              obj["exposure"] = _ApiClient["default"].convertToType(data["exposure"], "Number");
            }
          }
          return obj;
        }
      }]);
      return ETFSectorExposureData2;
    }();
    ETFSectorExposureData.prototype["industry"] = void 0;
    ETFSectorExposureData.prototype["exposure"] = void 0;
    var _default = ETFSectorExposureData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFsCountryExposure.js
var require_ETFsCountryExposure = __commonJS({
  "../node_modules/finnhub/dist/model/ETFsCountryExposure.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _ETFCountryExposureData = _interopRequireDefault(require_ETFCountryExposureData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFsCountryExposure = function() {
      function ETFsCountryExposure2() {
        _classCallCheck(this, ETFsCountryExposure2);
        ETFsCountryExposure2.initialize(this);
      }
      _createClass(ETFsCountryExposure2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFsCountryExposure</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFsCountryExposure} obj Optional instance to populate.
         * @return {module:model/ETFsCountryExposure} The populated <code>ETFsCountryExposure</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFsCountryExposure2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("countryExposure")) {
              obj["countryExposure"] = _ApiClient["default"].convertToType(data["countryExposure"], [_ETFCountryExposureData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return ETFsCountryExposure2;
    }();
    ETFsCountryExposure.prototype["symbol"] = void 0;
    ETFsCountryExposure.prototype["countryExposure"] = void 0;
    var _default = ETFsCountryExposure;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFsHoldings.js
var require_ETFsHoldings = __commonJS({
  "../node_modules/finnhub/dist/model/ETFsHoldings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _ETFHoldingsData = _interopRequireDefault(require_ETFHoldingsData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFsHoldings = function() {
      function ETFsHoldings2() {
        _classCallCheck(this, ETFsHoldings2);
        ETFsHoldings2.initialize(this);
      }
      _createClass(ETFsHoldings2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFsHoldings</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFsHoldings} obj Optional instance to populate.
         * @return {module:model/ETFsHoldings} The populated <code>ETFsHoldings</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFsHoldings2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("atDate")) {
              obj["atDate"] = _ApiClient["default"].convertToType(data["atDate"], "Date");
            }
            if (data.hasOwnProperty("numberOfHoldings")) {
              obj["numberOfHoldings"] = _ApiClient["default"].convertToType(data["numberOfHoldings"], "Number");
            }
            if (data.hasOwnProperty("holdings")) {
              obj["holdings"] = _ApiClient["default"].convertToType(data["holdings"], [_ETFHoldingsData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return ETFsHoldings2;
    }();
    ETFsHoldings.prototype["symbol"] = void 0;
    ETFsHoldings.prototype["atDate"] = void 0;
    ETFsHoldings.prototype["numberOfHoldings"] = void 0;
    ETFsHoldings.prototype["holdings"] = void 0;
    var _default = ETFsHoldings;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFsProfile.js
var require_ETFsProfile = __commonJS({
  "../node_modules/finnhub/dist/model/ETFsProfile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _ETFProfileData = _interopRequireDefault(require_ETFProfileData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFsProfile = function() {
      function ETFsProfile2() {
        _classCallCheck(this, ETFsProfile2);
        ETFsProfile2.initialize(this);
      }
      _createClass(ETFsProfile2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFsProfile</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFsProfile} obj Optional instance to populate.
         * @return {module:model/ETFsProfile} The populated <code>ETFsProfile</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFsProfile2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("profile")) {
              obj["profile"] = _ETFProfileData["default"].constructFromObject(data["profile"]);
            }
          }
          return obj;
        }
      }]);
      return ETFsProfile2;
    }();
    ETFsProfile.prototype["symbol"] = void 0;
    ETFsProfile.prototype["profile"] = void 0;
    var _default = ETFsProfile;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ETFsSectorExposure.js
var require_ETFsSectorExposure = __commonJS({
  "../node_modules/finnhub/dist/model/ETFsSectorExposure.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _ETFSectorExposureData = _interopRequireDefault(require_ETFSectorExposureData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ETFsSectorExposure = function() {
      function ETFsSectorExposure2() {
        _classCallCheck(this, ETFsSectorExposure2);
        ETFsSectorExposure2.initialize(this);
      }
      _createClass(ETFsSectorExposure2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ETFsSectorExposure</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ETFsSectorExposure} obj Optional instance to populate.
         * @return {module:model/ETFsSectorExposure} The populated <code>ETFsSectorExposure</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ETFsSectorExposure2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("sectorExposure")) {
              obj["sectorExposure"] = _ApiClient["default"].convertToType(data["sectorExposure"], [_ETFSectorExposureData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return ETFsSectorExposure2;
    }();
    ETFsSectorExposure.prototype["symbol"] = void 0;
    ETFsSectorExposure.prototype["sectorExposure"] = void 0;
    var _default = ETFsSectorExposure;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EarningRelease.js
var require_EarningRelease = __commonJS({
  "../node_modules/finnhub/dist/model/EarningRelease.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EarningRelease = function() {
      function EarningRelease2() {
        _classCallCheck(this, EarningRelease2);
        EarningRelease2.initialize(this);
      }
      _createClass(EarningRelease2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EarningRelease</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EarningRelease} obj Optional instance to populate.
         * @return {module:model/EarningRelease} The populated <code>EarningRelease</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EarningRelease2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("date")) {
              obj["date"] = _ApiClient["default"].convertToType(data["date"], "Date");
            }
            if (data.hasOwnProperty("hour")) {
              obj["hour"] = _ApiClient["default"].convertToType(data["hour"], "String");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
            if (data.hasOwnProperty("epsEstimate")) {
              obj["epsEstimate"] = _ApiClient["default"].convertToType(data["epsEstimate"], "Number");
            }
            if (data.hasOwnProperty("epsActual")) {
              obj["epsActual"] = _ApiClient["default"].convertToType(data["epsActual"], "Number");
            }
            if (data.hasOwnProperty("revenueEstimate")) {
              obj["revenueEstimate"] = _ApiClient["default"].convertToType(data["revenueEstimate"], "Number");
            }
            if (data.hasOwnProperty("revenueActual")) {
              obj["revenueActual"] = _ApiClient["default"].convertToType(data["revenueActual"], "Number");
            }
          }
          return obj;
        }
      }]);
      return EarningRelease2;
    }();
    EarningRelease.prototype["symbol"] = void 0;
    EarningRelease.prototype["date"] = void 0;
    EarningRelease.prototype["hour"] = void 0;
    EarningRelease.prototype["year"] = void 0;
    EarningRelease.prototype["quarter"] = void 0;
    EarningRelease.prototype["epsEstimate"] = void 0;
    EarningRelease.prototype["epsActual"] = void 0;
    EarningRelease.prototype["revenueEstimate"] = void 0;
    EarningRelease.prototype["revenueActual"] = void 0;
    var _default = EarningRelease;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EarningResult.js
var require_EarningResult = __commonJS({
  "../node_modules/finnhub/dist/model/EarningResult.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EarningResult = function() {
      function EarningResult2() {
        _classCallCheck(this, EarningResult2);
        EarningResult2.initialize(this);
      }
      _createClass(EarningResult2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EarningResult</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EarningResult} obj Optional instance to populate.
         * @return {module:model/EarningResult} The populated <code>EarningResult</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EarningResult2();
            if (data.hasOwnProperty("actual")) {
              obj["actual"] = _ApiClient["default"].convertToType(data["actual"], "Number");
            }
            if (data.hasOwnProperty("estimate")) {
              obj["estimate"] = _ApiClient["default"].convertToType(data["estimate"], "Number");
            }
            if (data.hasOwnProperty("surprise")) {
              obj["surprise"] = _ApiClient["default"].convertToType(data["surprise"], "Number");
            }
            if (data.hasOwnProperty("surprisePercent")) {
              obj["surprisePercent"] = _ApiClient["default"].convertToType(data["surprisePercent"], "Number");
            }
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "Date");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
          }
          return obj;
        }
      }]);
      return EarningResult2;
    }();
    EarningResult.prototype["actual"] = void 0;
    EarningResult.prototype["estimate"] = void 0;
    EarningResult.prototype["surprise"] = void 0;
    EarningResult.prototype["surprisePercent"] = void 0;
    EarningResult.prototype["period"] = void 0;
    EarningResult.prototype["symbol"] = void 0;
    EarningResult.prototype["year"] = void 0;
    EarningResult.prototype["quarter"] = void 0;
    var _default = EarningResult;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EarningsCalendar.js
var require_EarningsCalendar = __commonJS({
  "../node_modules/finnhub/dist/model/EarningsCalendar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _EarningRelease = _interopRequireDefault(require_EarningRelease());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EarningsCalendar = function() {
      function EarningsCalendar2() {
        _classCallCheck(this, EarningsCalendar2);
        EarningsCalendar2.initialize(this);
      }
      _createClass(EarningsCalendar2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EarningsCalendar</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EarningsCalendar} obj Optional instance to populate.
         * @return {module:model/EarningsCalendar} The populated <code>EarningsCalendar</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EarningsCalendar2();
            if (data.hasOwnProperty("earningsCalendar")) {
              obj["earningsCalendar"] = _ApiClient["default"].convertToType(data["earningsCalendar"], [_EarningRelease["default"]]);
            }
          }
          return obj;
        }
      }]);
      return EarningsCalendar2;
    }();
    EarningsCalendar.prototype["earningsCalendar"] = void 0;
    var _default = EarningsCalendar;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/TranscriptContent.js
var require_TranscriptContent = __commonJS({
  "../node_modules/finnhub/dist/model/TranscriptContent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var TranscriptContent = function() {
      function TranscriptContent2() {
        _classCallCheck(this, TranscriptContent2);
        TranscriptContent2.initialize(this);
      }
      _createClass(TranscriptContent2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>TranscriptContent</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/TranscriptContent} obj Optional instance to populate.
         * @return {module:model/TranscriptContent} The populated <code>TranscriptContent</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new TranscriptContent2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("speech")) {
              obj["speech"] = _ApiClient["default"].convertToType(data["speech"], ["String"]);
            }
            if (data.hasOwnProperty("session")) {
              obj["session"] = _ApiClient["default"].convertToType(data["session"], "String");
            }
          }
          return obj;
        }
      }]);
      return TranscriptContent2;
    }();
    TranscriptContent.prototype["name"] = void 0;
    TranscriptContent.prototype["speech"] = void 0;
    TranscriptContent.prototype["session"] = void 0;
    var _default = TranscriptContent;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/TranscriptParticipant.js
var require_TranscriptParticipant = __commonJS({
  "../node_modules/finnhub/dist/model/TranscriptParticipant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var TranscriptParticipant = function() {
      function TranscriptParticipant2() {
        _classCallCheck(this, TranscriptParticipant2);
        TranscriptParticipant2.initialize(this);
      }
      _createClass(TranscriptParticipant2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>TranscriptParticipant</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/TranscriptParticipant} obj Optional instance to populate.
         * @return {module:model/TranscriptParticipant} The populated <code>TranscriptParticipant</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new TranscriptParticipant2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("role")) {
              obj["role"] = _ApiClient["default"].convertToType(data["role"], "String");
            }
          }
          return obj;
        }
      }]);
      return TranscriptParticipant2;
    }();
    TranscriptParticipant.prototype["name"] = void 0;
    TranscriptParticipant.prototype["description"] = void 0;
    TranscriptParticipant.prototype["role"] = void 0;
    var _default = TranscriptParticipant;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EarningsCallTranscripts.js
var require_EarningsCallTranscripts = __commonJS({
  "../node_modules/finnhub/dist/model/EarningsCallTranscripts.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _TranscriptContent = _interopRequireDefault(require_TranscriptContent());
    var _TranscriptParticipant = _interopRequireDefault(require_TranscriptParticipant());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EarningsCallTranscripts = function() {
      function EarningsCallTranscripts2() {
        _classCallCheck(this, EarningsCallTranscripts2);
        EarningsCallTranscripts2.initialize(this);
      }
      _createClass(EarningsCallTranscripts2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EarningsCallTranscripts</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EarningsCallTranscripts} obj Optional instance to populate.
         * @return {module:model/EarningsCallTranscripts} The populated <code>EarningsCallTranscripts</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EarningsCallTranscripts2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("transcript")) {
              obj["transcript"] = _ApiClient["default"].convertToType(data["transcript"], [_TranscriptContent["default"]]);
            }
            if (data.hasOwnProperty("participant")) {
              obj["participant"] = _ApiClient["default"].convertToType(data["participant"], [_TranscriptParticipant["default"]]);
            }
            if (data.hasOwnProperty("audio")) {
              obj["audio"] = _ApiClient["default"].convertToType(data["audio"], "String");
            }
            if (data.hasOwnProperty("id")) {
              obj["id"] = _ApiClient["default"].convertToType(data["id"], "String");
            }
            if (data.hasOwnProperty("title")) {
              obj["title"] = _ApiClient["default"].convertToType(data["title"], "String");
            }
            if (data.hasOwnProperty("time")) {
              obj["time"] = _ApiClient["default"].convertToType(data["time"], "String");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
          }
          return obj;
        }
      }]);
      return EarningsCallTranscripts2;
    }();
    EarningsCallTranscripts.prototype["symbol"] = void 0;
    EarningsCallTranscripts.prototype["transcript"] = void 0;
    EarningsCallTranscripts.prototype["participant"] = void 0;
    EarningsCallTranscripts.prototype["audio"] = void 0;
    EarningsCallTranscripts.prototype["id"] = void 0;
    EarningsCallTranscripts.prototype["title"] = void 0;
    EarningsCallTranscripts.prototype["time"] = void 0;
    EarningsCallTranscripts.prototype["year"] = void 0;
    EarningsCallTranscripts.prototype["quarter"] = void 0;
    var _default = EarningsCallTranscripts;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/StockTranscripts.js
var require_StockTranscripts = __commonJS({
  "../node_modules/finnhub/dist/model/StockTranscripts.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var StockTranscripts = function() {
      function StockTranscripts2() {
        _classCallCheck(this, StockTranscripts2);
        StockTranscripts2.initialize(this);
      }
      _createClass(StockTranscripts2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>StockTranscripts</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/StockTranscripts} obj Optional instance to populate.
         * @return {module:model/StockTranscripts} The populated <code>StockTranscripts</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new StockTranscripts2();
            if (data.hasOwnProperty("id")) {
              obj["id"] = _ApiClient["default"].convertToType(data["id"], "String");
            }
            if (data.hasOwnProperty("title")) {
              obj["title"] = _ApiClient["default"].convertToType(data["title"], "String");
            }
            if (data.hasOwnProperty("time")) {
              obj["time"] = _ApiClient["default"].convertToType(data["time"], "String");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
          }
          return obj;
        }
      }]);
      return StockTranscripts2;
    }();
    StockTranscripts.prototype["id"] = void 0;
    StockTranscripts.prototype["title"] = void 0;
    StockTranscripts.prototype["time"] = void 0;
    StockTranscripts.prototype["year"] = void 0;
    StockTranscripts.prototype["quarter"] = void 0;
    var _default = StockTranscripts;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EarningsCallTranscriptsList.js
var require_EarningsCallTranscriptsList = __commonJS({
  "../node_modules/finnhub/dist/model/EarningsCallTranscriptsList.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _StockTranscripts = _interopRequireDefault(require_StockTranscripts());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EarningsCallTranscriptsList = function() {
      function EarningsCallTranscriptsList2() {
        _classCallCheck(this, EarningsCallTranscriptsList2);
        EarningsCallTranscriptsList2.initialize(this);
      }
      _createClass(EarningsCallTranscriptsList2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EarningsCallTranscriptsList</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EarningsCallTranscriptsList} obj Optional instance to populate.
         * @return {module:model/EarningsCallTranscriptsList} The populated <code>EarningsCallTranscriptsList</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EarningsCallTranscriptsList2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("transcripts")) {
              obj["transcripts"] = _ApiClient["default"].convertToType(data["transcripts"], [_StockTranscripts["default"]]);
            }
          }
          return obj;
        }
      }]);
      return EarningsCallTranscriptsList2;
    }();
    EarningsCallTranscriptsList.prototype["symbol"] = void 0;
    EarningsCallTranscriptsList.prototype["transcripts"] = void 0;
    var _default = EarningsCallTranscriptsList;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EarningsEstimatesInfo.js
var require_EarningsEstimatesInfo = __commonJS({
  "../node_modules/finnhub/dist/model/EarningsEstimatesInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EarningsEstimatesInfo = function() {
      function EarningsEstimatesInfo2() {
        _classCallCheck(this, EarningsEstimatesInfo2);
        EarningsEstimatesInfo2.initialize(this);
      }
      _createClass(EarningsEstimatesInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EarningsEstimatesInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EarningsEstimatesInfo} obj Optional instance to populate.
         * @return {module:model/EarningsEstimatesInfo} The populated <code>EarningsEstimatesInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EarningsEstimatesInfo2();
            if (data.hasOwnProperty("epsAvg")) {
              obj["epsAvg"] = _ApiClient["default"].convertToType(data["epsAvg"], "Number");
            }
            if (data.hasOwnProperty("epsHigh")) {
              obj["epsHigh"] = _ApiClient["default"].convertToType(data["epsHigh"], "Number");
            }
            if (data.hasOwnProperty("epsLow")) {
              obj["epsLow"] = _ApiClient["default"].convertToType(data["epsLow"], "Number");
            }
            if (data.hasOwnProperty("numberAnalysts")) {
              obj["numberAnalysts"] = _ApiClient["default"].convertToType(data["numberAnalysts"], "Number");
            }
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "Date");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
          }
          return obj;
        }
      }]);
      return EarningsEstimatesInfo2;
    }();
    EarningsEstimatesInfo.prototype["epsAvg"] = void 0;
    EarningsEstimatesInfo.prototype["epsHigh"] = void 0;
    EarningsEstimatesInfo.prototype["epsLow"] = void 0;
    EarningsEstimatesInfo.prototype["numberAnalysts"] = void 0;
    EarningsEstimatesInfo.prototype["period"] = void 0;
    EarningsEstimatesInfo.prototype["year"] = void 0;
    EarningsEstimatesInfo.prototype["quarter"] = void 0;
    var _default = EarningsEstimatesInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EarningsEstimates.js
var require_EarningsEstimates = __commonJS({
  "../node_modules/finnhub/dist/model/EarningsEstimates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _EarningsEstimatesInfo = _interopRequireDefault(require_EarningsEstimatesInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EarningsEstimates = function() {
      function EarningsEstimates2() {
        _classCallCheck(this, EarningsEstimates2);
        EarningsEstimates2.initialize(this);
      }
      _createClass(EarningsEstimates2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EarningsEstimates</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EarningsEstimates} obj Optional instance to populate.
         * @return {module:model/EarningsEstimates} The populated <code>EarningsEstimates</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EarningsEstimates2();
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_EarningsEstimatesInfo["default"]]);
            }
            if (data.hasOwnProperty("freq")) {
              obj["freq"] = _ApiClient["default"].convertToType(data["freq"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return EarningsEstimates2;
    }();
    EarningsEstimates.prototype["data"] = void 0;
    EarningsEstimates.prototype["freq"] = void 0;
    EarningsEstimates.prototype["symbol"] = void 0;
    var _default = EarningsEstimates;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EbitEstimatesInfo.js
var require_EbitEstimatesInfo = __commonJS({
  "../node_modules/finnhub/dist/model/EbitEstimatesInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EbitEstimatesInfo = function() {
      function EbitEstimatesInfo2() {
        _classCallCheck(this, EbitEstimatesInfo2);
        EbitEstimatesInfo2.initialize(this);
      }
      _createClass(EbitEstimatesInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EbitEstimatesInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EbitEstimatesInfo} obj Optional instance to populate.
         * @return {module:model/EbitEstimatesInfo} The populated <code>EbitEstimatesInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EbitEstimatesInfo2();
            if (data.hasOwnProperty("ebitAvg")) {
              obj["ebitAvg"] = _ApiClient["default"].convertToType(data["ebitAvg"], "Number");
            }
            if (data.hasOwnProperty("ebitHigh")) {
              obj["ebitHigh"] = _ApiClient["default"].convertToType(data["ebitHigh"], "Number");
            }
            if (data.hasOwnProperty("ebitLow")) {
              obj["ebitLow"] = _ApiClient["default"].convertToType(data["ebitLow"], "Number");
            }
            if (data.hasOwnProperty("numberAnalysts")) {
              obj["numberAnalysts"] = _ApiClient["default"].convertToType(data["numberAnalysts"], "Number");
            }
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "Date");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
          }
          return obj;
        }
      }]);
      return EbitEstimatesInfo2;
    }();
    EbitEstimatesInfo.prototype["ebitAvg"] = void 0;
    EbitEstimatesInfo.prototype["ebitHigh"] = void 0;
    EbitEstimatesInfo.prototype["ebitLow"] = void 0;
    EbitEstimatesInfo.prototype["numberAnalysts"] = void 0;
    EbitEstimatesInfo.prototype["period"] = void 0;
    EbitEstimatesInfo.prototype["year"] = void 0;
    EbitEstimatesInfo.prototype["quarter"] = void 0;
    var _default = EbitEstimatesInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EbitEstimates.js
var require_EbitEstimates = __commonJS({
  "../node_modules/finnhub/dist/model/EbitEstimates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _EbitEstimatesInfo = _interopRequireDefault(require_EbitEstimatesInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EbitEstimates = function() {
      function EbitEstimates2() {
        _classCallCheck(this, EbitEstimates2);
        EbitEstimates2.initialize(this);
      }
      _createClass(EbitEstimates2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EbitEstimates</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EbitEstimates} obj Optional instance to populate.
         * @return {module:model/EbitEstimates} The populated <code>EbitEstimates</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EbitEstimates2();
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_EbitEstimatesInfo["default"]]);
            }
            if (data.hasOwnProperty("freq")) {
              obj["freq"] = _ApiClient["default"].convertToType(data["freq"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return EbitEstimates2;
    }();
    EbitEstimates.prototype["data"] = void 0;
    EbitEstimates.prototype["freq"] = void 0;
    EbitEstimates.prototype["symbol"] = void 0;
    var _default = EbitEstimates;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EbitdaEstimatesInfo.js
var require_EbitdaEstimatesInfo = __commonJS({
  "../node_modules/finnhub/dist/model/EbitdaEstimatesInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EbitdaEstimatesInfo = function() {
      function EbitdaEstimatesInfo2() {
        _classCallCheck(this, EbitdaEstimatesInfo2);
        EbitdaEstimatesInfo2.initialize(this);
      }
      _createClass(EbitdaEstimatesInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EbitdaEstimatesInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EbitdaEstimatesInfo} obj Optional instance to populate.
         * @return {module:model/EbitdaEstimatesInfo} The populated <code>EbitdaEstimatesInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EbitdaEstimatesInfo2();
            if (data.hasOwnProperty("ebitdaAvg")) {
              obj["ebitdaAvg"] = _ApiClient["default"].convertToType(data["ebitdaAvg"], "Number");
            }
            if (data.hasOwnProperty("ebitdaHigh")) {
              obj["ebitdaHigh"] = _ApiClient["default"].convertToType(data["ebitdaHigh"], "Number");
            }
            if (data.hasOwnProperty("ebitdaLow")) {
              obj["ebitdaLow"] = _ApiClient["default"].convertToType(data["ebitdaLow"], "Number");
            }
            if (data.hasOwnProperty("numberAnalysts")) {
              obj["numberAnalysts"] = _ApiClient["default"].convertToType(data["numberAnalysts"], "Number");
            }
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "Date");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
          }
          return obj;
        }
      }]);
      return EbitdaEstimatesInfo2;
    }();
    EbitdaEstimatesInfo.prototype["ebitdaAvg"] = void 0;
    EbitdaEstimatesInfo.prototype["ebitdaHigh"] = void 0;
    EbitdaEstimatesInfo.prototype["ebitdaLow"] = void 0;
    EbitdaEstimatesInfo.prototype["numberAnalysts"] = void 0;
    EbitdaEstimatesInfo.prototype["period"] = void 0;
    EbitdaEstimatesInfo.prototype["year"] = void 0;
    EbitdaEstimatesInfo.prototype["quarter"] = void 0;
    var _default = EbitdaEstimatesInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EbitdaEstimates.js
var require_EbitdaEstimates = __commonJS({
  "../node_modules/finnhub/dist/model/EbitdaEstimates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _EbitdaEstimatesInfo = _interopRequireDefault(require_EbitdaEstimatesInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EbitdaEstimates = function() {
      function EbitdaEstimates2() {
        _classCallCheck(this, EbitdaEstimates2);
        EbitdaEstimates2.initialize(this);
      }
      _createClass(EbitdaEstimates2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EbitdaEstimates</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EbitdaEstimates} obj Optional instance to populate.
         * @return {module:model/EbitdaEstimates} The populated <code>EbitdaEstimates</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EbitdaEstimates2();
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_EbitdaEstimatesInfo["default"]]);
            }
            if (data.hasOwnProperty("freq")) {
              obj["freq"] = _ApiClient["default"].convertToType(data["freq"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return EbitdaEstimates2;
    }();
    EbitdaEstimates.prototype["data"] = void 0;
    EbitdaEstimates.prototype["freq"] = void 0;
    EbitdaEstimates.prototype["symbol"] = void 0;
    var _default = EbitdaEstimates;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EconomicEvent.js
var require_EconomicEvent = __commonJS({
  "../node_modules/finnhub/dist/model/EconomicEvent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EconomicEvent = function() {
      function EconomicEvent2() {
        _classCallCheck(this, EconomicEvent2);
        EconomicEvent2.initialize(this);
      }
      _createClass(EconomicEvent2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EconomicEvent</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EconomicEvent} obj Optional instance to populate.
         * @return {module:model/EconomicEvent} The populated <code>EconomicEvent</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EconomicEvent2();
            if (data.hasOwnProperty("actual")) {
              obj["actual"] = _ApiClient["default"].convertToType(data["actual"], "Number");
            }
            if (data.hasOwnProperty("prev")) {
              obj["prev"] = _ApiClient["default"].convertToType(data["prev"], "Number");
            }
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("unit")) {
              obj["unit"] = _ApiClient["default"].convertToType(data["unit"], "String");
            }
            if (data.hasOwnProperty("estimate")) {
              obj["estimate"] = _ApiClient["default"].convertToType(data["estimate"], "Number");
            }
            if (data.hasOwnProperty("event")) {
              obj["event"] = _ApiClient["default"].convertToType(data["event"], "String");
            }
            if (data.hasOwnProperty("impact")) {
              obj["impact"] = _ApiClient["default"].convertToType(data["impact"], "String");
            }
            if (data.hasOwnProperty("time")) {
              obj["time"] = _ApiClient["default"].convertToType(data["time"], "String");
            }
          }
          return obj;
        }
      }]);
      return EconomicEvent2;
    }();
    EconomicEvent.prototype["actual"] = void 0;
    EconomicEvent.prototype["prev"] = void 0;
    EconomicEvent.prototype["country"] = void 0;
    EconomicEvent.prototype["unit"] = void 0;
    EconomicEvent.prototype["estimate"] = void 0;
    EconomicEvent.prototype["event"] = void 0;
    EconomicEvent.prototype["impact"] = void 0;
    EconomicEvent.prototype["time"] = void 0;
    var _default = EconomicEvent;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EconomicCalendar.js
var require_EconomicCalendar = __commonJS({
  "../node_modules/finnhub/dist/model/EconomicCalendar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _EconomicEvent = _interopRequireDefault(require_EconomicEvent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EconomicCalendar = function() {
      function EconomicCalendar2() {
        _classCallCheck(this, EconomicCalendar2);
        EconomicCalendar2.initialize(this);
      }
      _createClass(EconomicCalendar2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EconomicCalendar</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EconomicCalendar} obj Optional instance to populate.
         * @return {module:model/EconomicCalendar} The populated <code>EconomicCalendar</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EconomicCalendar2();
            if (data.hasOwnProperty("economicCalendar")) {
              obj["economicCalendar"] = _ApiClient["default"].convertToType(data["economicCalendar"], [_EconomicEvent["default"]]);
            }
          }
          return obj;
        }
      }]);
      return EconomicCalendar2;
    }();
    EconomicCalendar.prototype["economicCalendar"] = void 0;
    var _default = EconomicCalendar;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EconomicCode.js
var require_EconomicCode = __commonJS({
  "../node_modules/finnhub/dist/model/EconomicCode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EconomicCode = function() {
      function EconomicCode2() {
        _classCallCheck(this, EconomicCode2);
        EconomicCode2.initialize(this);
      }
      _createClass(EconomicCode2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EconomicCode</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EconomicCode} obj Optional instance to populate.
         * @return {module:model/EconomicCode} The populated <code>EconomicCode</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EconomicCode2();
            if (data.hasOwnProperty("code")) {
              obj["code"] = _ApiClient["default"].convertToType(data["code"], "String");
            }
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("unit")) {
              obj["unit"] = _ApiClient["default"].convertToType(data["unit"], "String");
            }
          }
          return obj;
        }
      }]);
      return EconomicCode2;
    }();
    EconomicCode.prototype["code"] = void 0;
    EconomicCode.prototype["country"] = void 0;
    EconomicCode.prototype["name"] = void 0;
    EconomicCode.prototype["unit"] = void 0;
    var _default = EconomicCode;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EconomicDataInfo.js
var require_EconomicDataInfo = __commonJS({
  "../node_modules/finnhub/dist/model/EconomicDataInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EconomicDataInfo = function() {
      function EconomicDataInfo2() {
        _classCallCheck(this, EconomicDataInfo2);
        EconomicDataInfo2.initialize(this);
      }
      _createClass(EconomicDataInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EconomicDataInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EconomicDataInfo} obj Optional instance to populate.
         * @return {module:model/EconomicDataInfo} The populated <code>EconomicDataInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EconomicDataInfo2();
            if (data.hasOwnProperty("date")) {
              obj["date"] = _ApiClient["default"].convertToType(data["date"], "String");
            }
            if (data.hasOwnProperty("value")) {
              obj["value"] = _ApiClient["default"].convertToType(data["value"], "Number");
            }
          }
          return obj;
        }
      }]);
      return EconomicDataInfo2;
    }();
    EconomicDataInfo.prototype["date"] = void 0;
    EconomicDataInfo.prototype["value"] = void 0;
    var _default = EconomicDataInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/EconomicData.js
var require_EconomicData = __commonJS({
  "../node_modules/finnhub/dist/model/EconomicData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _EconomicDataInfo = _interopRequireDefault(require_EconomicDataInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EconomicData = function() {
      function EconomicData2() {
        _classCallCheck(this, EconomicData2);
        EconomicData2.initialize(this);
      }
      _createClass(EconomicData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>EconomicData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/EconomicData} obj Optional instance to populate.
         * @return {module:model/EconomicData} The populated <code>EconomicData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new EconomicData2();
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_EconomicDataInfo["default"]]);
            }
            if (data.hasOwnProperty("code")) {
              obj["code"] = _ApiClient["default"].convertToType(data["code"], "String");
            }
          }
          return obj;
        }
      }]);
      return EconomicData2;
    }();
    EconomicData.prototype["data"] = void 0;
    EconomicData.prototype["code"] = void 0;
    var _default = EconomicData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/FDAComitteeMeeting.js
var require_FDAComitteeMeeting = __commonJS({
  "../node_modules/finnhub/dist/model/FDAComitteeMeeting.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var FDAComitteeMeeting = function() {
      function FDAComitteeMeeting2() {
        _classCallCheck(this, FDAComitteeMeeting2);
        FDAComitteeMeeting2.initialize(this);
      }
      _createClass(FDAComitteeMeeting2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>FDAComitteeMeeting</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/FDAComitteeMeeting} obj Optional instance to populate.
         * @return {module:model/FDAComitteeMeeting} The populated <code>FDAComitteeMeeting</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new FDAComitteeMeeting2();
            if (data.hasOwnProperty("fromDate")) {
              obj["fromDate"] = _ApiClient["default"].convertToType(data["fromDate"], "String");
            }
            if (data.hasOwnProperty("toDate")) {
              obj["toDate"] = _ApiClient["default"].convertToType(data["toDate"], "String");
            }
            if (data.hasOwnProperty("eventDescription")) {
              obj["eventDescription"] = _ApiClient["default"].convertToType(data["eventDescription"], "String");
            }
            if (data.hasOwnProperty("url")) {
              obj["url"] = _ApiClient["default"].convertToType(data["url"], "String");
            }
          }
          return obj;
        }
      }]);
      return FDAComitteeMeeting2;
    }();
    FDAComitteeMeeting.prototype["fromDate"] = void 0;
    FDAComitteeMeeting.prototype["toDate"] = void 0;
    FDAComitteeMeeting.prototype["eventDescription"] = void 0;
    FDAComitteeMeeting.prototype["url"] = void 0;
    var _default = FDAComitteeMeeting;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Filing.js
var require_Filing = __commonJS({
  "../node_modules/finnhub/dist/model/Filing.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Filing = function() {
      function Filing2() {
        _classCallCheck(this, Filing2);
        Filing2.initialize(this);
      }
      _createClass(Filing2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Filing</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Filing} obj Optional instance to populate.
         * @return {module:model/Filing} The populated <code>Filing</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Filing2();
            if (data.hasOwnProperty("accessNumber")) {
              obj["accessNumber"] = _ApiClient["default"].convertToType(data["accessNumber"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("form")) {
              obj["form"] = _ApiClient["default"].convertToType(data["form"], "String");
            }
            if (data.hasOwnProperty("filedDate")) {
              obj["filedDate"] = _ApiClient["default"].convertToType(data["filedDate"], "String");
            }
            if (data.hasOwnProperty("acceptedDate")) {
              obj["acceptedDate"] = _ApiClient["default"].convertToType(data["acceptedDate"], "String");
            }
            if (data.hasOwnProperty("reportUrl")) {
              obj["reportUrl"] = _ApiClient["default"].convertToType(data["reportUrl"], "String");
            }
            if (data.hasOwnProperty("filingUrl")) {
              obj["filingUrl"] = _ApiClient["default"].convertToType(data["filingUrl"], "String");
            }
          }
          return obj;
        }
      }]);
      return Filing2;
    }();
    Filing.prototype["accessNumber"] = void 0;
    Filing.prototype["symbol"] = void 0;
    Filing.prototype["cik"] = void 0;
    Filing.prototype["form"] = void 0;
    Filing.prototype["filedDate"] = void 0;
    Filing.prototype["acceptedDate"] = void 0;
    Filing.prototype["reportUrl"] = void 0;
    Filing.prototype["filingUrl"] = void 0;
    var _default = Filing;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/FilingResponse.js
var require_FilingResponse = __commonJS({
  "../node_modules/finnhub/dist/model/FilingResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var FilingResponse = function() {
      function FilingResponse2() {
        _classCallCheck(this, FilingResponse2);
        FilingResponse2.initialize(this);
      }
      _createClass(FilingResponse2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>FilingResponse</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/FilingResponse} obj Optional instance to populate.
         * @return {module:model/FilingResponse} The populated <code>FilingResponse</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new FilingResponse2();
            if (data.hasOwnProperty("filingId")) {
              obj["filingId"] = _ApiClient["default"].convertToType(data["filingId"], "String");
            }
            if (data.hasOwnProperty("title")) {
              obj["title"] = _ApiClient["default"].convertToType(data["title"], "String");
            }
            if (data.hasOwnProperty("filerId")) {
              obj["filerId"] = _ApiClient["default"].convertToType(data["filerId"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], Object);
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("acceptanceDate")) {
              obj["acceptanceDate"] = _ApiClient["default"].convertToType(data["acceptanceDate"], "String");
            }
            if (data.hasOwnProperty("filedDate")) {
              obj["filedDate"] = _ApiClient["default"].convertToType(data["filedDate"], "String");
            }
            if (data.hasOwnProperty("reportDate")) {
              obj["reportDate"] = _ApiClient["default"].convertToType(data["reportDate"], "String");
            }
            if (data.hasOwnProperty("form")) {
              obj["form"] = _ApiClient["default"].convertToType(data["form"], "String");
            }
            if (data.hasOwnProperty("amend")) {
              obj["amend"] = _ApiClient["default"].convertToType(data["amend"], "Boolean");
            }
            if (data.hasOwnProperty("source")) {
              obj["source"] = _ApiClient["default"].convertToType(data["source"], "String");
            }
            if (data.hasOwnProperty("pageCount")) {
              obj["pageCount"] = _ApiClient["default"].convertToType(data["pageCount"], "Number");
            }
            if (data.hasOwnProperty("documentCount")) {
              obj["documentCount"] = _ApiClient["default"].convertToType(data["documentCount"], "Number");
            }
          }
          return obj;
        }
      }]);
      return FilingResponse2;
    }();
    FilingResponse.prototype["filingId"] = void 0;
    FilingResponse.prototype["title"] = void 0;
    FilingResponse.prototype["filerId"] = void 0;
    FilingResponse.prototype["symbol"] = void 0;
    FilingResponse.prototype["name"] = void 0;
    FilingResponse.prototype["acceptanceDate"] = void 0;
    FilingResponse.prototype["filedDate"] = void 0;
    FilingResponse.prototype["reportDate"] = void 0;
    FilingResponse.prototype["form"] = void 0;
    FilingResponse.prototype["amend"] = void 0;
    FilingResponse.prototype["source"] = void 0;
    FilingResponse.prototype["pageCount"] = void 0;
    FilingResponse.prototype["documentCount"] = void 0;
    var _default = FilingResponse;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/FilingSentiment.js
var require_FilingSentiment = __commonJS({
  "../node_modules/finnhub/dist/model/FilingSentiment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var FilingSentiment = function() {
      function FilingSentiment2() {
        _classCallCheck(this, FilingSentiment2);
        FilingSentiment2.initialize(this);
      }
      _createClass(FilingSentiment2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>FilingSentiment</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/FilingSentiment} obj Optional instance to populate.
         * @return {module:model/FilingSentiment} The populated <code>FilingSentiment</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new FilingSentiment2();
            if (data.hasOwnProperty("negative")) {
              obj["negative"] = _ApiClient["default"].convertToType(data["negative"], "Number");
            }
            if (data.hasOwnProperty("positive")) {
              obj["positive"] = _ApiClient["default"].convertToType(data["positive"], "Number");
            }
            if (data.hasOwnProperty("polarity")) {
              obj["polarity"] = _ApiClient["default"].convertToType(data["polarity"], "Number");
            }
            if (data.hasOwnProperty("litigious")) {
              obj["litigious"] = _ApiClient["default"].convertToType(data["litigious"], "Number");
            }
            if (data.hasOwnProperty("uncertainty")) {
              obj["uncertainty"] = _ApiClient["default"].convertToType(data["uncertainty"], "Number");
            }
            if (data.hasOwnProperty("constraining")) {
              obj["constraining"] = _ApiClient["default"].convertToType(data["constraining"], "Number");
            }
            if (data.hasOwnProperty("modal-weak")) {
              obj["modal-weak"] = _ApiClient["default"].convertToType(data["modal-weak"], "Number");
            }
            if (data.hasOwnProperty("modal-strong")) {
              obj["modal-strong"] = _ApiClient["default"].convertToType(data["modal-strong"], "Number");
            }
            if (data.hasOwnProperty("modal-moderate")) {
              obj["modal-moderate"] = _ApiClient["default"].convertToType(data["modal-moderate"], "Number");
            }
          }
          return obj;
        }
      }]);
      return FilingSentiment2;
    }();
    FilingSentiment.prototype["negative"] = void 0;
    FilingSentiment.prototype["positive"] = void 0;
    FilingSentiment.prototype["polarity"] = void 0;
    FilingSentiment.prototype["litigious"] = void 0;
    FilingSentiment.prototype["uncertainty"] = void 0;
    FilingSentiment.prototype["constraining"] = void 0;
    FilingSentiment.prototype["modal-weak"] = void 0;
    FilingSentiment.prototype["modal-strong"] = void 0;
    FilingSentiment.prototype["modal-moderate"] = void 0;
    var _default = FilingSentiment;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/FinancialStatements.js
var require_FinancialStatements = __commonJS({
  "../node_modules/finnhub/dist/model/FinancialStatements.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var FinancialStatements = function() {
      function FinancialStatements2() {
        _classCallCheck(this, FinancialStatements2);
        FinancialStatements2.initialize(this);
      }
      _createClass(FinancialStatements2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>FinancialStatements</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/FinancialStatements} obj Optional instance to populate.
         * @return {module:model/FinancialStatements} The populated <code>FinancialStatements</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new FinancialStatements2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("financials")) {
              obj["financials"] = _ApiClient["default"].convertToType(data["financials"], [Object]);
            }
          }
          return obj;
        }
      }]);
      return FinancialStatements2;
    }();
    FinancialStatements.prototype["symbol"] = void 0;
    FinancialStatements.prototype["financials"] = void 0;
    var _default = FinancialStatements;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Report.js
var require_Report = __commonJS({
  "../node_modules/finnhub/dist/model/Report.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Report = function() {
      function Report2() {
        _classCallCheck(this, Report2);
        Report2.initialize(this);
      }
      _createClass(Report2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Report</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Report} obj Optional instance to populate.
         * @return {module:model/Report} The populated <code>Report</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Report2();
            if (data.hasOwnProperty("accessNumber")) {
              obj["accessNumber"] = _ApiClient["default"].convertToType(data["accessNumber"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
            if (data.hasOwnProperty("form")) {
              obj["form"] = _ApiClient["default"].convertToType(data["form"], "String");
            }
            if (data.hasOwnProperty("startDate")) {
              obj["startDate"] = _ApiClient["default"].convertToType(data["startDate"], "String");
            }
            if (data.hasOwnProperty("endDate")) {
              obj["endDate"] = _ApiClient["default"].convertToType(data["endDate"], "String");
            }
            if (data.hasOwnProperty("filedDate")) {
              obj["filedDate"] = _ApiClient["default"].convertToType(data["filedDate"], "String");
            }
            if (data.hasOwnProperty("acceptedDate")) {
              obj["acceptedDate"] = _ApiClient["default"].convertToType(data["acceptedDate"], "String");
            }
            if (data.hasOwnProperty("report")) {
              obj["report"] = _ApiClient["default"].convertToType(data["report"], Object);
            }
          }
          return obj;
        }
      }]);
      return Report2;
    }();
    Report.prototype["accessNumber"] = void 0;
    Report.prototype["symbol"] = void 0;
    Report.prototype["cik"] = void 0;
    Report.prototype["year"] = void 0;
    Report.prototype["quarter"] = void 0;
    Report.prototype["form"] = void 0;
    Report.prototype["startDate"] = void 0;
    Report.prototype["endDate"] = void 0;
    Report.prototype["filedDate"] = void 0;
    Report.prototype["acceptedDate"] = void 0;
    Report.prototype["report"] = void 0;
    var _default = Report;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/FinancialsAsReported.js
var require_FinancialsAsReported = __commonJS({
  "../node_modules/finnhub/dist/model/FinancialsAsReported.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _Report = _interopRequireDefault(require_Report());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var FinancialsAsReported = function() {
      function FinancialsAsReported2() {
        _classCallCheck(this, FinancialsAsReported2);
        FinancialsAsReported2.initialize(this);
      }
      _createClass(FinancialsAsReported2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>FinancialsAsReported</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/FinancialsAsReported} obj Optional instance to populate.
         * @return {module:model/FinancialsAsReported} The populated <code>FinancialsAsReported</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new FinancialsAsReported2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_Report["default"]]);
            }
          }
          return obj;
        }
      }]);
      return FinancialsAsReported2;
    }();
    FinancialsAsReported.prototype["symbol"] = void 0;
    FinancialsAsReported.prototype["cik"] = void 0;
    FinancialsAsReported.prototype["data"] = void 0;
    var _default = FinancialsAsReported;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ForexCandles.js
var require_ForexCandles = __commonJS({
  "../node_modules/finnhub/dist/model/ForexCandles.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ForexCandles = function() {
      function ForexCandles2() {
        _classCallCheck(this, ForexCandles2);
        ForexCandles2.initialize(this);
      }
      _createClass(ForexCandles2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ForexCandles</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ForexCandles} obj Optional instance to populate.
         * @return {module:model/ForexCandles} The populated <code>ForexCandles</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ForexCandles2();
            if (data.hasOwnProperty("o")) {
              obj["o"] = _ApiClient["default"].convertToType(data["o"], ["Number"]);
            }
            if (data.hasOwnProperty("h")) {
              obj["h"] = _ApiClient["default"].convertToType(data["h"], ["Number"]);
            }
            if (data.hasOwnProperty("l")) {
              obj["l"] = _ApiClient["default"].convertToType(data["l"], ["Number"]);
            }
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], ["Number"]);
            }
            if (data.hasOwnProperty("v")) {
              obj["v"] = _ApiClient["default"].convertToType(data["v"], ["Number"]);
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], ["Number"]);
            }
            if (data.hasOwnProperty("s")) {
              obj["s"] = _ApiClient["default"].convertToType(data["s"], "String");
            }
          }
          return obj;
        }
      }]);
      return ForexCandles2;
    }();
    ForexCandles.prototype["o"] = void 0;
    ForexCandles.prototype["h"] = void 0;
    ForexCandles.prototype["l"] = void 0;
    ForexCandles.prototype["c"] = void 0;
    ForexCandles.prototype["v"] = void 0;
    ForexCandles.prototype["t"] = void 0;
    ForexCandles.prototype["s"] = void 0;
    var _default = ForexCandles;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/ForexSymbol.js
var require_ForexSymbol = __commonJS({
  "../node_modules/finnhub/dist/model/ForexSymbol.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var ForexSymbol = function() {
      function ForexSymbol2() {
        _classCallCheck(this, ForexSymbol2);
        ForexSymbol2.initialize(this);
      }
      _createClass(ForexSymbol2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>ForexSymbol</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/ForexSymbol} obj Optional instance to populate.
         * @return {module:model/ForexSymbol} The populated <code>ForexSymbol</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new ForexSymbol2();
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("displaySymbol")) {
              obj["displaySymbol"] = _ApiClient["default"].convertToType(data["displaySymbol"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return ForexSymbol2;
    }();
    ForexSymbol.prototype["description"] = void 0;
    ForexSymbol.prototype["displaySymbol"] = void 0;
    ForexSymbol.prototype["symbol"] = void 0;
    var _default = ForexSymbol;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Forexrates.js
var require_Forexrates = __commonJS({
  "../node_modules/finnhub/dist/model/Forexrates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Forexrates = function() {
      function Forexrates2() {
        _classCallCheck(this, Forexrates2);
        Forexrates2.initialize(this);
      }
      _createClass(Forexrates2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Forexrates</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Forexrates} obj Optional instance to populate.
         * @return {module:model/Forexrates} The populated <code>Forexrates</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Forexrates2();
            if (data.hasOwnProperty("base")) {
              obj["base"] = _ApiClient["default"].convertToType(data["base"], "String");
            }
            if (data.hasOwnProperty("quote")) {
              obj["quote"] = _ApiClient["default"].convertToType(data["quote"], Object);
            }
          }
          return obj;
        }
      }]);
      return Forexrates2;
    }();
    Forexrates.prototype["base"] = void 0;
    Forexrates.prototype["quote"] = void 0;
    var _default = Forexrates;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/FundOwnershipInfo.js
var require_FundOwnershipInfo = __commonJS({
  "../node_modules/finnhub/dist/model/FundOwnershipInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var FundOwnershipInfo = function() {
      function FundOwnershipInfo2() {
        _classCallCheck(this, FundOwnershipInfo2);
        FundOwnershipInfo2.initialize(this);
      }
      _createClass(FundOwnershipInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>FundOwnershipInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/FundOwnershipInfo} obj Optional instance to populate.
         * @return {module:model/FundOwnershipInfo} The populated <code>FundOwnershipInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new FundOwnershipInfo2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("share")) {
              obj["share"] = _ApiClient["default"].convertToType(data["share"], "Number");
            }
            if (data.hasOwnProperty("change")) {
              obj["change"] = _ApiClient["default"].convertToType(data["change"], "Number");
            }
            if (data.hasOwnProperty("filingDate")) {
              obj["filingDate"] = _ApiClient["default"].convertToType(data["filingDate"], "Date");
            }
            if (data.hasOwnProperty("portfolioPercent")) {
              obj["portfolioPercent"] = _ApiClient["default"].convertToType(data["portfolioPercent"], "Number");
            }
          }
          return obj;
        }
      }]);
      return FundOwnershipInfo2;
    }();
    FundOwnershipInfo.prototype["name"] = void 0;
    FundOwnershipInfo.prototype["share"] = void 0;
    FundOwnershipInfo.prototype["change"] = void 0;
    FundOwnershipInfo.prototype["filingDate"] = void 0;
    FundOwnershipInfo.prototype["portfolioPercent"] = void 0;
    var _default = FundOwnershipInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/FundOwnership.js
var require_FundOwnership = __commonJS({
  "../node_modules/finnhub/dist/model/FundOwnership.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _FundOwnershipInfo = _interopRequireDefault(require_FundOwnershipInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var FundOwnership = function() {
      function FundOwnership2() {
        _classCallCheck(this, FundOwnership2);
        FundOwnership2.initialize(this);
      }
      _createClass(FundOwnership2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>FundOwnership</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/FundOwnership} obj Optional instance to populate.
         * @return {module:model/FundOwnership} The populated <code>FundOwnership</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new FundOwnership2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("ownership")) {
              obj["ownership"] = _ApiClient["default"].convertToType(data["ownership"], [_FundOwnershipInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return FundOwnership2;
    }();
    FundOwnership.prototype["symbol"] = void 0;
    FundOwnership.prototype["ownership"] = void 0;
    var _default = FundOwnership;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/HistoricalNBBO.js
var require_HistoricalNBBO = __commonJS({
  "../node_modules/finnhub/dist/model/HistoricalNBBO.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var HistoricalNBBO = function() {
      function HistoricalNBBO2() {
        _classCallCheck(this, HistoricalNBBO2);
        HistoricalNBBO2.initialize(this);
      }
      _createClass(HistoricalNBBO2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>HistoricalNBBO</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/HistoricalNBBO} obj Optional instance to populate.
         * @return {module:model/HistoricalNBBO} The populated <code>HistoricalNBBO</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new HistoricalNBBO2();
            if (data.hasOwnProperty("s")) {
              obj["s"] = _ApiClient["default"].convertToType(data["s"], "String");
            }
            if (data.hasOwnProperty("skip")) {
              obj["skip"] = _ApiClient["default"].convertToType(data["skip"], "Number");
            }
            if (data.hasOwnProperty("count")) {
              obj["count"] = _ApiClient["default"].convertToType(data["count"], "Number");
            }
            if (data.hasOwnProperty("total")) {
              obj["total"] = _ApiClient["default"].convertToType(data["total"], "Number");
            }
            if (data.hasOwnProperty("av")) {
              obj["av"] = _ApiClient["default"].convertToType(data["av"], ["Number"]);
            }
            if (data.hasOwnProperty("a")) {
              obj["a"] = _ApiClient["default"].convertToType(data["a"], ["Number"]);
            }
            if (data.hasOwnProperty("ax")) {
              obj["ax"] = _ApiClient["default"].convertToType(data["ax"], ["String"]);
            }
            if (data.hasOwnProperty("bv")) {
              obj["bv"] = _ApiClient["default"].convertToType(data["bv"], ["Number"]);
            }
            if (data.hasOwnProperty("b")) {
              obj["b"] = _ApiClient["default"].convertToType(data["b"], ["Number"]);
            }
            if (data.hasOwnProperty("bx")) {
              obj["bx"] = _ApiClient["default"].convertToType(data["bx"], ["String"]);
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], ["Number"]);
            }
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], [["String"]]);
            }
          }
          return obj;
        }
      }]);
      return HistoricalNBBO2;
    }();
    HistoricalNBBO.prototype["s"] = void 0;
    HistoricalNBBO.prototype["skip"] = void 0;
    HistoricalNBBO.prototype["count"] = void 0;
    HistoricalNBBO.prototype["total"] = void 0;
    HistoricalNBBO.prototype["av"] = void 0;
    HistoricalNBBO.prototype["a"] = void 0;
    HistoricalNBBO.prototype["ax"] = void 0;
    HistoricalNBBO.prototype["bv"] = void 0;
    HistoricalNBBO.prototype["b"] = void 0;
    HistoricalNBBO.prototype["bx"] = void 0;
    HistoricalNBBO.prototype["t"] = void 0;
    HistoricalNBBO.prototype["c"] = void 0;
    var _default = HistoricalNBBO;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IPOEvent.js
var require_IPOEvent = __commonJS({
  "../node_modules/finnhub/dist/model/IPOEvent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IPOEvent = function() {
      function IPOEvent2() {
        _classCallCheck(this, IPOEvent2);
        IPOEvent2.initialize(this);
      }
      _createClass(IPOEvent2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IPOEvent</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IPOEvent} obj Optional instance to populate.
         * @return {module:model/IPOEvent} The populated <code>IPOEvent</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IPOEvent2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("date")) {
              obj["date"] = _ApiClient["default"].convertToType(data["date"], "Date");
            }
            if (data.hasOwnProperty("exchange")) {
              obj["exchange"] = _ApiClient["default"].convertToType(data["exchange"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("status")) {
              obj["status"] = _ApiClient["default"].convertToType(data["status"], "String");
            }
            if (data.hasOwnProperty("price")) {
              obj["price"] = _ApiClient["default"].convertToType(data["price"], "String");
            }
            if (data.hasOwnProperty("numberOfShares")) {
              obj["numberOfShares"] = _ApiClient["default"].convertToType(data["numberOfShares"], "Number");
            }
            if (data.hasOwnProperty("totalSharesValue")) {
              obj["totalSharesValue"] = _ApiClient["default"].convertToType(data["totalSharesValue"], "Number");
            }
          }
          return obj;
        }
      }]);
      return IPOEvent2;
    }();
    IPOEvent.prototype["symbol"] = void 0;
    IPOEvent.prototype["date"] = void 0;
    IPOEvent.prototype["exchange"] = void 0;
    IPOEvent.prototype["name"] = void 0;
    IPOEvent.prototype["status"] = void 0;
    IPOEvent.prototype["price"] = void 0;
    IPOEvent.prototype["numberOfShares"] = void 0;
    IPOEvent.prototype["totalSharesValue"] = void 0;
    var _default = IPOEvent;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IPOCalendar.js
var require_IPOCalendar = __commonJS({
  "../node_modules/finnhub/dist/model/IPOCalendar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _IPOEvent = _interopRequireDefault(require_IPOEvent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IPOCalendar = function() {
      function IPOCalendar2() {
        _classCallCheck(this, IPOCalendar2);
        IPOCalendar2.initialize(this);
      }
      _createClass(IPOCalendar2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IPOCalendar</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IPOCalendar} obj Optional instance to populate.
         * @return {module:model/IPOCalendar} The populated <code>IPOCalendar</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IPOCalendar2();
            if (data.hasOwnProperty("ipoCalendar")) {
              obj["ipoCalendar"] = _ApiClient["default"].convertToType(data["ipoCalendar"], [_IPOEvent["default"]]);
            }
          }
          return obj;
        }
      }]);
      return IPOCalendar2;
    }();
    IPOCalendar.prototype["ipoCalendar"] = void 0;
    var _default = IPOCalendar;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InFilingResponse.js
var require_InFilingResponse = __commonJS({
  "../node_modules/finnhub/dist/model/InFilingResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _DocumentResponse = _interopRequireDefault(require_DocumentResponse());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InFilingResponse = function() {
      function InFilingResponse2() {
        _classCallCheck(this, InFilingResponse2);
        InFilingResponse2.initialize(this);
      }
      _createClass(InFilingResponse2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InFilingResponse</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InFilingResponse} obj Optional instance to populate.
         * @return {module:model/InFilingResponse} The populated <code>InFilingResponse</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InFilingResponse2();
            if (data.hasOwnProperty("filingId")) {
              obj["filingId"] = _ApiClient["default"].convertToType(data["filingId"], "String");
            }
            if (data.hasOwnProperty("title")) {
              obj["title"] = _ApiClient["default"].convertToType(data["title"], "String");
            }
            if (data.hasOwnProperty("filerId")) {
              obj["filerId"] = _ApiClient["default"].convertToType(data["filerId"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], Object);
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("acceptanceDate")) {
              obj["acceptanceDate"] = _ApiClient["default"].convertToType(data["acceptanceDate"], "String");
            }
            if (data.hasOwnProperty("filedDate")) {
              obj["filedDate"] = _ApiClient["default"].convertToType(data["filedDate"], "String");
            }
            if (data.hasOwnProperty("reportDate")) {
              obj["reportDate"] = _ApiClient["default"].convertToType(data["reportDate"], "String");
            }
            if (data.hasOwnProperty("form")) {
              obj["form"] = _ApiClient["default"].convertToType(data["form"], "String");
            }
            if (data.hasOwnProperty("amend")) {
              obj["amend"] = _ApiClient["default"].convertToType(data["amend"], "Boolean");
            }
            if (data.hasOwnProperty("source")) {
              obj["source"] = _ApiClient["default"].convertToType(data["source"], "String");
            }
            if (data.hasOwnProperty("pageCount")) {
              obj["pageCount"] = _ApiClient["default"].convertToType(data["pageCount"], "Number");
            }
            if (data.hasOwnProperty("documentCount")) {
              obj["documentCount"] = _ApiClient["default"].convertToType(data["documentCount"], "Number");
            }
            if (data.hasOwnProperty("documents")) {
              obj["documents"] = _ApiClient["default"].convertToType(data["documents"], [_DocumentResponse["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InFilingResponse2;
    }();
    InFilingResponse.prototype["filingId"] = void 0;
    InFilingResponse.prototype["title"] = void 0;
    InFilingResponse.prototype["filerId"] = void 0;
    InFilingResponse.prototype["symbol"] = void 0;
    InFilingResponse.prototype["name"] = void 0;
    InFilingResponse.prototype["acceptanceDate"] = void 0;
    InFilingResponse.prototype["filedDate"] = void 0;
    InFilingResponse.prototype["reportDate"] = void 0;
    InFilingResponse.prototype["form"] = void 0;
    InFilingResponse.prototype["amend"] = void 0;
    InFilingResponse.prototype["source"] = void 0;
    InFilingResponse.prototype["pageCount"] = void 0;
    InFilingResponse.prototype["documentCount"] = void 0;
    InFilingResponse.prototype["documents"] = void 0;
    var _default = InFilingResponse;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InFilingSearchBody.js
var require_InFilingSearchBody = __commonJS({
  "../node_modules/finnhub/dist/model/InFilingSearchBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InFilingSearchBody = function() {
      function InFilingSearchBody2(query, filingId) {
        _classCallCheck(this, InFilingSearchBody2);
        InFilingSearchBody2.initialize(this, query, filingId);
      }
      _createClass(InFilingSearchBody2, null, [{
        key: "initialize",
        value: function initialize(obj, query, filingId) {
          obj["query"] = query;
          obj["filingId"] = filingId;
        }
        /**
         * Constructs a <code>InFilingSearchBody</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InFilingSearchBody} obj Optional instance to populate.
         * @return {module:model/InFilingSearchBody} The populated <code>InFilingSearchBody</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InFilingSearchBody2();
            if (data.hasOwnProperty("query")) {
              obj["query"] = _ApiClient["default"].convertToType(data["query"], "String");
            }
            if (data.hasOwnProperty("filingId")) {
              obj["filingId"] = _ApiClient["default"].convertToType(data["filingId"], "String");
            }
          }
          return obj;
        }
      }]);
      return InFilingSearchBody2;
    }();
    InFilingSearchBody.prototype["query"] = void 0;
    InFilingSearchBody.prototype["filingId"] = void 0;
    var _default = InFilingSearchBody;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IndexHistoricalConstituent.js
var require_IndexHistoricalConstituent = __commonJS({
  "../node_modules/finnhub/dist/model/IndexHistoricalConstituent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IndexHistoricalConstituent = function() {
      function IndexHistoricalConstituent2() {
        _classCallCheck(this, IndexHistoricalConstituent2);
        IndexHistoricalConstituent2.initialize(this);
      }
      _createClass(IndexHistoricalConstituent2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IndexHistoricalConstituent</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IndexHistoricalConstituent} obj Optional instance to populate.
         * @return {module:model/IndexHistoricalConstituent} The populated <code>IndexHistoricalConstituent</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IndexHistoricalConstituent2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("action")) {
              obj["action"] = _ApiClient["default"].convertToType(data["action"], "String");
            }
            if (data.hasOwnProperty("date")) {
              obj["date"] = _ApiClient["default"].convertToType(data["date"], "Date");
            }
          }
          return obj;
        }
      }]);
      return IndexHistoricalConstituent2;
    }();
    IndexHistoricalConstituent.prototype["symbol"] = void 0;
    IndexHistoricalConstituent.prototype["action"] = void 0;
    IndexHistoricalConstituent.prototype["date"] = void 0;
    var _default = IndexHistoricalConstituent;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IndicesConstituentsBreakdown.js
var require_IndicesConstituentsBreakdown = __commonJS({
  "../node_modules/finnhub/dist/model/IndicesConstituentsBreakdown.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IndicesConstituentsBreakdown = function() {
      function IndicesConstituentsBreakdown2() {
        _classCallCheck(this, IndicesConstituentsBreakdown2);
        IndicesConstituentsBreakdown2.initialize(this);
      }
      _createClass(IndicesConstituentsBreakdown2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IndicesConstituentsBreakdown</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IndicesConstituentsBreakdown} obj Optional instance to populate.
         * @return {module:model/IndicesConstituentsBreakdown} The populated <code>IndicesConstituentsBreakdown</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IndicesConstituentsBreakdown2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("shareClassFIGI")) {
              obj["shareClassFIGI"] = _ApiClient["default"].convertToType(data["shareClassFIGI"], "String");
            }
            if (data.hasOwnProperty("weight")) {
              obj["weight"] = _ApiClient["default"].convertToType(data["weight"], "Number");
            }
          }
          return obj;
        }
      }]);
      return IndicesConstituentsBreakdown2;
    }();
    IndicesConstituentsBreakdown.prototype["symbol"] = void 0;
    IndicesConstituentsBreakdown.prototype["name"] = void 0;
    IndicesConstituentsBreakdown.prototype["isin"] = void 0;
    IndicesConstituentsBreakdown.prototype["cusip"] = void 0;
    IndicesConstituentsBreakdown.prototype["shareClassFIGI"] = void 0;
    IndicesConstituentsBreakdown.prototype["weight"] = void 0;
    var _default = IndicesConstituentsBreakdown;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IndicesConstituents.js
var require_IndicesConstituents = __commonJS({
  "../node_modules/finnhub/dist/model/IndicesConstituents.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _IndicesConstituentsBreakdown = _interopRequireDefault(require_IndicesConstituentsBreakdown());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IndicesConstituents = function() {
      function IndicesConstituents2() {
        _classCallCheck(this, IndicesConstituents2);
        IndicesConstituents2.initialize(this);
      }
      _createClass(IndicesConstituents2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IndicesConstituents</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IndicesConstituents} obj Optional instance to populate.
         * @return {module:model/IndicesConstituents} The populated <code>IndicesConstituents</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IndicesConstituents2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("constituents")) {
              obj["constituents"] = _ApiClient["default"].convertToType(data["constituents"], ["String"]);
            }
            if (data.hasOwnProperty("constituentsBreakdown")) {
              obj["constituentsBreakdown"] = _ApiClient["default"].convertToType(data["constituentsBreakdown"], [_IndicesConstituentsBreakdown["default"]]);
            }
          }
          return obj;
        }
      }]);
      return IndicesConstituents2;
    }();
    IndicesConstituents.prototype["symbol"] = void 0;
    IndicesConstituents.prototype["constituents"] = void 0;
    IndicesConstituents.prototype["constituentsBreakdown"] = void 0;
    var _default = IndicesConstituents;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IndicesHistoricalConstituents.js
var require_IndicesHistoricalConstituents = __commonJS({
  "../node_modules/finnhub/dist/model/IndicesHistoricalConstituents.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _IndexHistoricalConstituent = _interopRequireDefault(require_IndexHistoricalConstituent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IndicesHistoricalConstituents = function() {
      function IndicesHistoricalConstituents2() {
        _classCallCheck(this, IndicesHistoricalConstituents2);
        IndicesHistoricalConstituents2.initialize(this);
      }
      _createClass(IndicesHistoricalConstituents2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IndicesHistoricalConstituents</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IndicesHistoricalConstituents} obj Optional instance to populate.
         * @return {module:model/IndicesHistoricalConstituents} The populated <code>IndicesHistoricalConstituents</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IndicesHistoricalConstituents2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("historicalConstituents")) {
              obj["historicalConstituents"] = _ApiClient["default"].convertToType(data["historicalConstituents"], [_IndexHistoricalConstituent["default"]]);
            }
          }
          return obj;
        }
      }]);
      return IndicesHistoricalConstituents2;
    }();
    IndicesHistoricalConstituents.prototype["symbol"] = void 0;
    IndicesHistoricalConstituents.prototype["historicalConstituents"] = void 0;
    var _default = IndicesHistoricalConstituents;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InsiderSentimentsData.js
var require_InsiderSentimentsData = __commonJS({
  "../node_modules/finnhub/dist/model/InsiderSentimentsData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InsiderSentimentsData = function() {
      function InsiderSentimentsData2() {
        _classCallCheck(this, InsiderSentimentsData2);
        InsiderSentimentsData2.initialize(this);
      }
      _createClass(InsiderSentimentsData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InsiderSentimentsData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InsiderSentimentsData} obj Optional instance to populate.
         * @return {module:model/InsiderSentimentsData} The populated <code>InsiderSentimentsData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InsiderSentimentsData2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("month")) {
              obj["month"] = _ApiClient["default"].convertToType(data["month"], "Number");
            }
            if (data.hasOwnProperty("change")) {
              obj["change"] = _ApiClient["default"].convertToType(data["change"], "Number");
            }
            if (data.hasOwnProperty("mspr")) {
              obj["mspr"] = _ApiClient["default"].convertToType(data["mspr"], "Number");
            }
          }
          return obj;
        }
      }]);
      return InsiderSentimentsData2;
    }();
    InsiderSentimentsData.prototype["symbol"] = void 0;
    InsiderSentimentsData.prototype["year"] = void 0;
    InsiderSentimentsData.prototype["month"] = void 0;
    InsiderSentimentsData.prototype["change"] = void 0;
    InsiderSentimentsData.prototype["mspr"] = void 0;
    var _default = InsiderSentimentsData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InsiderSentiments.js
var require_InsiderSentiments = __commonJS({
  "../node_modules/finnhub/dist/model/InsiderSentiments.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _InsiderSentimentsData = _interopRequireDefault(require_InsiderSentimentsData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InsiderSentiments = function() {
      function InsiderSentiments2() {
        _classCallCheck(this, InsiderSentiments2);
        InsiderSentiments2.initialize(this);
      }
      _createClass(InsiderSentiments2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InsiderSentiments</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InsiderSentiments} obj Optional instance to populate.
         * @return {module:model/InsiderSentiments} The populated <code>InsiderSentiments</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InsiderSentiments2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_InsiderSentimentsData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InsiderSentiments2;
    }();
    InsiderSentiments.prototype["symbol"] = void 0;
    InsiderSentiments.prototype["data"] = void 0;
    var _default = InsiderSentiments;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Transactions.js
var require_Transactions = __commonJS({
  "../node_modules/finnhub/dist/model/Transactions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Transactions = function() {
      function Transactions2() {
        _classCallCheck(this, Transactions2);
        Transactions2.initialize(this);
      }
      _createClass(Transactions2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Transactions</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Transactions} obj Optional instance to populate.
         * @return {module:model/Transactions} The populated <code>Transactions</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Transactions2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("share")) {
              obj["share"] = _ApiClient["default"].convertToType(data["share"], "Number");
            }
            if (data.hasOwnProperty("change")) {
              obj["change"] = _ApiClient["default"].convertToType(data["change"], "Number");
            }
            if (data.hasOwnProperty("filingDate")) {
              obj["filingDate"] = _ApiClient["default"].convertToType(data["filingDate"], "Date");
            }
            if (data.hasOwnProperty("transactionDate")) {
              obj["transactionDate"] = _ApiClient["default"].convertToType(data["transactionDate"], "Date");
            }
            if (data.hasOwnProperty("transactionPrice")) {
              obj["transactionPrice"] = _ApiClient["default"].convertToType(data["transactionPrice"], "Number");
            }
            if (data.hasOwnProperty("transactionCode")) {
              obj["transactionCode"] = _ApiClient["default"].convertToType(data["transactionCode"], "String");
            }
          }
          return obj;
        }
      }]);
      return Transactions2;
    }();
    Transactions.prototype["symbol"] = void 0;
    Transactions.prototype["name"] = void 0;
    Transactions.prototype["share"] = void 0;
    Transactions.prototype["change"] = void 0;
    Transactions.prototype["filingDate"] = void 0;
    Transactions.prototype["transactionDate"] = void 0;
    Transactions.prototype["transactionPrice"] = void 0;
    Transactions.prototype["transactionCode"] = void 0;
    var _default = Transactions;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InsiderTransactions.js
var require_InsiderTransactions = __commonJS({
  "../node_modules/finnhub/dist/model/InsiderTransactions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _Transactions = _interopRequireDefault(require_Transactions());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InsiderTransactions = function() {
      function InsiderTransactions2() {
        _classCallCheck(this, InsiderTransactions2);
        InsiderTransactions2.initialize(this);
      }
      _createClass(InsiderTransactions2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InsiderTransactions</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InsiderTransactions} obj Optional instance to populate.
         * @return {module:model/InsiderTransactions} The populated <code>InsiderTransactions</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InsiderTransactions2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_Transactions["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InsiderTransactions2;
    }();
    InsiderTransactions.prototype["symbol"] = void 0;
    InsiderTransactions.prototype["data"] = void 0;
    var _default = InsiderTransactions;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalOwnershipInfo.js
var require_InstitutionalOwnershipInfo = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalOwnershipInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalOwnershipInfo = function() {
      function InstitutionalOwnershipInfo2() {
        _classCallCheck(this, InstitutionalOwnershipInfo2);
        InstitutionalOwnershipInfo2.initialize(this);
      }
      _createClass(InstitutionalOwnershipInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalOwnershipInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalOwnershipInfo} obj Optional instance to populate.
         * @return {module:model/InstitutionalOwnershipInfo} The populated <code>InstitutionalOwnershipInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalOwnershipInfo2();
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("putCall")) {
              obj["putCall"] = _ApiClient["default"].convertToType(data["putCall"], "String");
            }
            if (data.hasOwnProperty("change")) {
              obj["change"] = _ApiClient["default"].convertToType(data["change"], "Number");
            }
            if (data.hasOwnProperty("noVoting")) {
              obj["noVoting"] = _ApiClient["default"].convertToType(data["noVoting"], "Number");
            }
            if (data.hasOwnProperty("percentage")) {
              obj["percentage"] = _ApiClient["default"].convertToType(data["percentage"], "Number");
            }
            if (data.hasOwnProperty("share")) {
              obj["share"] = _ApiClient["default"].convertToType(data["share"], "Number");
            }
            if (data.hasOwnProperty("sharedVoting")) {
              obj["sharedVoting"] = _ApiClient["default"].convertToType(data["sharedVoting"], "Number");
            }
            if (data.hasOwnProperty("soleVoting")) {
              obj["soleVoting"] = _ApiClient["default"].convertToType(data["soleVoting"], "Number");
            }
            if (data.hasOwnProperty("value")) {
              obj["value"] = _ApiClient["default"].convertToType(data["value"], "Number");
            }
          }
          return obj;
        }
      }]);
      return InstitutionalOwnershipInfo2;
    }();
    InstitutionalOwnershipInfo.prototype["cik"] = void 0;
    InstitutionalOwnershipInfo.prototype["name"] = void 0;
    InstitutionalOwnershipInfo.prototype["putCall"] = void 0;
    InstitutionalOwnershipInfo.prototype["change"] = void 0;
    InstitutionalOwnershipInfo.prototype["noVoting"] = void 0;
    InstitutionalOwnershipInfo.prototype["percentage"] = void 0;
    InstitutionalOwnershipInfo.prototype["share"] = void 0;
    InstitutionalOwnershipInfo.prototype["sharedVoting"] = void 0;
    InstitutionalOwnershipInfo.prototype["soleVoting"] = void 0;
    InstitutionalOwnershipInfo.prototype["value"] = void 0;
    var _default = InstitutionalOwnershipInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalOwnershipGroup.js
var require_InstitutionalOwnershipGroup = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalOwnershipGroup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _InstitutionalOwnershipInfo = _interopRequireDefault(require_InstitutionalOwnershipInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalOwnershipGroup = function() {
      function InstitutionalOwnershipGroup2() {
        _classCallCheck(this, InstitutionalOwnershipGroup2);
        InstitutionalOwnershipGroup2.initialize(this);
      }
      _createClass(InstitutionalOwnershipGroup2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalOwnershipGroup</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalOwnershipGroup} obj Optional instance to populate.
         * @return {module:model/InstitutionalOwnershipGroup} The populated <code>InstitutionalOwnershipGroup</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalOwnershipGroup2();
            if (data.hasOwnProperty("reportDate")) {
              obj["reportDate"] = _ApiClient["default"].convertToType(data["reportDate"], "String");
            }
            if (data.hasOwnProperty("ownership")) {
              obj["ownership"] = _ApiClient["default"].convertToType(data["ownership"], [_InstitutionalOwnershipInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InstitutionalOwnershipGroup2;
    }();
    InstitutionalOwnershipGroup.prototype["reportDate"] = void 0;
    InstitutionalOwnershipGroup.prototype["ownership"] = void 0;
    var _default = InstitutionalOwnershipGroup;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalOwnership.js
var require_InstitutionalOwnership = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalOwnership.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _InstitutionalOwnershipGroup = _interopRequireDefault(require_InstitutionalOwnershipGroup());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalOwnership = function() {
      function InstitutionalOwnership2() {
        _classCallCheck(this, InstitutionalOwnership2);
        InstitutionalOwnership2.initialize(this);
      }
      _createClass(InstitutionalOwnership2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalOwnership</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalOwnership} obj Optional instance to populate.
         * @return {module:model/InstitutionalOwnership} The populated <code>InstitutionalOwnership</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalOwnership2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_InstitutionalOwnershipGroup["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InstitutionalOwnership2;
    }();
    InstitutionalOwnership.prototype["symbol"] = void 0;
    InstitutionalOwnership.prototype["cusip"] = void 0;
    InstitutionalOwnership.prototype["data"] = void 0;
    var _default = InstitutionalOwnership;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalPortfolioInfo.js
var require_InstitutionalPortfolioInfo = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalPortfolioInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalPortfolioInfo = function() {
      function InstitutionalPortfolioInfo2() {
        _classCallCheck(this, InstitutionalPortfolioInfo2);
        InstitutionalPortfolioInfo2.initialize(this);
      }
      _createClass(InstitutionalPortfolioInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalPortfolioInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalPortfolioInfo} obj Optional instance to populate.
         * @return {module:model/InstitutionalPortfolioInfo} The populated <code>InstitutionalPortfolioInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalPortfolioInfo2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("putCall")) {
              obj["putCall"] = _ApiClient["default"].convertToType(data["putCall"], "String");
            }
            if (data.hasOwnProperty("change")) {
              obj["change"] = _ApiClient["default"].convertToType(data["change"], "Number");
            }
            if (data.hasOwnProperty("noVoting")) {
              obj["noVoting"] = _ApiClient["default"].convertToType(data["noVoting"], "Number");
            }
            if (data.hasOwnProperty("percentage")) {
              obj["percentage"] = _ApiClient["default"].convertToType(data["percentage"], "Number");
            }
            if (data.hasOwnProperty("share")) {
              obj["share"] = _ApiClient["default"].convertToType(data["share"], "Number");
            }
            if (data.hasOwnProperty("sharedVoting")) {
              obj["sharedVoting"] = _ApiClient["default"].convertToType(data["sharedVoting"], "Number");
            }
            if (data.hasOwnProperty("soleVoting")) {
              obj["soleVoting"] = _ApiClient["default"].convertToType(data["soleVoting"], "Number");
            }
            if (data.hasOwnProperty("value")) {
              obj["value"] = _ApiClient["default"].convertToType(data["value"], "Number");
            }
          }
          return obj;
        }
      }]);
      return InstitutionalPortfolioInfo2;
    }();
    InstitutionalPortfolioInfo.prototype["symbol"] = void 0;
    InstitutionalPortfolioInfo.prototype["cusip"] = void 0;
    InstitutionalPortfolioInfo.prototype["name"] = void 0;
    InstitutionalPortfolioInfo.prototype["putCall"] = void 0;
    InstitutionalPortfolioInfo.prototype["change"] = void 0;
    InstitutionalPortfolioInfo.prototype["noVoting"] = void 0;
    InstitutionalPortfolioInfo.prototype["percentage"] = void 0;
    InstitutionalPortfolioInfo.prototype["share"] = void 0;
    InstitutionalPortfolioInfo.prototype["sharedVoting"] = void 0;
    InstitutionalPortfolioInfo.prototype["soleVoting"] = void 0;
    InstitutionalPortfolioInfo.prototype["value"] = void 0;
    var _default = InstitutionalPortfolioInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalPortfolioGroup.js
var require_InstitutionalPortfolioGroup = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalPortfolioGroup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _InstitutionalPortfolioInfo = _interopRequireDefault(require_InstitutionalPortfolioInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalPortfolioGroup = function() {
      function InstitutionalPortfolioGroup2() {
        _classCallCheck(this, InstitutionalPortfolioGroup2);
        InstitutionalPortfolioGroup2.initialize(this);
      }
      _createClass(InstitutionalPortfolioGroup2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalPortfolioGroup</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalPortfolioGroup} obj Optional instance to populate.
         * @return {module:model/InstitutionalPortfolioGroup} The populated <code>InstitutionalPortfolioGroup</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalPortfolioGroup2();
            if (data.hasOwnProperty("reportDate")) {
              obj["reportDate"] = _ApiClient["default"].convertToType(data["reportDate"], "String");
            }
            if (data.hasOwnProperty("filingDate")) {
              obj["filingDate"] = _ApiClient["default"].convertToType(data["filingDate"], "String");
            }
            if (data.hasOwnProperty("portfolio")) {
              obj["portfolio"] = _ApiClient["default"].convertToType(data["portfolio"], [_InstitutionalPortfolioInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InstitutionalPortfolioGroup2;
    }();
    InstitutionalPortfolioGroup.prototype["reportDate"] = void 0;
    InstitutionalPortfolioGroup.prototype["filingDate"] = void 0;
    InstitutionalPortfolioGroup.prototype["portfolio"] = void 0;
    var _default = InstitutionalPortfolioGroup;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalPortfolio.js
var require_InstitutionalPortfolio = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalPortfolio.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _InstitutionalPortfolioGroup = _interopRequireDefault(require_InstitutionalPortfolioGroup());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalPortfolio = function() {
      function InstitutionalPortfolio2() {
        _classCallCheck(this, InstitutionalPortfolio2);
        InstitutionalPortfolio2.initialize(this);
      }
      _createClass(InstitutionalPortfolio2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalPortfolio</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalPortfolio} obj Optional instance to populate.
         * @return {module:model/InstitutionalPortfolio} The populated <code>InstitutionalPortfolio</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalPortfolio2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_InstitutionalPortfolioGroup["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InstitutionalPortfolio2;
    }();
    InstitutionalPortfolio.prototype["name"] = void 0;
    InstitutionalPortfolio.prototype["cik"] = void 0;
    InstitutionalPortfolio.prototype["data"] = void 0;
    var _default = InstitutionalPortfolio;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalProfileInfo.js
var require_InstitutionalProfileInfo = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalProfileInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalProfileInfo = function() {
      function InstitutionalProfileInfo2() {
        _classCallCheck(this, InstitutionalProfileInfo2);
        InstitutionalProfileInfo2.initialize(this);
      }
      _createClass(InstitutionalProfileInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalProfileInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalProfileInfo} obj Optional instance to populate.
         * @return {module:model/InstitutionalProfileInfo} The populated <code>InstitutionalProfileInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalProfileInfo2();
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("firmType")) {
              obj["firmType"] = _ApiClient["default"].convertToType(data["firmType"], "String");
            }
            if (data.hasOwnProperty("manager")) {
              obj["manager"] = _ApiClient["default"].convertToType(data["manager"], "String");
            }
            if (data.hasOwnProperty("philosophy")) {
              obj["philosophy"] = _ApiClient["default"].convertToType(data["philosophy"], "String");
            }
            if (data.hasOwnProperty("profile")) {
              obj["profile"] = _ApiClient["default"].convertToType(data["profile"], "String");
            }
            if (data.hasOwnProperty("profileImg")) {
              obj["profileImg"] = _ApiClient["default"].convertToType(data["profileImg"], "String");
            }
          }
          return obj;
        }
      }]);
      return InstitutionalProfileInfo2;
    }();
    InstitutionalProfileInfo.prototype["cik"] = void 0;
    InstitutionalProfileInfo.prototype["firmType"] = void 0;
    InstitutionalProfileInfo.prototype["manager"] = void 0;
    InstitutionalProfileInfo.prototype["philosophy"] = void 0;
    InstitutionalProfileInfo.prototype["profile"] = void 0;
    InstitutionalProfileInfo.prototype["profileImg"] = void 0;
    var _default = InstitutionalProfileInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InstitutionalProfile.js
var require_InstitutionalProfile = __commonJS({
  "../node_modules/finnhub/dist/model/InstitutionalProfile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _InstitutionalProfileInfo = _interopRequireDefault(require_InstitutionalProfileInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InstitutionalProfile = function() {
      function InstitutionalProfile2() {
        _classCallCheck(this, InstitutionalProfile2);
        InstitutionalProfile2.initialize(this);
      }
      _createClass(InstitutionalProfile2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InstitutionalProfile</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InstitutionalProfile} obj Optional instance to populate.
         * @return {module:model/InstitutionalProfile} The populated <code>InstitutionalProfile</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InstitutionalProfile2();
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_InstitutionalProfileInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InstitutionalProfile2;
    }();
    InstitutionalProfile.prototype["cik"] = void 0;
    InstitutionalProfile.prototype["data"] = void 0;
    var _default = InstitutionalProfile;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InternationalFiling.js
var require_InternationalFiling = __commonJS({
  "../node_modules/finnhub/dist/model/InternationalFiling.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InternationalFiling = function() {
      function InternationalFiling2() {
        _classCallCheck(this, InternationalFiling2);
        InternationalFiling2.initialize(this);
      }
      _createClass(InternationalFiling2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InternationalFiling</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InternationalFiling} obj Optional instance to populate.
         * @return {module:model/InternationalFiling} The populated <code>InternationalFiling</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InternationalFiling2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("companyName")) {
              obj["companyName"] = _ApiClient["default"].convertToType(data["companyName"], "String");
            }
            if (data.hasOwnProperty("filedDate")) {
              obj["filedDate"] = _ApiClient["default"].convertToType(data["filedDate"], "String");
            }
            if (data.hasOwnProperty("category")) {
              obj["category"] = _ApiClient["default"].convertToType(data["category"], "String");
            }
            if (data.hasOwnProperty("title")) {
              obj["title"] = _ApiClient["default"].convertToType(data["title"], "String");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("url")) {
              obj["url"] = _ApiClient["default"].convertToType(data["url"], "String");
            }
            if (data.hasOwnProperty("language")) {
              obj["language"] = _ApiClient["default"].convertToType(data["language"], "String");
            }
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
          }
          return obj;
        }
      }]);
      return InternationalFiling2;
    }();
    InternationalFiling.prototype["symbol"] = void 0;
    InternationalFiling.prototype["companyName"] = void 0;
    InternationalFiling.prototype["filedDate"] = void 0;
    InternationalFiling.prototype["category"] = void 0;
    InternationalFiling.prototype["title"] = void 0;
    InternationalFiling.prototype["description"] = void 0;
    InternationalFiling.prototype["url"] = void 0;
    InternationalFiling.prototype["language"] = void 0;
    InternationalFiling.prototype["country"] = void 0;
    var _default = InternationalFiling;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InvestmentThemePortfolio.js
var require_InvestmentThemePortfolio = __commonJS({
  "../node_modules/finnhub/dist/model/InvestmentThemePortfolio.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InvestmentThemePortfolio = function() {
      function InvestmentThemePortfolio2() {
        _classCallCheck(this, InvestmentThemePortfolio2);
        InvestmentThemePortfolio2.initialize(this);
      }
      _createClass(InvestmentThemePortfolio2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InvestmentThemePortfolio</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InvestmentThemePortfolio} obj Optional instance to populate.
         * @return {module:model/InvestmentThemePortfolio} The populated <code>InvestmentThemePortfolio</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InvestmentThemePortfolio2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return InvestmentThemePortfolio2;
    }();
    InvestmentThemePortfolio.prototype["symbol"] = void 0;
    var _default = InvestmentThemePortfolio;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/InvestmentThemes.js
var require_InvestmentThemes = __commonJS({
  "../node_modules/finnhub/dist/model/InvestmentThemes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _InvestmentThemePortfolio = _interopRequireDefault(require_InvestmentThemePortfolio());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var InvestmentThemes = function() {
      function InvestmentThemes2() {
        _classCallCheck(this, InvestmentThemes2);
        InvestmentThemes2.initialize(this);
      }
      _createClass(InvestmentThemes2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>InvestmentThemes</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/InvestmentThemes} obj Optional instance to populate.
         * @return {module:model/InvestmentThemes} The populated <code>InvestmentThemes</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new InvestmentThemes2();
            if (data.hasOwnProperty("theme")) {
              obj["theme"] = _ApiClient["default"].convertToType(data["theme"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_InvestmentThemePortfolio["default"]]);
            }
          }
          return obj;
        }
      }]);
      return InvestmentThemes2;
    }();
    InvestmentThemes.prototype["theme"] = void 0;
    InvestmentThemes.prototype["data"] = void 0;
    var _default = InvestmentThemes;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IsinChangeInfo.js
var require_IsinChangeInfo = __commonJS({
  "../node_modules/finnhub/dist/model/IsinChangeInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IsinChangeInfo = function() {
      function IsinChangeInfo2() {
        _classCallCheck(this, IsinChangeInfo2);
        IsinChangeInfo2.initialize(this);
      }
      _createClass(IsinChangeInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IsinChangeInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IsinChangeInfo} obj Optional instance to populate.
         * @return {module:model/IsinChangeInfo} The populated <code>IsinChangeInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IsinChangeInfo2();
            if (data.hasOwnProperty("atDate")) {
              obj["atDate"] = _ApiClient["default"].convertToType(data["atDate"], "String");
            }
            if (data.hasOwnProperty("oldIsin")) {
              obj["oldIsin"] = _ApiClient["default"].convertToType(data["oldIsin"], "String");
            }
            if (data.hasOwnProperty("newIsin")) {
              obj["newIsin"] = _ApiClient["default"].convertToType(data["newIsin"], "String");
            }
          }
          return obj;
        }
      }]);
      return IsinChangeInfo2;
    }();
    IsinChangeInfo.prototype["atDate"] = void 0;
    IsinChangeInfo.prototype["oldIsin"] = void 0;
    IsinChangeInfo.prototype["newIsin"] = void 0;
    var _default = IsinChangeInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/IsinChange.js
var require_IsinChange = __commonJS({
  "../node_modules/finnhub/dist/model/IsinChange.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _IsinChangeInfo = _interopRequireDefault(require_IsinChangeInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var IsinChange = function() {
      function IsinChange2() {
        _classCallCheck(this, IsinChange2);
        IsinChange2.initialize(this);
      }
      _createClass(IsinChange2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>IsinChange</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/IsinChange} obj Optional instance to populate.
         * @return {module:model/IsinChange} The populated <code>IsinChange</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new IsinChange2();
            if (data.hasOwnProperty("fromDate")) {
              obj["fromDate"] = _ApiClient["default"].convertToType(data["fromDate"], "String");
            }
            if (data.hasOwnProperty("toDate")) {
              obj["toDate"] = _ApiClient["default"].convertToType(data["toDate"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_IsinChangeInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return IsinChange2;
    }();
    IsinChange.prototype["fromDate"] = void 0;
    IsinChange.prototype["toDate"] = void 0;
    IsinChange.prototype["data"] = void 0;
    var _default = IsinChange;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/KeyCustomersSuppliers.js
var require_KeyCustomersSuppliers = __commonJS({
  "../node_modules/finnhub/dist/model/KeyCustomersSuppliers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var KeyCustomersSuppliers = function() {
      function KeyCustomersSuppliers2() {
        _classCallCheck(this, KeyCustomersSuppliers2);
        KeyCustomersSuppliers2.initialize(this);
      }
      _createClass(KeyCustomersSuppliers2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>KeyCustomersSuppliers</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/KeyCustomersSuppliers} obj Optional instance to populate.
         * @return {module:model/KeyCustomersSuppliers} The populated <code>KeyCustomersSuppliers</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new KeyCustomersSuppliers2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("industry")) {
              obj["industry"] = _ApiClient["default"].convertToType(data["industry"], "String");
            }
            if (data.hasOwnProperty("customer")) {
              obj["customer"] = _ApiClient["default"].convertToType(data["customer"], "Boolean");
            }
            if (data.hasOwnProperty("supplier")) {
              obj["supplier"] = _ApiClient["default"].convertToType(data["supplier"], "Boolean");
            }
            if (data.hasOwnProperty("oneMonthCorrelation")) {
              obj["oneMonthCorrelation"] = _ApiClient["default"].convertToType(data["oneMonthCorrelation"], "Number");
            }
            if (data.hasOwnProperty("oneYearCorrelation")) {
              obj["oneYearCorrelation"] = _ApiClient["default"].convertToType(data["oneYearCorrelation"], "Number");
            }
            if (data.hasOwnProperty("sixMonthCorrelation")) {
              obj["sixMonthCorrelation"] = _ApiClient["default"].convertToType(data["sixMonthCorrelation"], "Number");
            }
            if (data.hasOwnProperty("threeMonthCorrelation")) {
              obj["threeMonthCorrelation"] = _ApiClient["default"].convertToType(data["threeMonthCorrelation"], "Number");
            }
            if (data.hasOwnProperty("twoWeekCorrelation")) {
              obj["twoWeekCorrelation"] = _ApiClient["default"].convertToType(data["twoWeekCorrelation"], "Number");
            }
            if (data.hasOwnProperty("twoYearCorrelation")) {
              obj["twoYearCorrelation"] = _ApiClient["default"].convertToType(data["twoYearCorrelation"], "Number");
            }
          }
          return obj;
        }
      }]);
      return KeyCustomersSuppliers2;
    }();
    KeyCustomersSuppliers.prototype["symbol"] = void 0;
    KeyCustomersSuppliers.prototype["name"] = void 0;
    KeyCustomersSuppliers.prototype["country"] = void 0;
    KeyCustomersSuppliers.prototype["industry"] = void 0;
    KeyCustomersSuppliers.prototype["customer"] = void 0;
    KeyCustomersSuppliers.prototype["supplier"] = void 0;
    KeyCustomersSuppliers.prototype["oneMonthCorrelation"] = void 0;
    KeyCustomersSuppliers.prototype["oneYearCorrelation"] = void 0;
    KeyCustomersSuppliers.prototype["sixMonthCorrelation"] = void 0;
    KeyCustomersSuppliers.prototype["threeMonthCorrelation"] = void 0;
    KeyCustomersSuppliers.prototype["twoWeekCorrelation"] = void 0;
    KeyCustomersSuppliers.prototype["twoYearCorrelation"] = void 0;
    var _default = KeyCustomersSuppliers;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/LastBidAsk.js
var require_LastBidAsk = __commonJS({
  "../node_modules/finnhub/dist/model/LastBidAsk.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var LastBidAsk = function() {
      function LastBidAsk2() {
        _classCallCheck(this, LastBidAsk2);
        LastBidAsk2.initialize(this);
      }
      _createClass(LastBidAsk2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>LastBidAsk</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/LastBidAsk} obj Optional instance to populate.
         * @return {module:model/LastBidAsk} The populated <code>LastBidAsk</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new LastBidAsk2();
            if (data.hasOwnProperty("b")) {
              obj["b"] = _ApiClient["default"].convertToType(data["b"], "Number");
            }
            if (data.hasOwnProperty("a")) {
              obj["a"] = _ApiClient["default"].convertToType(data["a"], "Number");
            }
            if (data.hasOwnProperty("bv")) {
              obj["bv"] = _ApiClient["default"].convertToType(data["bv"], "Number");
            }
            if (data.hasOwnProperty("av")) {
              obj["av"] = _ApiClient["default"].convertToType(data["av"], "Number");
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], "Number");
            }
          }
          return obj;
        }
      }]);
      return LastBidAsk2;
    }();
    LastBidAsk.prototype["b"] = void 0;
    LastBidAsk.prototype["a"] = void 0;
    LastBidAsk.prototype["bv"] = void 0;
    LastBidAsk.prototype["av"] = void 0;
    LastBidAsk.prototype["t"] = void 0;
    var _default = LastBidAsk;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/LobbyingData.js
var require_LobbyingData = __commonJS({
  "../node_modules/finnhub/dist/model/LobbyingData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var LobbyingData = function() {
      function LobbyingData2() {
        _classCallCheck(this, LobbyingData2);
        LobbyingData2.initialize(this);
      }
      _createClass(LobbyingData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>LobbyingData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/LobbyingData} obj Optional instance to populate.
         * @return {module:model/LobbyingData} The populated <code>LobbyingData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new LobbyingData2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "String");
            }
            if (data.hasOwnProperty("income")) {
              obj["income"] = _ApiClient["default"].convertToType(data["income"], "Number");
            }
            if (data.hasOwnProperty("expenses")) {
              obj["expenses"] = _ApiClient["default"].convertToType(data["expenses"], "Number");
            }
            if (data.hasOwnProperty("documentUrl")) {
              obj["documentUrl"] = _ApiClient["default"].convertToType(data["documentUrl"], "String");
            }
            if (data.hasOwnProperty("postedName")) {
              obj["postedName"] = _ApiClient["default"].convertToType(data["postedName"], "String");
            }
            if (data.hasOwnProperty("date")) {
              obj["date"] = _ApiClient["default"].convertToType(data["date"], "String");
            }
            if (data.hasOwnProperty("clientId")) {
              obj["clientId"] = _ApiClient["default"].convertToType(data["clientId"], "String");
            }
            if (data.hasOwnProperty("registrantId")) {
              obj["registrantId"] = _ApiClient["default"].convertToType(data["registrantId"], "String");
            }
            if (data.hasOwnProperty("senateId")) {
              obj["senateId"] = _ApiClient["default"].convertToType(data["senateId"], "String");
            }
            if (data.hasOwnProperty("houseregistrantId")) {
              obj["houseregistrantId"] = _ApiClient["default"].convertToType(data["houseregistrantId"], "String");
            }
          }
          return obj;
        }
      }]);
      return LobbyingData2;
    }();
    LobbyingData.prototype["symbol"] = void 0;
    LobbyingData.prototype["name"] = void 0;
    LobbyingData.prototype["description"] = void 0;
    LobbyingData.prototype["country"] = void 0;
    LobbyingData.prototype["year"] = void 0;
    LobbyingData.prototype["period"] = void 0;
    LobbyingData.prototype["income"] = void 0;
    LobbyingData.prototype["expenses"] = void 0;
    LobbyingData.prototype["documentUrl"] = void 0;
    LobbyingData.prototype["postedName"] = void 0;
    LobbyingData.prototype["date"] = void 0;
    LobbyingData.prototype["clientId"] = void 0;
    LobbyingData.prototype["registrantId"] = void 0;
    LobbyingData.prototype["senateId"] = void 0;
    LobbyingData.prototype["houseregistrantId"] = void 0;
    var _default = LobbyingData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/LobbyingResult.js
var require_LobbyingResult = __commonJS({
  "../node_modules/finnhub/dist/model/LobbyingResult.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _LobbyingData = _interopRequireDefault(require_LobbyingData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var LobbyingResult = function() {
      function LobbyingResult2() {
        _classCallCheck(this, LobbyingResult2);
        LobbyingResult2.initialize(this);
      }
      _createClass(LobbyingResult2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>LobbyingResult</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/LobbyingResult} obj Optional instance to populate.
         * @return {module:model/LobbyingResult} The populated <code>LobbyingResult</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new LobbyingResult2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_LobbyingData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return LobbyingResult2;
    }();
    LobbyingResult.prototype["symbol"] = void 0;
    LobbyingResult.prototype["data"] = void 0;
    var _default = LobbyingResult;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MarketHolidayData.js
var require_MarketHolidayData = __commonJS({
  "../node_modules/finnhub/dist/model/MarketHolidayData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MarketHolidayData = function() {
      function MarketHolidayData2() {
        _classCallCheck(this, MarketHolidayData2);
        MarketHolidayData2.initialize(this);
      }
      _createClass(MarketHolidayData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MarketHolidayData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MarketHolidayData} obj Optional instance to populate.
         * @return {module:model/MarketHolidayData} The populated <code>MarketHolidayData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MarketHolidayData2();
            if (data.hasOwnProperty("eventName")) {
              obj["eventName"] = _ApiClient["default"].convertToType(data["eventName"], "String");
            }
            if (data.hasOwnProperty("atDate")) {
              obj["atDate"] = _ApiClient["default"].convertToType(data["atDate"], "String");
            }
            if (data.hasOwnProperty("tradingHour")) {
              obj["tradingHour"] = _ApiClient["default"].convertToType(data["tradingHour"], "String");
            }
          }
          return obj;
        }
      }]);
      return MarketHolidayData2;
    }();
    MarketHolidayData.prototype["eventName"] = void 0;
    MarketHolidayData.prototype["atDate"] = void 0;
    MarketHolidayData.prototype["tradingHour"] = void 0;
    var _default = MarketHolidayData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MarketHoliday.js
var require_MarketHoliday = __commonJS({
  "../node_modules/finnhub/dist/model/MarketHoliday.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _MarketHolidayData = _interopRequireDefault(require_MarketHolidayData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MarketHoliday = function() {
      function MarketHoliday2() {
        _classCallCheck(this, MarketHoliday2);
        MarketHoliday2.initialize(this);
      }
      _createClass(MarketHoliday2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MarketHoliday</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MarketHoliday} obj Optional instance to populate.
         * @return {module:model/MarketHoliday} The populated <code>MarketHoliday</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MarketHoliday2();
            if (data.hasOwnProperty("timezone")) {
              obj["timezone"] = _ApiClient["default"].convertToType(data["timezone"], "String");
            }
            if (data.hasOwnProperty("exchange")) {
              obj["exchange"] = _ApiClient["default"].convertToType(data["exchange"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_MarketHolidayData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return MarketHoliday2;
    }();
    MarketHoliday.prototype["timezone"] = void 0;
    MarketHoliday.prototype["exchange"] = void 0;
    MarketHoliday.prototype["data"] = void 0;
    var _default = MarketHoliday;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MarketNews.js
var require_MarketNews = __commonJS({
  "../node_modules/finnhub/dist/model/MarketNews.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MarketNews = function() {
      function MarketNews2() {
        _classCallCheck(this, MarketNews2);
        MarketNews2.initialize(this);
      }
      _createClass(MarketNews2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MarketNews</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MarketNews} obj Optional instance to populate.
         * @return {module:model/MarketNews} The populated <code>MarketNews</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MarketNews2();
            if (data.hasOwnProperty("category")) {
              obj["category"] = _ApiClient["default"].convertToType(data["category"], "String");
            }
            if (data.hasOwnProperty("datetime")) {
              obj["datetime"] = _ApiClient["default"].convertToType(data["datetime"], "Number");
            }
            if (data.hasOwnProperty("headline")) {
              obj["headline"] = _ApiClient["default"].convertToType(data["headline"], "String");
            }
            if (data.hasOwnProperty("id")) {
              obj["id"] = _ApiClient["default"].convertToType(data["id"], "Number");
            }
            if (data.hasOwnProperty("image")) {
              obj["image"] = _ApiClient["default"].convertToType(data["image"], "String");
            }
            if (data.hasOwnProperty("related")) {
              obj["related"] = _ApiClient["default"].convertToType(data["related"], "String");
            }
            if (data.hasOwnProperty("source")) {
              obj["source"] = _ApiClient["default"].convertToType(data["source"], "String");
            }
            if (data.hasOwnProperty("summary")) {
              obj["summary"] = _ApiClient["default"].convertToType(data["summary"], "String");
            }
            if (data.hasOwnProperty("url")) {
              obj["url"] = _ApiClient["default"].convertToType(data["url"], "String");
            }
          }
          return obj;
        }
      }]);
      return MarketNews2;
    }();
    MarketNews.prototype["category"] = void 0;
    MarketNews.prototype["datetime"] = void 0;
    MarketNews.prototype["headline"] = void 0;
    MarketNews.prototype["id"] = void 0;
    MarketNews.prototype["image"] = void 0;
    MarketNews.prototype["related"] = void 0;
    MarketNews.prototype["source"] = void 0;
    MarketNews.prototype["summary"] = void 0;
    MarketNews.prototype["url"] = void 0;
    var _default = MarketNews;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MarketStatus.js
var require_MarketStatus = __commonJS({
  "../node_modules/finnhub/dist/model/MarketStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MarketStatus = function() {
      function MarketStatus2() {
        _classCallCheck(this, MarketStatus2);
        MarketStatus2.initialize(this);
      }
      _createClass(MarketStatus2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MarketStatus</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MarketStatus} obj Optional instance to populate.
         * @return {module:model/MarketStatus} The populated <code>MarketStatus</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MarketStatus2();
            if (data.hasOwnProperty("exchange")) {
              obj["exchange"] = _ApiClient["default"].convertToType(data["exchange"], "String");
            }
            if (data.hasOwnProperty("timezone")) {
              obj["timezone"] = _ApiClient["default"].convertToType(data["timezone"], "String");
            }
            if (data.hasOwnProperty("session")) {
              obj["session"] = _ApiClient["default"].convertToType(data["session"], "String");
            }
            if (data.hasOwnProperty("holiday")) {
              obj["holiday"] = _ApiClient["default"].convertToType(data["holiday"], "String");
            }
            if (data.hasOwnProperty("isOpen")) {
              obj["isOpen"] = _ApiClient["default"].convertToType(data["isOpen"], "Boolean");
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], "Number");
            }
          }
          return obj;
        }
      }]);
      return MarketStatus2;
    }();
    MarketStatus.prototype["exchange"] = void 0;
    MarketStatus.prototype["timezone"] = void 0;
    MarketStatus.prototype["session"] = void 0;
    MarketStatus.prototype["holiday"] = void 0;
    MarketStatus.prototype["isOpen"] = void 0;
    MarketStatus.prototype["t"] = void 0;
    var _default = MarketStatus;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundCountryExposureData.js
var require_MutualFundCountryExposureData = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundCountryExposureData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundCountryExposureData = function() {
      function MutualFundCountryExposureData2() {
        _classCallCheck(this, MutualFundCountryExposureData2);
        MutualFundCountryExposureData2.initialize(this);
      }
      _createClass(MutualFundCountryExposureData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundCountryExposureData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundCountryExposureData} obj Optional instance to populate.
         * @return {module:model/MutualFundCountryExposureData} The populated <code>MutualFundCountryExposureData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundCountryExposureData2();
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("exposure")) {
              obj["exposure"] = _ApiClient["default"].convertToType(data["exposure"], "Number");
            }
          }
          return obj;
        }
      }]);
      return MutualFundCountryExposureData2;
    }();
    MutualFundCountryExposureData.prototype["country"] = void 0;
    MutualFundCountryExposureData.prototype["exposure"] = void 0;
    var _default = MutualFundCountryExposureData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundCountryExposure.js
var require_MutualFundCountryExposure = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundCountryExposure.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _MutualFundCountryExposureData = _interopRequireDefault(require_MutualFundCountryExposureData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundCountryExposure = function() {
      function MutualFundCountryExposure2() {
        _classCallCheck(this, MutualFundCountryExposure2);
        MutualFundCountryExposure2.initialize(this);
      }
      _createClass(MutualFundCountryExposure2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundCountryExposure</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundCountryExposure} obj Optional instance to populate.
         * @return {module:model/MutualFundCountryExposure} The populated <code>MutualFundCountryExposure</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundCountryExposure2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("countryExposure")) {
              obj["countryExposure"] = _ApiClient["default"].convertToType(data["countryExposure"], [_MutualFundCountryExposureData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return MutualFundCountryExposure2;
    }();
    MutualFundCountryExposure.prototype["symbol"] = void 0;
    MutualFundCountryExposure.prototype["countryExposure"] = void 0;
    var _default = MutualFundCountryExposure;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundEet.js
var require_MutualFundEet = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundEet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundEet = function() {
      function MutualFundEet2() {
        _classCallCheck(this, MutualFundEet2);
        MutualFundEet2.initialize(this);
      }
      _createClass(MutualFundEet2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundEet</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundEet} obj Optional instance to populate.
         * @return {module:model/MutualFundEet} The populated <code>MutualFundEet</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundEet2();
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], Object);
            }
          }
          return obj;
        }
      }]);
      return MutualFundEet2;
    }();
    MutualFundEet.prototype["isin"] = void 0;
    MutualFundEet.prototype["data"] = void 0;
    var _default = MutualFundEet;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundEetPai.js
var require_MutualFundEetPai = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundEetPai.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundEetPai = function() {
      function MutualFundEetPai2() {
        _classCallCheck(this, MutualFundEetPai2);
        MutualFundEetPai2.initialize(this);
      }
      _createClass(MutualFundEetPai2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundEetPai</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundEetPai} obj Optional instance to populate.
         * @return {module:model/MutualFundEetPai} The populated <code>MutualFundEetPai</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundEetPai2();
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], Object);
            }
          }
          return obj;
        }
      }]);
      return MutualFundEetPai2;
    }();
    MutualFundEetPai.prototype["isin"] = void 0;
    MutualFundEetPai.prototype["data"] = void 0;
    var _default = MutualFundEetPai;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundHoldingsData.js
var require_MutualFundHoldingsData = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundHoldingsData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundHoldingsData = function() {
      function MutualFundHoldingsData2() {
        _classCallCheck(this, MutualFundHoldingsData2);
        MutualFundHoldingsData2.initialize(this);
      }
      _createClass(MutualFundHoldingsData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundHoldingsData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundHoldingsData} obj Optional instance to populate.
         * @return {module:model/MutualFundHoldingsData} The populated <code>MutualFundHoldingsData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundHoldingsData2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("share")) {
              obj["share"] = _ApiClient["default"].convertToType(data["share"], "Number");
            }
            if (data.hasOwnProperty("percent")) {
              obj["percent"] = _ApiClient["default"].convertToType(data["percent"], "Number");
            }
            if (data.hasOwnProperty("value")) {
              obj["value"] = _ApiClient["default"].convertToType(data["value"], "Number");
            }
            if (data.hasOwnProperty("assetType")) {
              obj["assetType"] = _ApiClient["default"].convertToType(data["assetType"], "String");
            }
          }
          return obj;
        }
      }]);
      return MutualFundHoldingsData2;
    }();
    MutualFundHoldingsData.prototype["symbol"] = void 0;
    MutualFundHoldingsData.prototype["name"] = void 0;
    MutualFundHoldingsData.prototype["isin"] = void 0;
    MutualFundHoldingsData.prototype["cusip"] = void 0;
    MutualFundHoldingsData.prototype["share"] = void 0;
    MutualFundHoldingsData.prototype["percent"] = void 0;
    MutualFundHoldingsData.prototype["value"] = void 0;
    MutualFundHoldingsData.prototype["assetType"] = void 0;
    var _default = MutualFundHoldingsData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundHoldings.js
var require_MutualFundHoldings = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundHoldings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _MutualFundHoldingsData = _interopRequireDefault(require_MutualFundHoldingsData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundHoldings = function() {
      function MutualFundHoldings2() {
        _classCallCheck(this, MutualFundHoldings2);
        MutualFundHoldings2.initialize(this);
      }
      _createClass(MutualFundHoldings2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundHoldings</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundHoldings} obj Optional instance to populate.
         * @return {module:model/MutualFundHoldings} The populated <code>MutualFundHoldings</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundHoldings2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("atDate")) {
              obj["atDate"] = _ApiClient["default"].convertToType(data["atDate"], "Date");
            }
            if (data.hasOwnProperty("numberOfHoldings")) {
              obj["numberOfHoldings"] = _ApiClient["default"].convertToType(data["numberOfHoldings"], "Number");
            }
            if (data.hasOwnProperty("holdings")) {
              obj["holdings"] = _ApiClient["default"].convertToType(data["holdings"], [_MutualFundHoldingsData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return MutualFundHoldings2;
    }();
    MutualFundHoldings.prototype["symbol"] = void 0;
    MutualFundHoldings.prototype["atDate"] = void 0;
    MutualFundHoldings.prototype["numberOfHoldings"] = void 0;
    MutualFundHoldings.prototype["holdings"] = void 0;
    var _default = MutualFundHoldings;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundProfileData.js
var require_MutualFundProfileData = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundProfileData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundProfileData = function() {
      function MutualFundProfileData2() {
        _classCallCheck(this, MutualFundProfileData2);
        MutualFundProfileData2.initialize(this);
      }
      _createClass(MutualFundProfileData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundProfileData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundProfileData} obj Optional instance to populate.
         * @return {module:model/MutualFundProfileData} The populated <code>MutualFundProfileData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundProfileData2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("category")) {
              obj["category"] = _ApiClient["default"].convertToType(data["category"], "String");
            }
            if (data.hasOwnProperty("investmentSegment")) {
              obj["investmentSegment"] = _ApiClient["default"].convertToType(data["investmentSegment"], "String");
            }
            if (data.hasOwnProperty("totalNav")) {
              obj["totalNav"] = _ApiClient["default"].convertToType(data["totalNav"], "Number");
            }
            if (data.hasOwnProperty("expenseRatio")) {
              obj["expenseRatio"] = _ApiClient["default"].convertToType(data["expenseRatio"], "Number");
            }
            if (data.hasOwnProperty("benchmark")) {
              obj["benchmark"] = _ApiClient["default"].convertToType(data["benchmark"], "String");
            }
            if (data.hasOwnProperty("inceptionDate")) {
              obj["inceptionDate"] = _ApiClient["default"].convertToType(data["inceptionDate"], "Date");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("fundFamily")) {
              obj["fundFamily"] = _ApiClient["default"].convertToType(data["fundFamily"], "String");
            }
            if (data.hasOwnProperty("fundCompany")) {
              obj["fundCompany"] = _ApiClient["default"].convertToType(data["fundCompany"], "String");
            }
            if (data.hasOwnProperty("manager")) {
              obj["manager"] = _ApiClient["default"].convertToType(data["manager"], "String");
            }
            if (data.hasOwnProperty("status")) {
              obj["status"] = _ApiClient["default"].convertToType(data["status"], "String");
            }
            if (data.hasOwnProperty("beta")) {
              obj["beta"] = _ApiClient["default"].convertToType(data["beta"], "Number");
            }
            if (data.hasOwnProperty("deferredLoad")) {
              obj["deferredLoad"] = _ApiClient["default"].convertToType(data["deferredLoad"], "Number");
            }
            if (data.hasOwnProperty("fee12b1")) {
              obj["fee12b1"] = _ApiClient["default"].convertToType(data["fee12b1"], "Number");
            }
            if (data.hasOwnProperty("frontLoad")) {
              obj["frontLoad"] = _ApiClient["default"].convertToType(data["frontLoad"], "Number");
            }
            if (data.hasOwnProperty("iraMinInvestment")) {
              obj["iraMinInvestment"] = _ApiClient["default"].convertToType(data["iraMinInvestment"], "Number");
            }
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
            if (data.hasOwnProperty("cusip")) {
              obj["cusip"] = _ApiClient["default"].convertToType(data["cusip"], "String");
            }
            if (data.hasOwnProperty("maxRedemptionFee")) {
              obj["maxRedemptionFee"] = _ApiClient["default"].convertToType(data["maxRedemptionFee"], "Number");
            }
            if (data.hasOwnProperty("standardMinInvestment")) {
              obj["standardMinInvestment"] = _ApiClient["default"].convertToType(data["standardMinInvestment"], "Number");
            }
            if (data.hasOwnProperty("turnover")) {
              obj["turnover"] = _ApiClient["default"].convertToType(data["turnover"], "Number");
            }
            if (data.hasOwnProperty("seriesId")) {
              obj["seriesId"] = _ApiClient["default"].convertToType(data["seriesId"], "String");
            }
            if (data.hasOwnProperty("seriesName")) {
              obj["seriesName"] = _ApiClient["default"].convertToType(data["seriesName"], "String");
            }
            if (data.hasOwnProperty("classId")) {
              obj["classId"] = _ApiClient["default"].convertToType(data["classId"], "String");
            }
            if (data.hasOwnProperty("className")) {
              obj["className"] = _ApiClient["default"].convertToType(data["className"], "String");
            }
            if (data.hasOwnProperty("sfdrClassification")) {
              obj["sfdrClassification"] = _ApiClient["default"].convertToType(data["sfdrClassification"], "String");
            }
            if (data.hasOwnProperty("currency")) {
              obj["currency"] = _ApiClient["default"].convertToType(data["currency"], "String");
            }
          }
          return obj;
        }
      }]);
      return MutualFundProfileData2;
    }();
    MutualFundProfileData.prototype["name"] = void 0;
    MutualFundProfileData.prototype["category"] = void 0;
    MutualFundProfileData.prototype["investmentSegment"] = void 0;
    MutualFundProfileData.prototype["totalNav"] = void 0;
    MutualFundProfileData.prototype["expenseRatio"] = void 0;
    MutualFundProfileData.prototype["benchmark"] = void 0;
    MutualFundProfileData.prototype["inceptionDate"] = void 0;
    MutualFundProfileData.prototype["description"] = void 0;
    MutualFundProfileData.prototype["fundFamily"] = void 0;
    MutualFundProfileData.prototype["fundCompany"] = void 0;
    MutualFundProfileData.prototype["manager"] = void 0;
    MutualFundProfileData.prototype["status"] = void 0;
    MutualFundProfileData.prototype["beta"] = void 0;
    MutualFundProfileData.prototype["deferredLoad"] = void 0;
    MutualFundProfileData.prototype["fee12b1"] = void 0;
    MutualFundProfileData.prototype["frontLoad"] = void 0;
    MutualFundProfileData.prototype["iraMinInvestment"] = void 0;
    MutualFundProfileData.prototype["isin"] = void 0;
    MutualFundProfileData.prototype["cusip"] = void 0;
    MutualFundProfileData.prototype["maxRedemptionFee"] = void 0;
    MutualFundProfileData.prototype["standardMinInvestment"] = void 0;
    MutualFundProfileData.prototype["turnover"] = void 0;
    MutualFundProfileData.prototype["seriesId"] = void 0;
    MutualFundProfileData.prototype["seriesName"] = void 0;
    MutualFundProfileData.prototype["classId"] = void 0;
    MutualFundProfileData.prototype["className"] = void 0;
    MutualFundProfileData.prototype["sfdrClassification"] = void 0;
    MutualFundProfileData.prototype["currency"] = void 0;
    var _default = MutualFundProfileData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundProfile.js
var require_MutualFundProfile = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundProfile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _MutualFundProfileData = _interopRequireDefault(require_MutualFundProfileData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundProfile = function() {
      function MutualFundProfile2() {
        _classCallCheck(this, MutualFundProfile2);
        MutualFundProfile2.initialize(this);
      }
      _createClass(MutualFundProfile2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundProfile</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundProfile} obj Optional instance to populate.
         * @return {module:model/MutualFundProfile} The populated <code>MutualFundProfile</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundProfile2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("profile")) {
              obj["profile"] = _MutualFundProfileData["default"].constructFromObject(data["profile"]);
            }
          }
          return obj;
        }
      }]);
      return MutualFundProfile2;
    }();
    MutualFundProfile.prototype["symbol"] = void 0;
    MutualFundProfile.prototype["profile"] = void 0;
    var _default = MutualFundProfile;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundSectorExposureData.js
var require_MutualFundSectorExposureData = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundSectorExposureData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundSectorExposureData = function() {
      function MutualFundSectorExposureData2() {
        _classCallCheck(this, MutualFundSectorExposureData2);
        MutualFundSectorExposureData2.initialize(this);
      }
      _createClass(MutualFundSectorExposureData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundSectorExposureData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundSectorExposureData} obj Optional instance to populate.
         * @return {module:model/MutualFundSectorExposureData} The populated <code>MutualFundSectorExposureData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundSectorExposureData2();
            if (data.hasOwnProperty("sector")) {
              obj["sector"] = _ApiClient["default"].convertToType(data["sector"], "String");
            }
            if (data.hasOwnProperty("exposure")) {
              obj["exposure"] = _ApiClient["default"].convertToType(data["exposure"], "Number");
            }
          }
          return obj;
        }
      }]);
      return MutualFundSectorExposureData2;
    }();
    MutualFundSectorExposureData.prototype["sector"] = void 0;
    MutualFundSectorExposureData.prototype["exposure"] = void 0;
    var _default = MutualFundSectorExposureData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/MutualFundSectorExposure.js
var require_MutualFundSectorExposure = __commonJS({
  "../node_modules/finnhub/dist/model/MutualFundSectorExposure.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _MutualFundSectorExposureData = _interopRequireDefault(require_MutualFundSectorExposureData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var MutualFundSectorExposure = function() {
      function MutualFundSectorExposure2() {
        _classCallCheck(this, MutualFundSectorExposure2);
        MutualFundSectorExposure2.initialize(this);
      }
      _createClass(MutualFundSectorExposure2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>MutualFundSectorExposure</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/MutualFundSectorExposure} obj Optional instance to populate.
         * @return {module:model/MutualFundSectorExposure} The populated <code>MutualFundSectorExposure</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new MutualFundSectorExposure2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("sectorExposure")) {
              obj["sectorExposure"] = _ApiClient["default"].convertToType(data["sectorExposure"], [_MutualFundSectorExposureData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return MutualFundSectorExposure2;
    }();
    MutualFundSectorExposure.prototype["symbol"] = void 0;
    MutualFundSectorExposure.prototype["sectorExposure"] = void 0;
    var _default = MutualFundSectorExposure;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Sentiment.js
var require_Sentiment = __commonJS({
  "../node_modules/finnhub/dist/model/Sentiment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Sentiment = function() {
      function Sentiment2() {
        _classCallCheck(this, Sentiment2);
        Sentiment2.initialize(this);
      }
      _createClass(Sentiment2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Sentiment</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Sentiment} obj Optional instance to populate.
         * @return {module:model/Sentiment} The populated <code>Sentiment</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Sentiment2();
            if (data.hasOwnProperty("bearishPercent")) {
              obj["bearishPercent"] = _ApiClient["default"].convertToType(data["bearishPercent"], "Number");
            }
            if (data.hasOwnProperty("bullishPercent")) {
              obj["bullishPercent"] = _ApiClient["default"].convertToType(data["bullishPercent"], "Number");
            }
          }
          return obj;
        }
      }]);
      return Sentiment2;
    }();
    Sentiment.prototype["bearishPercent"] = void 0;
    Sentiment.prototype["bullishPercent"] = void 0;
    var _default = Sentiment;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/NewsSentiment.js
var require_NewsSentiment = __commonJS({
  "../node_modules/finnhub/dist/model/NewsSentiment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _CompanyNewsStatistics = _interopRequireDefault(require_CompanyNewsStatistics());
    var _Sentiment = _interopRequireDefault(require_Sentiment());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var NewsSentiment = function() {
      function NewsSentiment2() {
        _classCallCheck(this, NewsSentiment2);
        NewsSentiment2.initialize(this);
      }
      _createClass(NewsSentiment2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>NewsSentiment</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/NewsSentiment} obj Optional instance to populate.
         * @return {module:model/NewsSentiment} The populated <code>NewsSentiment</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new NewsSentiment2();
            if (data.hasOwnProperty("buzz")) {
              obj["buzz"] = _CompanyNewsStatistics["default"].constructFromObject(data["buzz"]);
            }
            if (data.hasOwnProperty("companyNewsScore")) {
              obj["companyNewsScore"] = _ApiClient["default"].convertToType(data["companyNewsScore"], "Number");
            }
            if (data.hasOwnProperty("sectorAverageBullishPercent")) {
              obj["sectorAverageBullishPercent"] = _ApiClient["default"].convertToType(data["sectorAverageBullishPercent"], "Number");
            }
            if (data.hasOwnProperty("sectorAverageNewsScore")) {
              obj["sectorAverageNewsScore"] = _ApiClient["default"].convertToType(data["sectorAverageNewsScore"], "Number");
            }
            if (data.hasOwnProperty("sentiment")) {
              obj["sentiment"] = _Sentiment["default"].constructFromObject(data["sentiment"]);
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return NewsSentiment2;
    }();
    NewsSentiment.prototype["buzz"] = void 0;
    NewsSentiment.prototype["companyNewsScore"] = void 0;
    NewsSentiment.prototype["sectorAverageBullishPercent"] = void 0;
    NewsSentiment.prototype["sectorAverageNewsScore"] = void 0;
    NewsSentiment.prototype["sentiment"] = void 0;
    NewsSentiment.prototype["symbol"] = void 0;
    var _default = NewsSentiment;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/OwnershipInfo.js
var require_OwnershipInfo = __commonJS({
  "../node_modules/finnhub/dist/model/OwnershipInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var OwnershipInfo = function() {
      function OwnershipInfo2() {
        _classCallCheck(this, OwnershipInfo2);
        OwnershipInfo2.initialize(this);
      }
      _createClass(OwnershipInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>OwnershipInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/OwnershipInfo} obj Optional instance to populate.
         * @return {module:model/OwnershipInfo} The populated <code>OwnershipInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new OwnershipInfo2();
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
            if (data.hasOwnProperty("share")) {
              obj["share"] = _ApiClient["default"].convertToType(data["share"], "Number");
            }
            if (data.hasOwnProperty("change")) {
              obj["change"] = _ApiClient["default"].convertToType(data["change"], "Number");
            }
            if (data.hasOwnProperty("filingDate")) {
              obj["filingDate"] = _ApiClient["default"].convertToType(data["filingDate"], "Date");
            }
          }
          return obj;
        }
      }]);
      return OwnershipInfo2;
    }();
    OwnershipInfo.prototype["name"] = void 0;
    OwnershipInfo.prototype["share"] = void 0;
    OwnershipInfo.prototype["change"] = void 0;
    OwnershipInfo.prototype["filingDate"] = void 0;
    var _default = OwnershipInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Ownership.js
var require_Ownership = __commonJS({
  "../node_modules/finnhub/dist/model/Ownership.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _OwnershipInfo = _interopRequireDefault(require_OwnershipInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Ownership = function() {
      function Ownership2() {
        _classCallCheck(this, Ownership2);
        Ownership2.initialize(this);
      }
      _createClass(Ownership2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Ownership</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Ownership} obj Optional instance to populate.
         * @return {module:model/Ownership} The populated <code>Ownership</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Ownership2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("ownership")) {
              obj["ownership"] = _ApiClient["default"].convertToType(data["ownership"], [_OwnershipInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return Ownership2;
    }();
    Ownership.prototype["symbol"] = void 0;
    Ownership.prototype["ownership"] = void 0;
    var _default = Ownership;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/PatternRecognition.js
var require_PatternRecognition = __commonJS({
  "../node_modules/finnhub/dist/model/PatternRecognition.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var PatternRecognition = function() {
      function PatternRecognition2() {
        _classCallCheck(this, PatternRecognition2);
        PatternRecognition2.initialize(this);
      }
      _createClass(PatternRecognition2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>PatternRecognition</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/PatternRecognition} obj Optional instance to populate.
         * @return {module:model/PatternRecognition} The populated <code>PatternRecognition</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new PatternRecognition2();
            if (data.hasOwnProperty("points")) {
              obj["points"] = _ApiClient["default"].convertToType(data["points"], [Object]);
            }
          }
          return obj;
        }
      }]);
      return PatternRecognition2;
    }();
    PatternRecognition.prototype["points"] = void 0;
    var _default = PatternRecognition;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/PressRelease.js
var require_PressRelease = __commonJS({
  "../node_modules/finnhub/dist/model/PressRelease.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _Development = _interopRequireDefault(require_Development());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var PressRelease = function() {
      function PressRelease2() {
        _classCallCheck(this, PressRelease2);
        PressRelease2.initialize(this);
      }
      _createClass(PressRelease2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>PressRelease</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/PressRelease} obj Optional instance to populate.
         * @return {module:model/PressRelease} The populated <code>PressRelease</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new PressRelease2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("majorDevelopment")) {
              obj["majorDevelopment"] = _ApiClient["default"].convertToType(data["majorDevelopment"], [_Development["default"]]);
            }
          }
          return obj;
        }
      }]);
      return PressRelease2;
    }();
    PressRelease.prototype["symbol"] = void 0;
    PressRelease.prototype["majorDevelopment"] = void 0;
    var _default = PressRelease;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/PriceMetrics.js
var require_PriceMetrics = __commonJS({
  "../node_modules/finnhub/dist/model/PriceMetrics.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var PriceMetrics = function() {
      function PriceMetrics2() {
        _classCallCheck(this, PriceMetrics2);
        PriceMetrics2.initialize(this);
      }
      _createClass(PriceMetrics2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>PriceMetrics</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/PriceMetrics} obj Optional instance to populate.
         * @return {module:model/PriceMetrics} The populated <code>PriceMetrics</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new PriceMetrics2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("atDate")) {
              obj["atDate"] = _ApiClient["default"].convertToType(data["atDate"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], Object);
            }
          }
          return obj;
        }
      }]);
      return PriceMetrics2;
    }();
    PriceMetrics.prototype["symbol"] = void 0;
    PriceMetrics.prototype["atDate"] = void 0;
    PriceMetrics.prototype["data"] = void 0;
    var _default = PriceMetrics;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/PriceTarget.js
var require_PriceTarget = __commonJS({
  "../node_modules/finnhub/dist/model/PriceTarget.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var PriceTarget = function() {
      function PriceTarget2() {
        _classCallCheck(this, PriceTarget2);
        PriceTarget2.initialize(this);
      }
      _createClass(PriceTarget2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>PriceTarget</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/PriceTarget} obj Optional instance to populate.
         * @return {module:model/PriceTarget} The populated <code>PriceTarget</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new PriceTarget2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("targetHigh")) {
              obj["targetHigh"] = _ApiClient["default"].convertToType(data["targetHigh"], "Number");
            }
            if (data.hasOwnProperty("targetLow")) {
              obj["targetLow"] = _ApiClient["default"].convertToType(data["targetLow"], "Number");
            }
            if (data.hasOwnProperty("targetMean")) {
              obj["targetMean"] = _ApiClient["default"].convertToType(data["targetMean"], "Number");
            }
            if (data.hasOwnProperty("targetMedian")) {
              obj["targetMedian"] = _ApiClient["default"].convertToType(data["targetMedian"], "Number");
            }
            if (data.hasOwnProperty("lastUpdated")) {
              obj["lastUpdated"] = _ApiClient["default"].convertToType(data["lastUpdated"], "String");
            }
          }
          return obj;
        }
      }]);
      return PriceTarget2;
    }();
    PriceTarget.prototype["symbol"] = void 0;
    PriceTarget.prototype["targetHigh"] = void 0;
    PriceTarget.prototype["targetLow"] = void 0;
    PriceTarget.prototype["targetMean"] = void 0;
    PriceTarget.prototype["targetMedian"] = void 0;
    PriceTarget.prototype["lastUpdated"] = void 0;
    var _default = PriceTarget;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Quote.js
var require_Quote = __commonJS({
  "../node_modules/finnhub/dist/model/Quote.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Quote = function() {
      function Quote2() {
        _classCallCheck(this, Quote2);
        Quote2.initialize(this);
      }
      _createClass(Quote2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Quote</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Quote} obj Optional instance to populate.
         * @return {module:model/Quote} The populated <code>Quote</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Quote2();
            if (data.hasOwnProperty("o")) {
              obj["o"] = _ApiClient["default"].convertToType(data["o"], "Number");
            }
            if (data.hasOwnProperty("h")) {
              obj["h"] = _ApiClient["default"].convertToType(data["h"], "Number");
            }
            if (data.hasOwnProperty("l")) {
              obj["l"] = _ApiClient["default"].convertToType(data["l"], "Number");
            }
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], "Number");
            }
            if (data.hasOwnProperty("pc")) {
              obj["pc"] = _ApiClient["default"].convertToType(data["pc"], "Number");
            }
            if (data.hasOwnProperty("d")) {
              obj["d"] = _ApiClient["default"].convertToType(data["d"], "Number");
            }
            if (data.hasOwnProperty("dp")) {
              obj["dp"] = _ApiClient["default"].convertToType(data["dp"], "Number");
            }
          }
          return obj;
        }
      }]);
      return Quote2;
    }();
    Quote.prototype["o"] = void 0;
    Quote.prototype["h"] = void 0;
    Quote.prototype["l"] = void 0;
    Quote.prototype["c"] = void 0;
    Quote.prototype["pc"] = void 0;
    Quote.prototype["d"] = void 0;
    Quote.prototype["dp"] = void 0;
    var _default = Quote;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/RecommendationTrend.js
var require_RecommendationTrend = __commonJS({
  "../node_modules/finnhub/dist/model/RecommendationTrend.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var RecommendationTrend = function() {
      function RecommendationTrend2() {
        _classCallCheck(this, RecommendationTrend2);
        RecommendationTrend2.initialize(this);
      }
      _createClass(RecommendationTrend2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>RecommendationTrend</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/RecommendationTrend} obj Optional instance to populate.
         * @return {module:model/RecommendationTrend} The populated <code>RecommendationTrend</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new RecommendationTrend2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("buy")) {
              obj["buy"] = _ApiClient["default"].convertToType(data["buy"], "Number");
            }
            if (data.hasOwnProperty("hold")) {
              obj["hold"] = _ApiClient["default"].convertToType(data["hold"], "Number");
            }
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "String");
            }
            if (data.hasOwnProperty("sell")) {
              obj["sell"] = _ApiClient["default"].convertToType(data["sell"], "Number");
            }
            if (data.hasOwnProperty("strongBuy")) {
              obj["strongBuy"] = _ApiClient["default"].convertToType(data["strongBuy"], "Number");
            }
            if (data.hasOwnProperty("strongSell")) {
              obj["strongSell"] = _ApiClient["default"].convertToType(data["strongSell"], "Number");
            }
          }
          return obj;
        }
      }]);
      return RecommendationTrend2;
    }();
    RecommendationTrend.prototype["symbol"] = void 0;
    RecommendationTrend.prototype["buy"] = void 0;
    RecommendationTrend.prototype["hold"] = void 0;
    RecommendationTrend.prototype["period"] = void 0;
    RecommendationTrend.prototype["sell"] = void 0;
    RecommendationTrend.prototype["strongBuy"] = void 0;
    RecommendationTrend.prototype["strongSell"] = void 0;
    var _default = RecommendationTrend;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/RevenueBreakdown.js
var require_RevenueBreakdown = __commonJS({
  "../node_modules/finnhub/dist/model/RevenueBreakdown.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _BreakdownItem = _interopRequireDefault(require_BreakdownItem());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var RevenueBreakdown = function() {
      function RevenueBreakdown2() {
        _classCallCheck(this, RevenueBreakdown2);
        RevenueBreakdown2.initialize(this);
      }
      _createClass(RevenueBreakdown2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>RevenueBreakdown</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/RevenueBreakdown} obj Optional instance to populate.
         * @return {module:model/RevenueBreakdown} The populated <code>RevenueBreakdown</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new RevenueBreakdown2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_BreakdownItem["default"]]);
            }
          }
          return obj;
        }
      }]);
      return RevenueBreakdown2;
    }();
    RevenueBreakdown.prototype["symbol"] = void 0;
    RevenueBreakdown.prototype["cik"] = void 0;
    RevenueBreakdown.prototype["data"] = void 0;
    var _default = RevenueBreakdown;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/RevenueEstimatesInfo.js
var require_RevenueEstimatesInfo = __commonJS({
  "../node_modules/finnhub/dist/model/RevenueEstimatesInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var RevenueEstimatesInfo = function() {
      function RevenueEstimatesInfo2() {
        _classCallCheck(this, RevenueEstimatesInfo2);
        RevenueEstimatesInfo2.initialize(this);
      }
      _createClass(RevenueEstimatesInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>RevenueEstimatesInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/RevenueEstimatesInfo} obj Optional instance to populate.
         * @return {module:model/RevenueEstimatesInfo} The populated <code>RevenueEstimatesInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new RevenueEstimatesInfo2();
            if (data.hasOwnProperty("revenueAvg")) {
              obj["revenueAvg"] = _ApiClient["default"].convertToType(data["revenueAvg"], "Number");
            }
            if (data.hasOwnProperty("revenueHigh")) {
              obj["revenueHigh"] = _ApiClient["default"].convertToType(data["revenueHigh"], "Number");
            }
            if (data.hasOwnProperty("revenueLow")) {
              obj["revenueLow"] = _ApiClient["default"].convertToType(data["revenueLow"], "Number");
            }
            if (data.hasOwnProperty("numberAnalysts")) {
              obj["numberAnalysts"] = _ApiClient["default"].convertToType(data["numberAnalysts"], "Number");
            }
            if (data.hasOwnProperty("period")) {
              obj["period"] = _ApiClient["default"].convertToType(data["period"], "Date");
            }
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
          }
          return obj;
        }
      }]);
      return RevenueEstimatesInfo2;
    }();
    RevenueEstimatesInfo.prototype["revenueAvg"] = void 0;
    RevenueEstimatesInfo.prototype["revenueHigh"] = void 0;
    RevenueEstimatesInfo.prototype["revenueLow"] = void 0;
    RevenueEstimatesInfo.prototype["numberAnalysts"] = void 0;
    RevenueEstimatesInfo.prototype["period"] = void 0;
    RevenueEstimatesInfo.prototype["year"] = void 0;
    RevenueEstimatesInfo.prototype["quarter"] = void 0;
    var _default = RevenueEstimatesInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/RevenueEstimates.js
var require_RevenueEstimates = __commonJS({
  "../node_modules/finnhub/dist/model/RevenueEstimates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _RevenueEstimatesInfo = _interopRequireDefault(require_RevenueEstimatesInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var RevenueEstimates = function() {
      function RevenueEstimates2() {
        _classCallCheck(this, RevenueEstimates2);
        RevenueEstimates2.initialize(this);
      }
      _createClass(RevenueEstimates2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>RevenueEstimates</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/RevenueEstimates} obj Optional instance to populate.
         * @return {module:model/RevenueEstimates} The populated <code>RevenueEstimates</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new RevenueEstimates2();
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_RevenueEstimatesInfo["default"]]);
            }
            if (data.hasOwnProperty("freq")) {
              obj["freq"] = _ApiClient["default"].convertToType(data["freq"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return RevenueEstimates2;
    }();
    RevenueEstimates.prototype["data"] = void 0;
    RevenueEstimates.prototype["freq"] = void 0;
    RevenueEstimates.prototype["symbol"] = void 0;
    var _default = RevenueEstimates;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SECSentimentAnalysis.js
var require_SECSentimentAnalysis = __commonJS({
  "../node_modules/finnhub/dist/model/SECSentimentAnalysis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _FilingSentiment = _interopRequireDefault(require_FilingSentiment());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SECSentimentAnalysis = function() {
      function SECSentimentAnalysis2() {
        _classCallCheck(this, SECSentimentAnalysis2);
        SECSentimentAnalysis2.initialize(this);
      }
      _createClass(SECSentimentAnalysis2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SECSentimentAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SECSentimentAnalysis} obj Optional instance to populate.
         * @return {module:model/SECSentimentAnalysis} The populated <code>SECSentimentAnalysis</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SECSentimentAnalysis2();
            if (data.hasOwnProperty("accessNumber")) {
              obj["accessNumber"] = _ApiClient["default"].convertToType(data["accessNumber"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("sentiment")) {
              obj["sentiment"] = _FilingSentiment["default"].constructFromObject(data["sentiment"]);
            }
          }
          return obj;
        }
      }]);
      return SECSentimentAnalysis2;
    }();
    SECSentimentAnalysis.prototype["accessNumber"] = void 0;
    SECSentimentAnalysis.prototype["symbol"] = void 0;
    SECSentimentAnalysis.prototype["cik"] = void 0;
    SECSentimentAnalysis.prototype["sentiment"] = void 0;
    var _default = SECSentimentAnalysis;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SearchBody.js
var require_SearchBody = __commonJS({
  "../node_modules/finnhub/dist/model/SearchBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SearchBody = function() {
      function SearchBody2(query) {
        _classCallCheck(this, SearchBody2);
        SearchBody2.initialize(this, query);
      }
      _createClass(SearchBody2, null, [{
        key: "initialize",
        value: function initialize(obj, query) {
          obj["query"] = query;
        }
        /**
         * Constructs a <code>SearchBody</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SearchBody} obj Optional instance to populate.
         * @return {module:model/SearchBody} The populated <code>SearchBody</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SearchBody2();
            if (data.hasOwnProperty("query")) {
              obj["query"] = _ApiClient["default"].convertToType(data["query"], "String");
            }
            if (data.hasOwnProperty("isins")) {
              obj["isins"] = _ApiClient["default"].convertToType(data["isins"], "String");
            }
            if (data.hasOwnProperty("cusips")) {
              obj["cusips"] = _ApiClient["default"].convertToType(data["cusips"], "String");
            }
            if (data.hasOwnProperty("ciks")) {
              obj["ciks"] = _ApiClient["default"].convertToType(data["ciks"], "String");
            }
            if (data.hasOwnProperty("sedarIds")) {
              obj["sedarIds"] = _ApiClient["default"].convertToType(data["sedarIds"], "String");
            }
            if (data.hasOwnProperty("chIds")) {
              obj["chIds"] = _ApiClient["default"].convertToType(data["chIds"], "String");
            }
            if (data.hasOwnProperty("symbols")) {
              obj["symbols"] = _ApiClient["default"].convertToType(data["symbols"], "String");
            }
            if (data.hasOwnProperty("sedols")) {
              obj["sedols"] = _ApiClient["default"].convertToType(data["sedols"], "String");
            }
            if (data.hasOwnProperty("sources")) {
              obj["sources"] = _ApiClient["default"].convertToType(data["sources"], "String");
            }
            if (data.hasOwnProperty("forms")) {
              obj["forms"] = _ApiClient["default"].convertToType(data["forms"], "String");
            }
            if (data.hasOwnProperty("gics")) {
              obj["gics"] = _ApiClient["default"].convertToType(data["gics"], "String");
            }
            if (data.hasOwnProperty("naics")) {
              obj["naics"] = _ApiClient["default"].convertToType(data["naics"], "String");
            }
            if (data.hasOwnProperty("exhibits")) {
              obj["exhibits"] = _ApiClient["default"].convertToType(data["exhibits"], "String");
            }
            if (data.hasOwnProperty("exchanges")) {
              obj["exchanges"] = _ApiClient["default"].convertToType(data["exchanges"], "String");
            }
            if (data.hasOwnProperty("countries")) {
              obj["countries"] = _ApiClient["default"].convertToType(data["countries"], "String");
            }
            if (data.hasOwnProperty("acts")) {
              obj["acts"] = _ApiClient["default"].convertToType(data["acts"], "String");
            }
            if (data.hasOwnProperty("caps")) {
              obj["caps"] = _ApiClient["default"].convertToType(data["caps"], "String");
            }
            if (data.hasOwnProperty("fromDate")) {
              obj["fromDate"] = _ApiClient["default"].convertToType(data["fromDate"], "String");
            }
            if (data.hasOwnProperty("toDate")) {
              obj["toDate"] = _ApiClient["default"].convertToType(data["toDate"], "String");
            }
            if (data.hasOwnProperty("page")) {
              obj["page"] = _ApiClient["default"].convertToType(data["page"], "String");
            }
            if (data.hasOwnProperty("sort")) {
              obj["sort"] = _ApiClient["default"].convertToType(data["sort"], "String");
            }
            if (data.hasOwnProperty("highlighted")) {
              obj["highlighted"] = _ApiClient["default"].convertToType(data["highlighted"], "Boolean");
            }
          }
          return obj;
        }
      }]);
      return SearchBody2;
    }();
    SearchBody.prototype["query"] = void 0;
    SearchBody.prototype["isins"] = void 0;
    SearchBody.prototype["cusips"] = void 0;
    SearchBody.prototype["ciks"] = void 0;
    SearchBody.prototype["sedarIds"] = void 0;
    SearchBody.prototype["chIds"] = void 0;
    SearchBody.prototype["symbols"] = void 0;
    SearchBody.prototype["sedols"] = void 0;
    SearchBody.prototype["sources"] = void 0;
    SearchBody.prototype["forms"] = void 0;
    SearchBody.prototype["gics"] = void 0;
    SearchBody.prototype["naics"] = void 0;
    SearchBody.prototype["exhibits"] = void 0;
    SearchBody.prototype["exchanges"] = void 0;
    SearchBody.prototype["countries"] = void 0;
    SearchBody.prototype["acts"] = void 0;
    SearchBody.prototype["caps"] = void 0;
    SearchBody.prototype["fromDate"] = void 0;
    SearchBody.prototype["toDate"] = void 0;
    SearchBody.prototype["page"] = void 0;
    SearchBody.prototype["sort"] = void 0;
    SearchBody.prototype["highlighted"] = void 0;
    var _default = SearchBody;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SearchFilter.js
var require_SearchFilter = __commonJS({
  "../node_modules/finnhub/dist/model/SearchFilter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SearchFilter = function() {
      function SearchFilter2() {
        _classCallCheck(this, SearchFilter2);
        SearchFilter2.initialize(this);
      }
      _createClass(SearchFilter2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SearchFilter</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SearchFilter} obj Optional instance to populate.
         * @return {module:model/SearchFilter} The populated <code>SearchFilter</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SearchFilter2();
            if (data.hasOwnProperty("id")) {
              obj["id"] = _ApiClient["default"].convertToType(data["id"], "String");
            }
            if (data.hasOwnProperty("name")) {
              obj["name"] = _ApiClient["default"].convertToType(data["name"], "String");
            }
          }
          return obj;
        }
      }]);
      return SearchFilter2;
    }();
    SearchFilter.prototype["id"] = void 0;
    SearchFilter.prototype["name"] = void 0;
    var _default = SearchFilter;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SearchResponse.js
var require_SearchResponse = __commonJS({
  "../node_modules/finnhub/dist/model/SearchResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _FilingResponse = _interopRequireDefault(require_FilingResponse());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SearchResponse = function() {
      function SearchResponse2() {
        _classCallCheck(this, SearchResponse2);
        SearchResponse2.initialize(this);
      }
      _createClass(SearchResponse2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SearchResponse} obj Optional instance to populate.
         * @return {module:model/SearchResponse} The populated <code>SearchResponse</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SearchResponse2();
            if (data.hasOwnProperty("count")) {
              obj["count"] = _ApiClient["default"].convertToType(data["count"], "Number");
            }
            if (data.hasOwnProperty("took")) {
              obj["took"] = _ApiClient["default"].convertToType(data["took"], "Number");
            }
            if (data.hasOwnProperty("page")) {
              obj["page"] = _ApiClient["default"].convertToType(data["page"], "Number");
            }
            if (data.hasOwnProperty("filings")) {
              obj["filings"] = _ApiClient["default"].convertToType(data["filings"], [_FilingResponse["default"]]);
            }
          }
          return obj;
        }
      }]);
      return SearchResponse2;
    }();
    SearchResponse.prototype["count"] = void 0;
    SearchResponse.prototype["took"] = void 0;
    SearchResponse.prototype["page"] = void 0;
    SearchResponse.prototype["filings"] = void 0;
    var _default = SearchResponse;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SectorMetricData.js
var require_SectorMetricData = __commonJS({
  "../node_modules/finnhub/dist/model/SectorMetricData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SectorMetricData = function() {
      function SectorMetricData2() {
        _classCallCheck(this, SectorMetricData2);
        SectorMetricData2.initialize(this);
      }
      _createClass(SectorMetricData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SectorMetricData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SectorMetricData} obj Optional instance to populate.
         * @return {module:model/SectorMetricData} The populated <code>SectorMetricData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SectorMetricData2();
            if (data.hasOwnProperty("sector")) {
              obj["sector"] = _ApiClient["default"].convertToType(data["sector"], "String");
            }
            if (data.hasOwnProperty("metrics")) {
              obj["metrics"] = _ApiClient["default"].convertToType(data["metrics"], Object);
            }
          }
          return obj;
        }
      }]);
      return SectorMetricData2;
    }();
    SectorMetricData.prototype["sector"] = void 0;
    SectorMetricData.prototype["metrics"] = void 0;
    var _default = SectorMetricData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SectorMetric.js
var require_SectorMetric = __commonJS({
  "../node_modules/finnhub/dist/model/SectorMetric.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _SectorMetricData = _interopRequireDefault(require_SectorMetricData());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SectorMetric = function() {
      function SectorMetric2() {
        _classCallCheck(this, SectorMetric2);
        SectorMetric2.initialize(this);
      }
      _createClass(SectorMetric2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SectorMetric</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SectorMetric} obj Optional instance to populate.
         * @return {module:model/SectorMetric} The populated <code>SectorMetric</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SectorMetric2();
            if (data.hasOwnProperty("region")) {
              obj["region"] = _ApiClient["default"].convertToType(data["region"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_SectorMetricData["default"]]);
            }
          }
          return obj;
        }
      }]);
      return SectorMetric2;
    }();
    SectorMetric.prototype["region"] = void 0;
    SectorMetric.prototype["data"] = void 0;
    var _default = SectorMetric;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SentimentContent.js
var require_SentimentContent = __commonJS({
  "../node_modules/finnhub/dist/model/SentimentContent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SentimentContent = function() {
      function SentimentContent2() {
        _classCallCheck(this, SentimentContent2);
        SentimentContent2.initialize(this);
      }
      _createClass(SentimentContent2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SentimentContent</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SentimentContent} obj Optional instance to populate.
         * @return {module:model/SentimentContent} The populated <code>SentimentContent</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SentimentContent2();
            if (data.hasOwnProperty("mention")) {
              obj["mention"] = _ApiClient["default"].convertToType(data["mention"], "Number");
            }
            if (data.hasOwnProperty("positiveMention")) {
              obj["positiveMention"] = _ApiClient["default"].convertToType(data["positiveMention"], "Number");
            }
            if (data.hasOwnProperty("negativeMention")) {
              obj["negativeMention"] = _ApiClient["default"].convertToType(data["negativeMention"], "Number");
            }
            if (data.hasOwnProperty("positiveScore")) {
              obj["positiveScore"] = _ApiClient["default"].convertToType(data["positiveScore"], "Number");
            }
            if (data.hasOwnProperty("negativeScore")) {
              obj["negativeScore"] = _ApiClient["default"].convertToType(data["negativeScore"], "Number");
            }
            if (data.hasOwnProperty("score")) {
              obj["score"] = _ApiClient["default"].convertToType(data["score"], "Number");
            }
            if (data.hasOwnProperty("atTime")) {
              obj["atTime"] = _ApiClient["default"].convertToType(data["atTime"], "String");
            }
          }
          return obj;
        }
      }]);
      return SentimentContent2;
    }();
    SentimentContent.prototype["mention"] = void 0;
    SentimentContent.prototype["positiveMention"] = void 0;
    SentimentContent.prototype["negativeMention"] = void 0;
    SentimentContent.prototype["positiveScore"] = void 0;
    SentimentContent.prototype["negativeScore"] = void 0;
    SentimentContent.prototype["score"] = void 0;
    SentimentContent.prototype["atTime"] = void 0;
    var _default = SentimentContent;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SimilarityIndexInfo.js
var require_SimilarityIndexInfo = __commonJS({
  "../node_modules/finnhub/dist/model/SimilarityIndexInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SimilarityIndexInfo = function() {
      function SimilarityIndexInfo2() {
        _classCallCheck(this, SimilarityIndexInfo2);
        SimilarityIndexInfo2.initialize(this);
      }
      _createClass(SimilarityIndexInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SimilarityIndexInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SimilarityIndexInfo} obj Optional instance to populate.
         * @return {module:model/SimilarityIndexInfo} The populated <code>SimilarityIndexInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SimilarityIndexInfo2();
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("item1")) {
              obj["item1"] = _ApiClient["default"].convertToType(data["item1"], "Number");
            }
            if (data.hasOwnProperty("item1a")) {
              obj["item1a"] = _ApiClient["default"].convertToType(data["item1a"], "Number");
            }
            if (data.hasOwnProperty("item2")) {
              obj["item2"] = _ApiClient["default"].convertToType(data["item2"], "Number");
            }
            if (data.hasOwnProperty("item7")) {
              obj["item7"] = _ApiClient["default"].convertToType(data["item7"], "Number");
            }
            if (data.hasOwnProperty("item7a")) {
              obj["item7a"] = _ApiClient["default"].convertToType(data["item7a"], "Number");
            }
            if (data.hasOwnProperty("accessNumber")) {
              obj["accessNumber"] = _ApiClient["default"].convertToType(data["accessNumber"], "String");
            }
            if (data.hasOwnProperty("form")) {
              obj["form"] = _ApiClient["default"].convertToType(data["form"], "String");
            }
            if (data.hasOwnProperty("filedDate")) {
              obj["filedDate"] = _ApiClient["default"].convertToType(data["filedDate"], "String");
            }
            if (data.hasOwnProperty("acceptedDate")) {
              obj["acceptedDate"] = _ApiClient["default"].convertToType(data["acceptedDate"], "String");
            }
            if (data.hasOwnProperty("reportUrl")) {
              obj["reportUrl"] = _ApiClient["default"].convertToType(data["reportUrl"], "String");
            }
            if (data.hasOwnProperty("filingUrl")) {
              obj["filingUrl"] = _ApiClient["default"].convertToType(data["filingUrl"], "String");
            }
          }
          return obj;
        }
      }]);
      return SimilarityIndexInfo2;
    }();
    SimilarityIndexInfo.prototype["cik"] = void 0;
    SimilarityIndexInfo.prototype["item1"] = void 0;
    SimilarityIndexInfo.prototype["item1a"] = void 0;
    SimilarityIndexInfo.prototype["item2"] = void 0;
    SimilarityIndexInfo.prototype["item7"] = void 0;
    SimilarityIndexInfo.prototype["item7a"] = void 0;
    SimilarityIndexInfo.prototype["accessNumber"] = void 0;
    SimilarityIndexInfo.prototype["form"] = void 0;
    SimilarityIndexInfo.prototype["filedDate"] = void 0;
    SimilarityIndexInfo.prototype["acceptedDate"] = void 0;
    SimilarityIndexInfo.prototype["reportUrl"] = void 0;
    SimilarityIndexInfo.prototype["filingUrl"] = void 0;
    var _default = SimilarityIndexInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SimilarityIndex.js
var require_SimilarityIndex = __commonJS({
  "../node_modules/finnhub/dist/model/SimilarityIndex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _SimilarityIndexInfo = _interopRequireDefault(require_SimilarityIndexInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SimilarityIndex = function() {
      function SimilarityIndex2() {
        _classCallCheck(this, SimilarityIndex2);
        SimilarityIndex2.initialize(this);
      }
      _createClass(SimilarityIndex2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SimilarityIndex</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SimilarityIndex} obj Optional instance to populate.
         * @return {module:model/SimilarityIndex} The populated <code>SimilarityIndex</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SimilarityIndex2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("cik")) {
              obj["cik"] = _ApiClient["default"].convertToType(data["cik"], "String");
            }
            if (data.hasOwnProperty("similarity")) {
              obj["similarity"] = _ApiClient["default"].convertToType(data["similarity"], [_SimilarityIndexInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return SimilarityIndex2;
    }();
    SimilarityIndex.prototype["symbol"] = void 0;
    SimilarityIndex.prototype["cik"] = void 0;
    SimilarityIndex.prototype["similarity"] = void 0;
    var _default = SimilarityIndex;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SocialSentiment.js
var require_SocialSentiment = __commonJS({
  "../node_modules/finnhub/dist/model/SocialSentiment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _SentimentContent = _interopRequireDefault(require_SentimentContent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SocialSentiment = function() {
      function SocialSentiment2() {
        _classCallCheck(this, SocialSentiment2);
        SocialSentiment2.initialize(this);
      }
      _createClass(SocialSentiment2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SocialSentiment</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SocialSentiment} obj Optional instance to populate.
         * @return {module:model/SocialSentiment} The populated <code>SocialSentiment</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SocialSentiment2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_SentimentContent["default"]]);
            }
          }
          return obj;
        }
      }]);
      return SocialSentiment2;
    }();
    SocialSentiment.prototype["symbol"] = void 0;
    SocialSentiment.prototype["data"] = void 0;
    var _default = SocialSentiment;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/Split.js
var require_Split = __commonJS({
  "../node_modules/finnhub/dist/model/Split.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Split = function() {
      function Split2() {
        _classCallCheck(this, Split2);
        Split2.initialize(this);
      }
      _createClass(Split2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>Split</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/Split} obj Optional instance to populate.
         * @return {module:model/Split} The populated <code>Split</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new Split2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("date")) {
              obj["date"] = _ApiClient["default"].convertToType(data["date"], "Date");
            }
            if (data.hasOwnProperty("fromFactor")) {
              obj["fromFactor"] = _ApiClient["default"].convertToType(data["fromFactor"], "Number");
            }
            if (data.hasOwnProperty("toFactor")) {
              obj["toFactor"] = _ApiClient["default"].convertToType(data["toFactor"], "Number");
            }
          }
          return obj;
        }
      }]);
      return Split2;
    }();
    Split.prototype["symbol"] = void 0;
    Split.prototype["date"] = void 0;
    Split.prototype["fromFactor"] = void 0;
    Split.prototype["toFactor"] = void 0;
    var _default = Split;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/StockCandles.js
var require_StockCandles = __commonJS({
  "../node_modules/finnhub/dist/model/StockCandles.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var StockCandles = function() {
      function StockCandles2() {
        _classCallCheck(this, StockCandles2);
        StockCandles2.initialize(this);
      }
      _createClass(StockCandles2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>StockCandles</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/StockCandles} obj Optional instance to populate.
         * @return {module:model/StockCandles} The populated <code>StockCandles</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new StockCandles2();
            if (data.hasOwnProperty("o")) {
              obj["o"] = _ApiClient["default"].convertToType(data["o"], ["Number"]);
            }
            if (data.hasOwnProperty("h")) {
              obj["h"] = _ApiClient["default"].convertToType(data["h"], ["Number"]);
            }
            if (data.hasOwnProperty("l")) {
              obj["l"] = _ApiClient["default"].convertToType(data["l"], ["Number"]);
            }
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], ["Number"]);
            }
            if (data.hasOwnProperty("v")) {
              obj["v"] = _ApiClient["default"].convertToType(data["v"], ["Number"]);
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], ["Number"]);
            }
            if (data.hasOwnProperty("s")) {
              obj["s"] = _ApiClient["default"].convertToType(data["s"], "String");
            }
          }
          return obj;
        }
      }]);
      return StockCandles2;
    }();
    StockCandles.prototype["o"] = void 0;
    StockCandles.prototype["h"] = void 0;
    StockCandles.prototype["l"] = void 0;
    StockCandles.prototype["c"] = void 0;
    StockCandles.prototype["v"] = void 0;
    StockCandles.prototype["t"] = void 0;
    StockCandles.prototype["s"] = void 0;
    var _default = StockCandles;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/StockSymbol.js
var require_StockSymbol = __commonJS({
  "../node_modules/finnhub/dist/model/StockSymbol.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var StockSymbol = function() {
      function StockSymbol2() {
        _classCallCheck(this, StockSymbol2);
        StockSymbol2.initialize(this);
      }
      _createClass(StockSymbol2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>StockSymbol</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/StockSymbol} obj Optional instance to populate.
         * @return {module:model/StockSymbol} The populated <code>StockSymbol</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new StockSymbol2();
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("displaySymbol")) {
              obj["displaySymbol"] = _ApiClient["default"].convertToType(data["displaySymbol"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("type")) {
              obj["type"] = _ApiClient["default"].convertToType(data["type"], "String");
            }
            if (data.hasOwnProperty("mic")) {
              obj["mic"] = _ApiClient["default"].convertToType(data["mic"], "String");
            }
            if (data.hasOwnProperty("figi")) {
              obj["figi"] = _ApiClient["default"].convertToType(data["figi"], "String");
            }
            if (data.hasOwnProperty("shareClassFIGI")) {
              obj["shareClassFIGI"] = _ApiClient["default"].convertToType(data["shareClassFIGI"], "String");
            }
            if (data.hasOwnProperty("currency")) {
              obj["currency"] = _ApiClient["default"].convertToType(data["currency"], "String");
            }
            if (data.hasOwnProperty("symbol2")) {
              obj["symbol2"] = _ApiClient["default"].convertToType(data["symbol2"], "String");
            }
            if (data.hasOwnProperty("isin")) {
              obj["isin"] = _ApiClient["default"].convertToType(data["isin"], "String");
            }
          }
          return obj;
        }
      }]);
      return StockSymbol2;
    }();
    StockSymbol.prototype["description"] = void 0;
    StockSymbol.prototype["displaySymbol"] = void 0;
    StockSymbol.prototype["symbol"] = void 0;
    StockSymbol.prototype["type"] = void 0;
    StockSymbol.prototype["mic"] = void 0;
    StockSymbol.prototype["figi"] = void 0;
    StockSymbol.prototype["shareClassFIGI"] = void 0;
    StockSymbol.prototype["currency"] = void 0;
    StockSymbol.prototype["symbol2"] = void 0;
    StockSymbol.prototype["isin"] = void 0;
    var _default = StockSymbol;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SupplyChainRelationships.js
var require_SupplyChainRelationships = __commonJS({
  "../node_modules/finnhub/dist/model/SupplyChainRelationships.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _KeyCustomersSuppliers = _interopRequireDefault(require_KeyCustomersSuppliers());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SupplyChainRelationships = function() {
      function SupplyChainRelationships2() {
        _classCallCheck(this, SupplyChainRelationships2);
        SupplyChainRelationships2.initialize(this);
      }
      _createClass(SupplyChainRelationships2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SupplyChainRelationships</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SupplyChainRelationships} obj Optional instance to populate.
         * @return {module:model/SupplyChainRelationships} The populated <code>SupplyChainRelationships</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SupplyChainRelationships2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_KeyCustomersSuppliers["default"]]);
            }
          }
          return obj;
        }
      }]);
      return SupplyChainRelationships2;
    }();
    SupplyChainRelationships.prototype["symbol"] = void 0;
    SupplyChainRelationships.prototype["data"] = void 0;
    var _default = SupplyChainRelationships;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SupportResistance.js
var require_SupportResistance = __commonJS({
  "../node_modules/finnhub/dist/model/SupportResistance.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SupportResistance = function() {
      function SupportResistance2() {
        _classCallCheck(this, SupportResistance2);
        SupportResistance2.initialize(this);
      }
      _createClass(SupportResistance2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SupportResistance</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SupportResistance} obj Optional instance to populate.
         * @return {module:model/SupportResistance} The populated <code>SupportResistance</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SupportResistance2();
            if (data.hasOwnProperty("levels")) {
              obj["levels"] = _ApiClient["default"].convertToType(data["levels"], ["Number"]);
            }
          }
          return obj;
        }
      }]);
      return SupportResistance2;
    }();
    SupportResistance.prototype["levels"] = void 0;
    var _default = SupportResistance;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SymbolChangeInfo.js
var require_SymbolChangeInfo = __commonJS({
  "../node_modules/finnhub/dist/model/SymbolChangeInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SymbolChangeInfo = function() {
      function SymbolChangeInfo2() {
        _classCallCheck(this, SymbolChangeInfo2);
        SymbolChangeInfo2.initialize(this);
      }
      _createClass(SymbolChangeInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SymbolChangeInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SymbolChangeInfo} obj Optional instance to populate.
         * @return {module:model/SymbolChangeInfo} The populated <code>SymbolChangeInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SymbolChangeInfo2();
            if (data.hasOwnProperty("atDate")) {
              obj["atDate"] = _ApiClient["default"].convertToType(data["atDate"], "String");
            }
            if (data.hasOwnProperty("oldSymbol")) {
              obj["oldSymbol"] = _ApiClient["default"].convertToType(data["oldSymbol"], "String");
            }
            if (data.hasOwnProperty("newSymbol")) {
              obj["newSymbol"] = _ApiClient["default"].convertToType(data["newSymbol"], "String");
            }
          }
          return obj;
        }
      }]);
      return SymbolChangeInfo2;
    }();
    SymbolChangeInfo.prototype["atDate"] = void 0;
    SymbolChangeInfo.prototype["oldSymbol"] = void 0;
    SymbolChangeInfo.prototype["newSymbol"] = void 0;
    var _default = SymbolChangeInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SymbolChange.js
var require_SymbolChange = __commonJS({
  "../node_modules/finnhub/dist/model/SymbolChange.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _SymbolChangeInfo = _interopRequireDefault(require_SymbolChangeInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SymbolChange = function() {
      function SymbolChange2() {
        _classCallCheck(this, SymbolChange2);
        SymbolChange2.initialize(this);
      }
      _createClass(SymbolChange2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SymbolChange</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SymbolChange} obj Optional instance to populate.
         * @return {module:model/SymbolChange} The populated <code>SymbolChange</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SymbolChange2();
            if (data.hasOwnProperty("fromDate")) {
              obj["fromDate"] = _ApiClient["default"].convertToType(data["fromDate"], "String");
            }
            if (data.hasOwnProperty("toDate")) {
              obj["toDate"] = _ApiClient["default"].convertToType(data["toDate"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_SymbolChangeInfo["default"]]);
            }
          }
          return obj;
        }
      }]);
      return SymbolChange2;
    }();
    SymbolChange.prototype["fromDate"] = void 0;
    SymbolChange.prototype["toDate"] = void 0;
    SymbolChange.prototype["data"] = void 0;
    var _default = SymbolChange;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SymbolLookupInfo.js
var require_SymbolLookupInfo = __commonJS({
  "../node_modules/finnhub/dist/model/SymbolLookupInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SymbolLookupInfo = function() {
      function SymbolLookupInfo2() {
        _classCallCheck(this, SymbolLookupInfo2);
        SymbolLookupInfo2.initialize(this);
      }
      _createClass(SymbolLookupInfo2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SymbolLookupInfo</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SymbolLookupInfo} obj Optional instance to populate.
         * @return {module:model/SymbolLookupInfo} The populated <code>SymbolLookupInfo</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SymbolLookupInfo2();
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("displaySymbol")) {
              obj["displaySymbol"] = _ApiClient["default"].convertToType(data["displaySymbol"], "String");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("type")) {
              obj["type"] = _ApiClient["default"].convertToType(data["type"], "String");
            }
          }
          return obj;
        }
      }]);
      return SymbolLookupInfo2;
    }();
    SymbolLookupInfo.prototype["description"] = void 0;
    SymbolLookupInfo.prototype["displaySymbol"] = void 0;
    SymbolLookupInfo.prototype["symbol"] = void 0;
    SymbolLookupInfo.prototype["type"] = void 0;
    var _default = SymbolLookupInfo;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/SymbolLookup.js
var require_SymbolLookup = __commonJS({
  "../node_modules/finnhub/dist/model/SymbolLookup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _SymbolLookupInfo = _interopRequireDefault(require_SymbolLookupInfo());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SymbolLookup = function() {
      function SymbolLookup2() {
        _classCallCheck(this, SymbolLookup2);
        SymbolLookup2.initialize(this);
      }
      _createClass(SymbolLookup2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>SymbolLookup</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/SymbolLookup} obj Optional instance to populate.
         * @return {module:model/SymbolLookup} The populated <code>SymbolLookup</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new SymbolLookup2();
            if (data.hasOwnProperty("result")) {
              obj["result"] = _ApiClient["default"].convertToType(data["result"], [_SymbolLookupInfo["default"]]);
            }
            if (data.hasOwnProperty("count")) {
              obj["count"] = _ApiClient["default"].convertToType(data["count"], "Number");
            }
          }
          return obj;
        }
      }]);
      return SymbolLookup2;
    }();
    SymbolLookup.prototype["result"] = void 0;
    SymbolLookup.prototype["count"] = void 0;
    var _default = SymbolLookup;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/TickData.js
var require_TickData = __commonJS({
  "../node_modules/finnhub/dist/model/TickData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var TickData = function() {
      function TickData2() {
        _classCallCheck(this, TickData2);
        TickData2.initialize(this);
      }
      _createClass(TickData2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>TickData</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/TickData} obj Optional instance to populate.
         * @return {module:model/TickData} The populated <code>TickData</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new TickData2();
            if (data.hasOwnProperty("s")) {
              obj["s"] = _ApiClient["default"].convertToType(data["s"], "String");
            }
            if (data.hasOwnProperty("skip")) {
              obj["skip"] = _ApiClient["default"].convertToType(data["skip"], "Number");
            }
            if (data.hasOwnProperty("count")) {
              obj["count"] = _ApiClient["default"].convertToType(data["count"], "Number");
            }
            if (data.hasOwnProperty("total")) {
              obj["total"] = _ApiClient["default"].convertToType(data["total"], "Number");
            }
            if (data.hasOwnProperty("v")) {
              obj["v"] = _ApiClient["default"].convertToType(data["v"], ["Number"]);
            }
            if (data.hasOwnProperty("p")) {
              obj["p"] = _ApiClient["default"].convertToType(data["p"], ["Number"]);
            }
            if (data.hasOwnProperty("t")) {
              obj["t"] = _ApiClient["default"].convertToType(data["t"], ["Number"]);
            }
            if (data.hasOwnProperty("x")) {
              obj["x"] = _ApiClient["default"].convertToType(data["x"], ["String"]);
            }
            if (data.hasOwnProperty("c")) {
              obj["c"] = _ApiClient["default"].convertToType(data["c"], [["String"]]);
            }
          }
          return obj;
        }
      }]);
      return TickData2;
    }();
    TickData.prototype["s"] = void 0;
    TickData.prototype["skip"] = void 0;
    TickData.prototype["count"] = void 0;
    TickData.prototype["total"] = void 0;
    TickData.prototype["v"] = void 0;
    TickData.prototype["p"] = void 0;
    TickData.prototype["t"] = void 0;
    TickData.prototype["x"] = void 0;
    TickData.prototype["c"] = void 0;
    var _default = TickData;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/UpgradeDowngrade.js
var require_UpgradeDowngrade = __commonJS({
  "../node_modules/finnhub/dist/model/UpgradeDowngrade.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var UpgradeDowngrade = function() {
      function UpgradeDowngrade2() {
        _classCallCheck(this, UpgradeDowngrade2);
        UpgradeDowngrade2.initialize(this);
      }
      _createClass(UpgradeDowngrade2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>UpgradeDowngrade</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/UpgradeDowngrade} obj Optional instance to populate.
         * @return {module:model/UpgradeDowngrade} The populated <code>UpgradeDowngrade</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new UpgradeDowngrade2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("gradeTime")) {
              obj["gradeTime"] = _ApiClient["default"].convertToType(data["gradeTime"], "Number");
            }
            if (data.hasOwnProperty("fromGrade")) {
              obj["fromGrade"] = _ApiClient["default"].convertToType(data["fromGrade"], "String");
            }
            if (data.hasOwnProperty("toGrade")) {
              obj["toGrade"] = _ApiClient["default"].convertToType(data["toGrade"], "String");
            }
            if (data.hasOwnProperty("company")) {
              obj["company"] = _ApiClient["default"].convertToType(data["company"], "String");
            }
            if (data.hasOwnProperty("action")) {
              obj["action"] = _ApiClient["default"].convertToType(data["action"], "String");
            }
          }
          return obj;
        }
      }]);
      return UpgradeDowngrade2;
    }();
    UpgradeDowngrade.prototype["symbol"] = void 0;
    UpgradeDowngrade.prototype["gradeTime"] = void 0;
    UpgradeDowngrade.prototype["fromGrade"] = void 0;
    UpgradeDowngrade.prototype["toGrade"] = void 0;
    UpgradeDowngrade.prototype["company"] = void 0;
    UpgradeDowngrade.prototype["action"] = void 0;
    var _default = UpgradeDowngrade;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/UsaSpending.js
var require_UsaSpending = __commonJS({
  "../node_modules/finnhub/dist/model/UsaSpending.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var UsaSpending = function() {
      function UsaSpending2() {
        _classCallCheck(this, UsaSpending2);
        UsaSpending2.initialize(this);
      }
      _createClass(UsaSpending2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>UsaSpending</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/UsaSpending} obj Optional instance to populate.
         * @return {module:model/UsaSpending} The populated <code>UsaSpending</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new UsaSpending2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("recipientName")) {
              obj["recipientName"] = _ApiClient["default"].convertToType(data["recipientName"], "String");
            }
            if (data.hasOwnProperty("recipientParentName")) {
              obj["recipientParentName"] = _ApiClient["default"].convertToType(data["recipientParentName"], "String");
            }
            if (data.hasOwnProperty("awardDescription")) {
              obj["awardDescription"] = _ApiClient["default"].convertToType(data["awardDescription"], "String");
            }
            if (data.hasOwnProperty("country")) {
              obj["country"] = _ApiClient["default"].convertToType(data["country"], "String");
            }
            if (data.hasOwnProperty("actionDate")) {
              obj["actionDate"] = _ApiClient["default"].convertToType(data["actionDate"], "String");
            }
            if (data.hasOwnProperty("totalValue")) {
              obj["totalValue"] = _ApiClient["default"].convertToType(data["totalValue"], "Number");
            }
            if (data.hasOwnProperty("performanceStartDate")) {
              obj["performanceStartDate"] = _ApiClient["default"].convertToType(data["performanceStartDate"], "String");
            }
            if (data.hasOwnProperty("performanceEndDate")) {
              obj["performanceEndDate"] = _ApiClient["default"].convertToType(data["performanceEndDate"], "String");
            }
            if (data.hasOwnProperty("awardingAgencyName")) {
              obj["awardingAgencyName"] = _ApiClient["default"].convertToType(data["awardingAgencyName"], "String");
            }
            if (data.hasOwnProperty("awardingSubAgencyName")) {
              obj["awardingSubAgencyName"] = _ApiClient["default"].convertToType(data["awardingSubAgencyName"], "String");
            }
            if (data.hasOwnProperty("awardingOfficeName")) {
              obj["awardingOfficeName"] = _ApiClient["default"].convertToType(data["awardingOfficeName"], "String");
            }
            if (data.hasOwnProperty("performanceCountry")) {
              obj["performanceCountry"] = _ApiClient["default"].convertToType(data["performanceCountry"], "String");
            }
            if (data.hasOwnProperty("performanceCity")) {
              obj["performanceCity"] = _ApiClient["default"].convertToType(data["performanceCity"], "String");
            }
            if (data.hasOwnProperty("performanceCounty")) {
              obj["performanceCounty"] = _ApiClient["default"].convertToType(data["performanceCounty"], "String");
            }
            if (data.hasOwnProperty("performanceState")) {
              obj["performanceState"] = _ApiClient["default"].convertToType(data["performanceState"], "String");
            }
            if (data.hasOwnProperty("performanceZipCode")) {
              obj["performanceZipCode"] = _ApiClient["default"].convertToType(data["performanceZipCode"], "String");
            }
            if (data.hasOwnProperty("performanceCongressionalDistrict")) {
              obj["performanceCongressionalDistrict"] = _ApiClient["default"].convertToType(data["performanceCongressionalDistrict"], "String");
            }
            if (data.hasOwnProperty("naicsCode")) {
              obj["naicsCode"] = _ApiClient["default"].convertToType(data["naicsCode"], "String");
            }
            if (data.hasOwnProperty("permalink")) {
              obj["permalink"] = _ApiClient["default"].convertToType(data["permalink"], "String");
            }
          }
          return obj;
        }
      }]);
      return UsaSpending2;
    }();
    UsaSpending.prototype["symbol"] = void 0;
    UsaSpending.prototype["recipientName"] = void 0;
    UsaSpending.prototype["recipientParentName"] = void 0;
    UsaSpending.prototype["awardDescription"] = void 0;
    UsaSpending.prototype["country"] = void 0;
    UsaSpending.prototype["actionDate"] = void 0;
    UsaSpending.prototype["totalValue"] = void 0;
    UsaSpending.prototype["performanceStartDate"] = void 0;
    UsaSpending.prototype["performanceEndDate"] = void 0;
    UsaSpending.prototype["awardingAgencyName"] = void 0;
    UsaSpending.prototype["awardingSubAgencyName"] = void 0;
    UsaSpending.prototype["awardingOfficeName"] = void 0;
    UsaSpending.prototype["performanceCountry"] = void 0;
    UsaSpending.prototype["performanceCity"] = void 0;
    UsaSpending.prototype["performanceCounty"] = void 0;
    UsaSpending.prototype["performanceState"] = void 0;
    UsaSpending.prototype["performanceZipCode"] = void 0;
    UsaSpending.prototype["performanceCongressionalDistrict"] = void 0;
    UsaSpending.prototype["naicsCode"] = void 0;
    UsaSpending.prototype["permalink"] = void 0;
    var _default = UsaSpending;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/UsaSpendingResult.js
var require_UsaSpendingResult = __commonJS({
  "../node_modules/finnhub/dist/model/UsaSpendingResult.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _UsaSpending = _interopRequireDefault(require_UsaSpending());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var UsaSpendingResult = function() {
      function UsaSpendingResult2() {
        _classCallCheck(this, UsaSpendingResult2);
        UsaSpendingResult2.initialize(this);
      }
      _createClass(UsaSpendingResult2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>UsaSpendingResult</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/UsaSpendingResult} obj Optional instance to populate.
         * @return {module:model/UsaSpendingResult} The populated <code>UsaSpendingResult</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new UsaSpendingResult2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_UsaSpending["default"]]);
            }
          }
          return obj;
        }
      }]);
      return UsaSpendingResult2;
    }();
    UsaSpendingResult.prototype["symbol"] = void 0;
    UsaSpendingResult.prototype["data"] = void 0;
    var _default = UsaSpendingResult;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/UsptoPatent.js
var require_UsptoPatent = __commonJS({
  "../node_modules/finnhub/dist/model/UsptoPatent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var UsptoPatent = function() {
      function UsptoPatent2() {
        _classCallCheck(this, UsptoPatent2);
        UsptoPatent2.initialize(this);
      }
      _createClass(UsptoPatent2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>UsptoPatent</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/UsptoPatent} obj Optional instance to populate.
         * @return {module:model/UsptoPatent} The populated <code>UsptoPatent</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new UsptoPatent2();
            if (data.hasOwnProperty("applicationNumber")) {
              obj["applicationNumber"] = _ApiClient["default"].convertToType(data["applicationNumber"], "String");
            }
            if (data.hasOwnProperty("companyFilingName")) {
              obj["companyFilingName"] = _ApiClient["default"].convertToType(data["companyFilingName"], ["String"]);
            }
            if (data.hasOwnProperty("filingDate")) {
              obj["filingDate"] = _ApiClient["default"].convertToType(data["filingDate"], "String");
            }
            if (data.hasOwnProperty("description")) {
              obj["description"] = _ApiClient["default"].convertToType(data["description"], "String");
            }
            if (data.hasOwnProperty("filingStatus")) {
              obj["filingStatus"] = _ApiClient["default"].convertToType(data["filingStatus"], "String");
            }
            if (data.hasOwnProperty("patentNumber")) {
              obj["patentNumber"] = _ApiClient["default"].convertToType(data["patentNumber"], "String");
            }
            if (data.hasOwnProperty("publicationDate")) {
              obj["publicationDate"] = _ApiClient["default"].convertToType(data["publicationDate"], "String");
            }
            if (data.hasOwnProperty("patentType")) {
              obj["patentType"] = _ApiClient["default"].convertToType(data["patentType"], "String");
            }
            if (data.hasOwnProperty("url")) {
              obj["url"] = _ApiClient["default"].convertToType(data["url"], "String");
            }
          }
          return obj;
        }
      }]);
      return UsptoPatent2;
    }();
    UsptoPatent.prototype["applicationNumber"] = void 0;
    UsptoPatent.prototype["companyFilingName"] = void 0;
    UsptoPatent.prototype["filingDate"] = void 0;
    UsptoPatent.prototype["description"] = void 0;
    UsptoPatent.prototype["filingStatus"] = void 0;
    UsptoPatent.prototype["patentNumber"] = void 0;
    UsptoPatent.prototype["publicationDate"] = void 0;
    UsptoPatent.prototype["patentType"] = void 0;
    UsptoPatent.prototype["url"] = void 0;
    var _default = UsptoPatent;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/UsptoPatentResult.js
var require_UsptoPatentResult = __commonJS({
  "../node_modules/finnhub/dist/model/UsptoPatentResult.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _UsptoPatent = _interopRequireDefault(require_UsptoPatent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var UsptoPatentResult = function() {
      function UsptoPatentResult2() {
        _classCallCheck(this, UsptoPatentResult2);
        UsptoPatentResult2.initialize(this);
      }
      _createClass(UsptoPatentResult2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>UsptoPatentResult</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/UsptoPatentResult} obj Optional instance to populate.
         * @return {module:model/UsptoPatentResult} The populated <code>UsptoPatentResult</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new UsptoPatentResult2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_UsptoPatent["default"]]);
            }
          }
          return obj;
        }
      }]);
      return UsptoPatentResult2;
    }();
    UsptoPatentResult.prototype["symbol"] = void 0;
    UsptoPatentResult.prototype["data"] = void 0;
    var _default = UsptoPatentResult;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/VisaApplication.js
var require_VisaApplication = __commonJS({
  "../node_modules/finnhub/dist/model/VisaApplication.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var VisaApplication = function() {
      function VisaApplication2() {
        _classCallCheck(this, VisaApplication2);
        VisaApplication2.initialize(this);
      }
      _createClass(VisaApplication2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>VisaApplication</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/VisaApplication} obj Optional instance to populate.
         * @return {module:model/VisaApplication} The populated <code>VisaApplication</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new VisaApplication2();
            if (data.hasOwnProperty("year")) {
              obj["year"] = _ApiClient["default"].convertToType(data["year"], "Number");
            }
            if (data.hasOwnProperty("quarter")) {
              obj["quarter"] = _ApiClient["default"].convertToType(data["quarter"], "Number");
            }
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("caseNumber")) {
              obj["caseNumber"] = _ApiClient["default"].convertToType(data["caseNumber"], "String");
            }
            if (data.hasOwnProperty("caseStatus")) {
              obj["caseStatus"] = _ApiClient["default"].convertToType(data["caseStatus"], "String");
            }
            if (data.hasOwnProperty("receivedDate")) {
              obj["receivedDate"] = _ApiClient["default"].convertToType(data["receivedDate"], "String");
            }
            if (data.hasOwnProperty("visaClass")) {
              obj["visaClass"] = _ApiClient["default"].convertToType(data["visaClass"], "String");
            }
            if (data.hasOwnProperty("jobTitle")) {
              obj["jobTitle"] = _ApiClient["default"].convertToType(data["jobTitle"], "String");
            }
            if (data.hasOwnProperty("socCode")) {
              obj["socCode"] = _ApiClient["default"].convertToType(data["socCode"], "String");
            }
            if (data.hasOwnProperty("fullTimePosition")) {
              obj["fullTimePosition"] = _ApiClient["default"].convertToType(data["fullTimePosition"], "String");
            }
            if (data.hasOwnProperty("beginDate")) {
              obj["beginDate"] = _ApiClient["default"].convertToType(data["beginDate"], "String");
            }
            if (data.hasOwnProperty("endDate")) {
              obj["endDate"] = _ApiClient["default"].convertToType(data["endDate"], "String");
            }
            if (data.hasOwnProperty("employerName")) {
              obj["employerName"] = _ApiClient["default"].convertToType(data["employerName"], "String");
            }
            if (data.hasOwnProperty("worksiteAddress")) {
              obj["worksiteAddress"] = _ApiClient["default"].convertToType(data["worksiteAddress"], "String");
            }
            if (data.hasOwnProperty("worksiteCity")) {
              obj["worksiteCity"] = _ApiClient["default"].convertToType(data["worksiteCity"], "String");
            }
            if (data.hasOwnProperty("worksiteCounty")) {
              obj["worksiteCounty"] = _ApiClient["default"].convertToType(data["worksiteCounty"], "String");
            }
            if (data.hasOwnProperty("worksiteState")) {
              obj["worksiteState"] = _ApiClient["default"].convertToType(data["worksiteState"], "String");
            }
            if (data.hasOwnProperty("worksitePostalCode")) {
              obj["worksitePostalCode"] = _ApiClient["default"].convertToType(data["worksitePostalCode"], "String");
            }
            if (data.hasOwnProperty("wageRangeFrom")) {
              obj["wageRangeFrom"] = _ApiClient["default"].convertToType(data["wageRangeFrom"], "Number");
            }
            if (data.hasOwnProperty("wageRangeTo")) {
              obj["wageRangeTo"] = _ApiClient["default"].convertToType(data["wageRangeTo"], "Number");
            }
            if (data.hasOwnProperty("wageUnitOfPay")) {
              obj["wageUnitOfPay"] = _ApiClient["default"].convertToType(data["wageUnitOfPay"], "String");
            }
            if (data.hasOwnProperty("wageLevel")) {
              obj["wageLevel"] = _ApiClient["default"].convertToType(data["wageLevel"], "String");
            }
            if (data.hasOwnProperty("h1bDependent")) {
              obj["h1bDependent"] = _ApiClient["default"].convertToType(data["h1bDependent"], "String");
            }
          }
          return obj;
        }
      }]);
      return VisaApplication2;
    }();
    VisaApplication.prototype["year"] = void 0;
    VisaApplication.prototype["quarter"] = void 0;
    VisaApplication.prototype["symbol"] = void 0;
    VisaApplication.prototype["caseNumber"] = void 0;
    VisaApplication.prototype["caseStatus"] = void 0;
    VisaApplication.prototype["receivedDate"] = void 0;
    VisaApplication.prototype["visaClass"] = void 0;
    VisaApplication.prototype["jobTitle"] = void 0;
    VisaApplication.prototype["socCode"] = void 0;
    VisaApplication.prototype["fullTimePosition"] = void 0;
    VisaApplication.prototype["beginDate"] = void 0;
    VisaApplication.prototype["endDate"] = void 0;
    VisaApplication.prototype["employerName"] = void 0;
    VisaApplication.prototype["worksiteAddress"] = void 0;
    VisaApplication.prototype["worksiteCity"] = void 0;
    VisaApplication.prototype["worksiteCounty"] = void 0;
    VisaApplication.prototype["worksiteState"] = void 0;
    VisaApplication.prototype["worksitePostalCode"] = void 0;
    VisaApplication.prototype["wageRangeFrom"] = void 0;
    VisaApplication.prototype["wageRangeTo"] = void 0;
    VisaApplication.prototype["wageUnitOfPay"] = void 0;
    VisaApplication.prototype["wageLevel"] = void 0;
    VisaApplication.prototype["h1bDependent"] = void 0;
    var _default = VisaApplication;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/model/VisaApplicationResult.js
var require_VisaApplicationResult = __commonJS({
  "../node_modules/finnhub/dist/model/VisaApplicationResult.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _VisaApplication = _interopRequireDefault(require_VisaApplication());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var VisaApplicationResult = function() {
      function VisaApplicationResult2() {
        _classCallCheck(this, VisaApplicationResult2);
        VisaApplicationResult2.initialize(this);
      }
      _createClass(VisaApplicationResult2, null, [{
        key: "initialize",
        value: function initialize(obj) {
        }
        /**
         * Constructs a <code>VisaApplicationResult</code> from a plain JavaScript object, optionally creating a new instance.
         * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
         * @param {Object} data The plain JavaScript object bearing properties of interest.
         * @param {module:model/VisaApplicationResult} obj Optional instance to populate.
         * @return {module:model/VisaApplicationResult} The populated <code>VisaApplicationResult</code> instance.
         */
      }, {
        key: "constructFromObject",
        value: function constructFromObject(data, obj) {
          if (data) {
            obj = obj || new VisaApplicationResult2();
            if (data.hasOwnProperty("symbol")) {
              obj["symbol"] = _ApiClient["default"].convertToType(data["symbol"], "String");
            }
            if (data.hasOwnProperty("data")) {
              obj["data"] = _ApiClient["default"].convertToType(data["data"], [_VisaApplication["default"]]);
            }
          }
          return obj;
        }
      }]);
      return VisaApplicationResult2;
    }();
    VisaApplicationResult.prototype["symbol"] = void 0;
    VisaApplicationResult.prototype["data"] = void 0;
    var _default = VisaApplicationResult;
    exports["default"] = _default;
  }
});

// ../node_modules/finnhub/dist/api/DefaultApi.js
var require_DefaultApi = __commonJS({
  "../node_modules/finnhub/dist/api/DefaultApi.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _AggregateIndicators = _interopRequireDefault(require_AggregateIndicators());
    var _BasicFinancials = _interopRequireDefault(require_BasicFinancials());
    var _BondCandles = _interopRequireDefault(require_BondCandles());
    var _BondProfile = _interopRequireDefault(require_BondProfile());
    var _BondTickData = _interopRequireDefault(require_BondTickData());
    var _BondYieldCurve = _interopRequireDefault(require_BondYieldCurve());
    var _CompanyESG = _interopRequireDefault(require_CompanyESG());
    var _CompanyEarningsQualityScore = _interopRequireDefault(require_CompanyEarningsQualityScore());
    var _CompanyExecutive = _interopRequireDefault(require_CompanyExecutive());
    var _CompanyNews = _interopRequireDefault(require_CompanyNews());
    var _CompanyProfile = _interopRequireDefault(require_CompanyProfile());
    var _CompanyProfile2 = _interopRequireDefault(require_CompanyProfile2());
    var _CongressionalTrading = _interopRequireDefault(require_CongressionalTrading());
    var _CountryMetadata = _interopRequireDefault(require_CountryMetadata());
    var _CovidInfo = _interopRequireDefault(require_CovidInfo());
    var _CryptoCandles = _interopRequireDefault(require_CryptoCandles());
    var _CryptoProfile = _interopRequireDefault(require_CryptoProfile());
    var _CryptoSymbol = _interopRequireDefault(require_CryptoSymbol());
    var _Dividends = _interopRequireDefault(require_Dividends());
    var _Dividends2 = _interopRequireDefault(require_Dividends2());
    var _ETFsCountryExposure = _interopRequireDefault(require_ETFsCountryExposure());
    var _ETFsHoldings = _interopRequireDefault(require_ETFsHoldings());
    var _ETFsProfile = _interopRequireDefault(require_ETFsProfile());
    var _ETFsSectorExposure = _interopRequireDefault(require_ETFsSectorExposure());
    var _EarningResult = _interopRequireDefault(require_EarningResult());
    var _EarningsCalendar = _interopRequireDefault(require_EarningsCalendar());
    var _EarningsCallTranscripts = _interopRequireDefault(require_EarningsCallTranscripts());
    var _EarningsCallTranscriptsList = _interopRequireDefault(require_EarningsCallTranscriptsList());
    var _EarningsEstimates = _interopRequireDefault(require_EarningsEstimates());
    var _EbitEstimates = _interopRequireDefault(require_EbitEstimates());
    var _EbitdaEstimates = _interopRequireDefault(require_EbitdaEstimates());
    var _EconomicCalendar = _interopRequireDefault(require_EconomicCalendar());
    var _EconomicCode = _interopRequireDefault(require_EconomicCode());
    var _EconomicData = _interopRequireDefault(require_EconomicData());
    var _FDAComitteeMeeting = _interopRequireDefault(require_FDAComitteeMeeting());
    var _Filing = _interopRequireDefault(require_Filing());
    var _FinancialStatements = _interopRequireDefault(require_FinancialStatements());
    var _FinancialsAsReported = _interopRequireDefault(require_FinancialsAsReported());
    var _ForexCandles = _interopRequireDefault(require_ForexCandles());
    var _ForexSymbol = _interopRequireDefault(require_ForexSymbol());
    var _Forexrates = _interopRequireDefault(require_Forexrates());
    var _FundOwnership = _interopRequireDefault(require_FundOwnership());
    var _HistoricalNBBO = _interopRequireDefault(require_HistoricalNBBO());
    var _IPOCalendar = _interopRequireDefault(require_IPOCalendar());
    var _IndicesConstituents = _interopRequireDefault(require_IndicesConstituents());
    var _IndicesHistoricalConstituents = _interopRequireDefault(require_IndicesHistoricalConstituents());
    var _InsiderSentiments = _interopRequireDefault(require_InsiderSentiments());
    var _InsiderTransactions = _interopRequireDefault(require_InsiderTransactions());
    var _InstitutionalOwnership = _interopRequireDefault(require_InstitutionalOwnership());
    var _InstitutionalPortfolio = _interopRequireDefault(require_InstitutionalPortfolio());
    var _InstitutionalProfile = _interopRequireDefault(require_InstitutionalProfile());
    var _InternationalFiling = _interopRequireDefault(require_InternationalFiling());
    var _InvestmentThemes = _interopRequireDefault(require_InvestmentThemes());
    var _IsinChange = _interopRequireDefault(require_IsinChange());
    var _LastBidAsk = _interopRequireDefault(require_LastBidAsk());
    var _LobbyingResult = _interopRequireDefault(require_LobbyingResult());
    var _MarketHoliday = _interopRequireDefault(require_MarketHoliday());
    var _MarketNews = _interopRequireDefault(require_MarketNews());
    var _MarketStatus = _interopRequireDefault(require_MarketStatus());
    var _MutualFundCountryExposure = _interopRequireDefault(require_MutualFundCountryExposure());
    var _MutualFundEet = _interopRequireDefault(require_MutualFundEet());
    var _MutualFundEetPai = _interopRequireDefault(require_MutualFundEetPai());
    var _MutualFundHoldings = _interopRequireDefault(require_MutualFundHoldings());
    var _MutualFundProfile = _interopRequireDefault(require_MutualFundProfile());
    var _MutualFundSectorExposure = _interopRequireDefault(require_MutualFundSectorExposure());
    var _NewsSentiment = _interopRequireDefault(require_NewsSentiment());
    var _Ownership = _interopRequireDefault(require_Ownership());
    var _PatternRecognition = _interopRequireDefault(require_PatternRecognition());
    var _PressRelease = _interopRequireDefault(require_PressRelease());
    var _PriceMetrics = _interopRequireDefault(require_PriceMetrics());
    var _PriceTarget = _interopRequireDefault(require_PriceTarget());
    var _Quote = _interopRequireDefault(require_Quote());
    var _RecommendationTrend = _interopRequireDefault(require_RecommendationTrend());
    var _RevenueBreakdown = _interopRequireDefault(require_RevenueBreakdown());
    var _RevenueEstimates = _interopRequireDefault(require_RevenueEstimates());
    var _SECSentimentAnalysis = _interopRequireDefault(require_SECSentimentAnalysis());
    var _SectorMetric = _interopRequireDefault(require_SectorMetric());
    var _SimilarityIndex = _interopRequireDefault(require_SimilarityIndex());
    var _SocialSentiment = _interopRequireDefault(require_SocialSentiment());
    var _Split = _interopRequireDefault(require_Split());
    var _StockCandles = _interopRequireDefault(require_StockCandles());
    var _StockSymbol = _interopRequireDefault(require_StockSymbol());
    var _SupplyChainRelationships = _interopRequireDefault(require_SupplyChainRelationships());
    var _SupportResistance = _interopRequireDefault(require_SupportResistance());
    var _SymbolChange = _interopRequireDefault(require_SymbolChange());
    var _SymbolLookup = _interopRequireDefault(require_SymbolLookup());
    var _TickData = _interopRequireDefault(require_TickData());
    var _UpgradeDowngrade = _interopRequireDefault(require_UpgradeDowngrade());
    var _UsaSpendingResult = _interopRequireDefault(require_UsaSpendingResult());
    var _UsptoPatentResult = _interopRequireDefault(require_UsptoPatentResult());
    var _VisaApplicationResult = _interopRequireDefault(require_VisaApplicationResult());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var DefaultApi = function() {
      function DefaultApi2(apiClient) {
        _classCallCheck(this, DefaultApi2);
        this.apiClient = apiClient || _ApiClient["default"].instance;
      }
      _createClass(DefaultApi2, [{
        key: "aggregateIndicator",
        value: function aggregateIndicator(symbol, resolution, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling aggregateIndicator");
          }
          if (resolution === void 0 || resolution === null) {
            throw new Error("Missing the required parameter 'resolution' when calling aggregateIndicator");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "resolution": resolution
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _AggregateIndicators["default"];
          return this.apiClient.callApi("/scan/technical-indicator", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the bondPrice operation.
         * @callback module:api/DefaultApi~bondPriceCallback
         * @param {String} error Error message, if any.
         * @param {module:model/BondCandles} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Bond price data
         * <p>Get bond's price data. The following datasets are supported:</p><table class=\"table table-hover\">   <thead>     <tr>       <th>Exchange</th>       <th>Segment</th>       <th>Delay</th>     </tr>   </thead>   <tbody>   <tr>       <td class=\"text-blue\">US Government Bonds</th>       <td>Government Bonds</td>       <td>End-of-day</td>     </tr>     <tr>       <td class=\"text-blue\">FINRA Trace</th>       <td>BTDS: US Corporate Bonds</td>       <td>Delayed 4h</td>     </tr>     <tr>       <td class=\"text-blue\">FINRA Trace</th>       <td>144A Bonds</td>       <td>Delayed 4h</td>     </tr>   </tbody> </table>
         * @param {String} isin ISIN.
         * @param {Number} from UNIX timestamp. Interval initial value.
         * @param {Number} to UNIX timestamp. Interval end value.
         * @param {module:api/DefaultApi~bondPriceCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/BondCandles}
         */
      }, {
        key: "bondPrice",
        value: function bondPrice(isin, from, to, callback) {
          var postBody = null;
          if (isin === void 0 || isin === null) {
            throw new Error("Missing the required parameter 'isin' when calling bondPrice");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling bondPrice");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling bondPrice");
          }
          var pathParams = {};
          var queryParams = {
            "isin": isin,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _BondCandles["default"];
          return this.apiClient.callApi("/bond/price", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the bondProfile operation.
         * @callback module:api/DefaultApi~bondProfileCallback
         * @param {String} error Error message, if any.
         * @param {module:model/BondProfile} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Bond Profile
         * Get general information of a bond. You can query by FIGI, ISIN or CUSIP. A list of supported bonds can be found <a href=\"/api/v1/bond/list?token=\" target=\"_blank\">here</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.isin ISIN
         * @param {String} opts.cusip CUSIP
         * @param {String} opts.figi FIGI
         * @param {module:api/DefaultApi~bondProfileCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/BondProfile}
         */
      }, {
        key: "bondProfile",
        value: function bondProfile(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "isin": opts["isin"],
            "cusip": opts["cusip"],
            "figi": opts["figi"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _BondProfile["default"];
          return this.apiClient.callApi("/bond/profile", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the bondTick operation.
         * @callback module:api/DefaultApi~bondTickCallback
         * @param {String} error Error message, if any.
         * @param {module:model/BondTickData} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Bond Tick Data
         * <p>Get trade-level data for bonds. The following datasets are supported:</p><table class=\"table table-hover\">   <thead>     <tr>       <th>Exchange</th>       <th>Segment</th>       <th>Delay</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"text-blue\">FINRA Trace</th>       <td>BTDS: US Corporate Bonds</td>       <td>Delayed 4h</td>     </tr>     <tr>       <td class=\"text-blue\">FINRA Trace</th>       <td>144A Bonds</td>       <td>Delayed 4h</td>     </tr>   </tbody> </table>
         * @param {String} isin ISIN.
         * @param {Date} date Date: 2020-04-02.
         * @param {Number} limit Limit number of ticks returned. Maximum value: <code>25000</code>
         * @param {Number} skip Number of ticks to skip. Use this parameter to loop through the entire data.
         * @param {String} exchange Currently support the following values: <code>trace</code>.
         * @param {module:api/DefaultApi~bondTickCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/BondTickData}
         */
      }, {
        key: "bondTick",
        value: function bondTick(isin, date, limit, skip, exchange, callback) {
          var postBody = null;
          if (isin === void 0 || isin === null) {
            throw new Error("Missing the required parameter 'isin' when calling bondTick");
          }
          if (date === void 0 || date === null) {
            throw new Error("Missing the required parameter 'date' when calling bondTick");
          }
          if (limit === void 0 || limit === null) {
            throw new Error("Missing the required parameter 'limit' when calling bondTick");
          }
          if (skip === void 0 || skip === null) {
            throw new Error("Missing the required parameter 'skip' when calling bondTick");
          }
          if (exchange === void 0 || exchange === null) {
            throw new Error("Missing the required parameter 'exchange' when calling bondTick");
          }
          var pathParams = {};
          var queryParams = {
            "isin": isin,
            "date": date,
            "limit": limit,
            "skip": skip,
            "exchange": exchange
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _BondTickData["default"];
          return this.apiClient.callApi("/bond/tick", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the bondYieldCurve operation.
         * @callback module:api/DefaultApi~bondYieldCurveCallback
         * @param {String} error Error message, if any.
         * @param {module:model/BondYieldCurve} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Bond Yield Curve
         * Get yield curve data for Treasury bonds.
         * @param {String} code Bond's code. You can find the list of supported code <a href=\"https://docs.google.com/spreadsheets/d/1iA-lM0Kht7lsQZ7Uu_s6r2i1BbQNUNO9eGkO5-zglHg/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\">here</a>.
         * @param {module:api/DefaultApi~bondYieldCurveCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/BondYieldCurve}
         */
      }, {
        key: "bondYieldCurve",
        value: function bondYieldCurve(code, callback) {
          var postBody = null;
          if (code === void 0 || code === null) {
            throw new Error("Missing the required parameter 'code' when calling bondYieldCurve");
          }
          var pathParams = {};
          var queryParams = {
            "code": code
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _BondYieldCurve["default"];
          return this.apiClient.callApi("/bond/yield-curve", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyBasicFinancials operation.
         * @callback module:api/DefaultApi~companyBasicFinancialsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/BasicFinancials} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Basic Financials
         * Get company basic financials such as margin, P/E ratio, 52-week high/low etc.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {String} metric Metric type. Can be 1 of the following values <code>all</code>
         * @param {module:api/DefaultApi~companyBasicFinancialsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/BasicFinancials}
         */
      }, {
        key: "companyBasicFinancials",
        value: function companyBasicFinancials(symbol, metric, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyBasicFinancials");
          }
          if (metric === void 0 || metric === null) {
            throw new Error("Missing the required parameter 'metric' when calling companyBasicFinancials");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "metric": metric
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _BasicFinancials["default"];
          return this.apiClient.callApi("/stock/metric", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyEarnings operation.
         * @callback module:api/DefaultApi~companyEarningsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/EarningResult>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Earnings Surprises
         * Get company historical quarterly earnings surprise going back to 2000.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {Number} opts.limit Limit number of period returned. Leave blank to get the full history.
         * @param {module:api/DefaultApi~companyEarningsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/EarningResult>}
         */
      }, {
        key: "companyEarnings",
        value: function companyEarnings(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyEarnings");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "limit": opts["limit"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_EarningResult["default"]];
          return this.apiClient.callApi("/stock/earnings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyEarningsQualityScore operation.
         * @callback module:api/DefaultApi~companyEarningsQualityScoreCallback
         * @param {String} error Error message, if any.
         * @param {module:model/CompanyEarningsQualityScore} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Company Earnings Quality Score
         * <p>This endpoint provides Earnings Quality Score for global companies.</p><p> Earnings quality refers to the extent to which current earnings predict future earnings. \"High-quality\" earnings are expected to persist, while \"low-quality\" earnings do not. A higher score means a higher earnings quality</p><p>Finnhub uses a proprietary model which takes into consideration 4 criteria:</p> <ul style=\"list-style-type: unset; margin-left: 30px;\"><li>Profitability</li><li>Growth</li><li>Cash Generation & Capital Allocation</li><li>Leverage</li></ul><br/><p>We then compare the metrics of each company in each category against its peers in the same industry to gauge how quality its earnings is.</p>
         * @param {String} symbol Symbol.
         * @param {String} freq Frequency. Currently support <code>annual</code> and <code>quarterly</code>
         * @param {module:api/DefaultApi~companyEarningsQualityScoreCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CompanyEarningsQualityScore}
         */
      }, {
        key: "companyEarningsQualityScore",
        value: function companyEarningsQualityScore(symbol, freq, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyEarningsQualityScore");
          }
          if (freq === void 0 || freq === null) {
            throw new Error("Missing the required parameter 'freq' when calling companyEarningsQualityScore");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "freq": freq
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CompanyEarningsQualityScore["default"];
          return this.apiClient.callApi("/stock/earnings-quality-score", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyEbitEstimates operation.
         * @callback module:api/DefaultApi~companyEbitEstimatesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EbitEstimates} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * EBIT Estimates
         * Get company's ebit estimates.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {String} opts.freq Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>
         * @param {module:api/DefaultApi~companyEbitEstimatesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EbitEstimates}
         */
      }, {
        key: "companyEbitEstimates",
        value: function companyEbitEstimates(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyEbitEstimates");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "freq": opts["freq"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EbitEstimates["default"];
          return this.apiClient.callApi("/stock/ebit-estimate", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyEbitdaEstimates operation.
         * @callback module:api/DefaultApi~companyEbitdaEstimatesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EbitdaEstimates} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * EBITDA Estimates
         * Get company's ebitda estimates.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {String} opts.freq Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>
         * @param {module:api/DefaultApi~companyEbitdaEstimatesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EbitdaEstimates}
         */
      }, {
        key: "companyEbitdaEstimates",
        value: function companyEbitdaEstimates(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyEbitdaEstimates");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "freq": opts["freq"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EbitdaEstimates["default"];
          return this.apiClient.callApi("/stock/ebitda-estimate", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyEpsEstimates operation.
         * @callback module:api/DefaultApi~companyEpsEstimatesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EarningsEstimates} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Earnings Estimates
         * Get company's EPS estimates.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {String} opts.freq Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>
         * @param {module:api/DefaultApi~companyEpsEstimatesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EarningsEstimates}
         */
      }, {
        key: "companyEpsEstimates",
        value: function companyEpsEstimates(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyEpsEstimates");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "freq": opts["freq"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EarningsEstimates["default"];
          return this.apiClient.callApi("/stock/eps-estimate", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyEsgScore operation.
         * @callback module:api/DefaultApi~companyEsgScoreCallback
         * @param {String} error Error message, if any.
         * @param {module:model/CompanyESG} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Company ESG Scores
         * <p>This endpoint provides ESG scores and important indicators for 7000+ global companies. The data is collected through company's public ESG disclosure and public sources.</p><p>Our ESG scoring models takes into account more than 150 different inputs to calculate the level of ESG risks and how well a company is managing them. A higher score means lower ESG risk or better ESG management. ESG scores are in the the range of 0-100. Some key indicators might contain letter-grade score from C- to A+ with C- is the lowest score and A+ is the highest score.</p><p>Historical ESG data is available for Enterprise users. <a href=\"mailto:support@finnhub.io\">Contact us</a> to learn more.</p>
         * @param {String} symbol Symbol.
         * @param {module:api/DefaultApi~companyEsgScoreCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CompanyESG}
         */
      }, {
        key: "companyEsgScore",
        value: function companyEsgScore(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyEsgScore");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CompanyESG["default"];
          return this.apiClient.callApi("/stock/esg", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyExecutive operation.
         * @callback module:api/DefaultApi~companyExecutiveCallback
         * @param {String} error Error message, if any.
         * @param {module:model/CompanyExecutive} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Company Executive
         * Get a list of company's executives and members of the Board.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {module:api/DefaultApi~companyExecutiveCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CompanyExecutive}
         */
      }, {
        key: "companyExecutive",
        value: function companyExecutive(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyExecutive");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CompanyExecutive["default"];
          return this.apiClient.callApi("/stock/executive", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyNews operation.
         * @callback module:api/DefaultApi~companyNewsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/CompanyNews>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Company News
         * List latest company news by symbol. This endpoint is only available for North American companies.
         * @param {String} symbol Company symbol.
         * @param {Date} from From date <code>YYYY-MM-DD</code>.
         * @param {Date} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~companyNewsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/CompanyNews>}
         */
      }, {
        key: "companyNews",
        value: function companyNews(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyNews");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling companyNews");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling companyNews");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_CompanyNews["default"]];
          return this.apiClient.callApi("/company-news", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyPeers operation.
         * @callback module:api/DefaultApi~companyPeersCallback
         * @param {String} error Error message, if any.
         * @param {Array.<String>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Peers
         * Get company peers. Return a list of peers operating in the same country and sector/industry.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {String} opts.grouping Specify the grouping criteria for choosing peers.Supporter values: <code>sector</code>, <code>industry</code>, <code>subIndustry</code>. Default to <code>subIndustry</code>.
         * @param {module:api/DefaultApi~companyPeersCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<String>}
         */
      }, {
        key: "companyPeers",
        value: function companyPeers(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyPeers");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "grouping": opts["grouping"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = ["String"];
          return this.apiClient.callApi("/stock/peers", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyProfile operation.
         * @callback module:api/DefaultApi~companyProfileCallback
         * @param {String} error Error message, if any.
         * @param {module:model/CompanyProfile} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Company Profile
         * Get general information of a company. You can query by symbol, ISIN or CUSIP
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol of the company: AAPL e.g.
         * @param {String} opts.isin ISIN
         * @param {String} opts.cusip CUSIP
         * @param {module:api/DefaultApi~companyProfileCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CompanyProfile}
         */
      }, {
        key: "companyProfile",
        value: function companyProfile(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"],
            "cusip": opts["cusip"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CompanyProfile["default"];
          return this.apiClient.callApi("/stock/profile", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyProfile2 operation.
         * @callback module:api/DefaultApi~companyProfile2Callback
         * @param {String} error Error message, if any.
         * @param {module:model/CompanyProfile2} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Company Profile 2
         * Get general information of a company. You can query by symbol, ISIN or CUSIP. This is the free version of <a href=\"#company-profile\">Company Profile</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol of the company: AAPL e.g.
         * @param {String} opts.isin ISIN
         * @param {String} opts.cusip CUSIP
         * @param {module:api/DefaultApi~companyProfile2Callback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CompanyProfile2}
         */
      }, {
        key: "companyProfile2",
        value: function companyProfile2(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"],
            "cusip": opts["cusip"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CompanyProfile2["default"];
          return this.apiClient.callApi("/stock/profile2", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the companyRevenueEstimates operation.
         * @callback module:api/DefaultApi~companyRevenueEstimatesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/RevenueEstimates} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Revenue Estimates
         * Get company's revenue estimates.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {String} opts.freq Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>
         * @param {module:api/DefaultApi~companyRevenueEstimatesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/RevenueEstimates}
         */
      }, {
        key: "companyRevenueEstimates",
        value: function companyRevenueEstimates(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling companyRevenueEstimates");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "freq": opts["freq"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _RevenueEstimates["default"];
          return this.apiClient.callApi("/stock/revenue-estimate", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the congressionalTrading operation.
         * @callback module:api/DefaultApi~congressionalTradingCallback
         * @param {String} error Error message, if any.
         * @param {module:model/CongressionalTrading} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Congressional Trading
         * Get stock trades data disclosed by members of congress.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Date} from From date <code>YYYY-MM-DD</code>.
         * @param {Date} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~congressionalTradingCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CongressionalTrading}
         */
      }, {
        key: "congressionalTrading",
        value: function congressionalTrading(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling congressionalTrading");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling congressionalTrading");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling congressionalTrading");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CongressionalTrading["default"];
          return this.apiClient.callApi("/stock/congressional-trading", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the country operation.
         * @callback module:api/DefaultApi~countryCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/CountryMetadata>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Country Metadata
         * List all countries and metadata.
         * @param {module:api/DefaultApi~countryCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/CountryMetadata>}
         */
      }, {
        key: "country",
        value: function country(callback) {
          var postBody = null;
          var pathParams = {};
          var queryParams = {};
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_CountryMetadata["default"]];
          return this.apiClient.callApi("/country", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the covid19 operation.
         * @callback module:api/DefaultApi~covid19Callback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/CovidInfo>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * COVID-19
         * Get real-time updates on the number of COVID-19 (Corona virus) cases in the US with a state-by-state breakdown. Data is sourced from CDC and reputable sources. You can also access this API <a href=\"https://rapidapi.com/Finnhub/api/finnhub-real-time-covid-19\" target=\"_blank\" rel=\"nofollow\">here</a>
         * @param {module:api/DefaultApi~covid19Callback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/CovidInfo>}
         */
      }, {
        key: "covid19",
        value: function covid19(callback) {
          var postBody = null;
          var pathParams = {};
          var queryParams = {};
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_CovidInfo["default"]];
          return this.apiClient.callApi("/covid19/us", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the cryptoCandles operation.
         * @callback module:api/DefaultApi~cryptoCandlesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/CryptoCandles} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Crypto Candles
         * Get candlestick data for crypto symbols.
         * @param {String} symbol Use symbol returned in <code>/crypto/symbol</code> endpoint for this field.
         * @param {String} resolution Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.
         * @param {Number} from UNIX timestamp. Interval initial value.
         * @param {Number} to UNIX timestamp. Interval end value.
         * @param {module:api/DefaultApi~cryptoCandlesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CryptoCandles}
         */
      }, {
        key: "cryptoCandles",
        value: function cryptoCandles(symbol, resolution, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling cryptoCandles");
          }
          if (resolution === void 0 || resolution === null) {
            throw new Error("Missing the required parameter 'resolution' when calling cryptoCandles");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling cryptoCandles");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling cryptoCandles");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "resolution": resolution,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CryptoCandles["default"];
          return this.apiClient.callApi("/crypto/candle", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the cryptoExchanges operation.
         * @callback module:api/DefaultApi~cryptoExchangesCallback
         * @param {String} error Error message, if any.
         * @param {Array.<String>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Crypto Exchanges
         * List supported crypto exchanges
         * @param {module:api/DefaultApi~cryptoExchangesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<String>}
         */
      }, {
        key: "cryptoExchanges",
        value: function cryptoExchanges(callback) {
          var postBody = null;
          var pathParams = {};
          var queryParams = {};
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = ["String"];
          return this.apiClient.callApi("/crypto/exchange", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the cryptoProfile operation.
         * @callback module:api/DefaultApi~cryptoProfileCallback
         * @param {String} error Error message, if any.
         * @param {module:model/CryptoProfile} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Crypto Profile
         * Get crypto's profile.
         * @param {String} symbol Crypto symbol such as BTC or ETH.
         * @param {module:api/DefaultApi~cryptoProfileCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/CryptoProfile}
         */
      }, {
        key: "cryptoProfile",
        value: function cryptoProfile(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling cryptoProfile");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _CryptoProfile["default"];
          return this.apiClient.callApi("/crypto/profile", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the cryptoSymbols operation.
         * @callback module:api/DefaultApi~cryptoSymbolsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/CryptoSymbol>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Crypto Symbol
         * List supported crypto symbols by exchange
         * @param {String} exchange Exchange you want to get the list of symbols from.
         * @param {module:api/DefaultApi~cryptoSymbolsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/CryptoSymbol>}
         */
      }, {
        key: "cryptoSymbols",
        value: function cryptoSymbols(exchange, callback) {
          var postBody = null;
          if (exchange === void 0 || exchange === null) {
            throw new Error("Missing the required parameter 'exchange' when calling cryptoSymbols");
          }
          var pathParams = {};
          var queryParams = {
            "exchange": exchange
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_CryptoSymbol["default"]];
          return this.apiClient.callApi("/crypto/symbol", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the earningsCalendar operation.
         * @callback module:api/DefaultApi~earningsCalendarCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EarningsCalendar} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Earnings Calendar
         * Get historical and coming earnings release. EPS and Revenue in this endpoint are non-GAAP, which means they are adjusted to exclude some one-time or unusual items. This is the same data investors usually react to and talked about on the media. Estimates are sourced from both sell-side and buy-side analysts.
         * @param {Object} opts Optional parameters
         * @param {Date} opts.from From date: 2020-03-15.
         * @param {Date} opts.to To date: 2020-03-16.
         * @param {String} opts.symbol Filter by symbol: AAPL.
         * @param {Boolean} opts.international Set to <code>true</code> to include international markets. Default value is <code>false</code>
         * @param {module:api/DefaultApi~earningsCalendarCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EarningsCalendar}
         */
      }, {
        key: "earningsCalendar",
        value: function earningsCalendar(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "from": opts["from"],
            "to": opts["to"],
            "symbol": opts["symbol"],
            "international": opts["international"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EarningsCalendar["default"];
          return this.apiClient.callApi("/calendar/earnings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the economicCalendar operation.
         * @callback module:api/DefaultApi~economicCalendarCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EconomicCalendar} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Economic Calendar
         * <p>Get recent and upcoming economic releases.</p><p>Historical events and surprises are available for Enterprise clients.</p>
         * @param {Object} opts Optional parameters
         * @param {Date} opts.from From date <code>YYYY-MM-DD</code>.
         * @param {Date} opts.to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~economicCalendarCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EconomicCalendar}
         */
      }, {
        key: "economicCalendar",
        value: function economicCalendar(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "from": opts["from"],
            "to": opts["to"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EconomicCalendar["default"];
          return this.apiClient.callApi("/calendar/economic", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the economicCode operation.
         * @callback module:api/DefaultApi~economicCodeCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/EconomicCode>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Economic Code
         * List codes of supported economic data.
         * @param {module:api/DefaultApi~economicCodeCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/EconomicCode>}
         */
      }, {
        key: "economicCode",
        value: function economicCode(callback) {
          var postBody = null;
          var pathParams = {};
          var queryParams = {};
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_EconomicCode["default"]];
          return this.apiClient.callApi("/economic/code", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the economicData operation.
         * @callback module:api/DefaultApi~economicDataCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EconomicData} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Economic Data
         * Get economic data.
         * @param {String} code Economic code.
         * @param {module:api/DefaultApi~economicDataCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EconomicData}
         */
      }, {
        key: "economicData",
        value: function economicData(code, callback) {
          var postBody = null;
          if (code === void 0 || code === null) {
            throw new Error("Missing the required parameter 'code' when calling economicData");
          }
          var pathParams = {};
          var queryParams = {
            "code": code
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EconomicData["default"];
          return this.apiClient.callApi("/economic", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the etfsCountryExposure operation.
         * @callback module:api/DefaultApi~etfsCountryExposureCallback
         * @param {String} error Error message, if any.
         * @param {module:model/ETFsCountryExposure} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * ETFs Country Exposure
         * Get ETF country exposure data.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol ETF symbol.
         * @param {String} opts.isin ETF isin.
         * @param {module:api/DefaultApi~etfsCountryExposureCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/ETFsCountryExposure}
         */
      }, {
        key: "etfsCountryExposure",
        value: function etfsCountryExposure(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _ETFsCountryExposure["default"];
          return this.apiClient.callApi("/etf/country", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the etfsHoldings operation.
         * @callback module:api/DefaultApi~etfsHoldingsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/ETFsHoldings} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * ETFs Holdings
         * Get full ETF holdings/constituents. This endpoint has global coverage. Widget only shows top 10 holdings. A list of supported ETFs can be found <a href=\"/api/v1/etf/list?token=\" target=\"_blank\">here</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol ETF symbol.
         * @param {String} opts.isin ETF isin.
         * @param {Number} opts.skip Skip the first n results. You can use this parameter to query historical constituents data. The latest result is returned if skip=0 or not set.
         * @param {String} opts.date Query holdings by date. You can use either this param or <code>skip</code> param, not both.
         * @param {module:api/DefaultApi~etfsHoldingsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/ETFsHoldings}
         */
      }, {
        key: "etfsHoldings",
        value: function etfsHoldings(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"],
            "skip": opts["skip"],
            "date": opts["date"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _ETFsHoldings["default"];
          return this.apiClient.callApi("/etf/holdings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the etfsProfile operation.
         * @callback module:api/DefaultApi~etfsProfileCallback
         * @param {String} error Error message, if any.
         * @param {module:model/ETFsProfile} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * ETFs Profile
         * Get ETF profile information. This endpoint has global coverage. A list of supported ETFs can be found <a href=\"/api/v1/etf/list?token=\" target=\"_blank\">here</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol ETF symbol.
         * @param {String} opts.isin ETF isin.
         * @param {module:api/DefaultApi~etfsProfileCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/ETFsProfile}
         */
      }, {
        key: "etfsProfile",
        value: function etfsProfile(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _ETFsProfile["default"];
          return this.apiClient.callApi("/etf/profile", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the etfsSectorExposure operation.
         * @callback module:api/DefaultApi~etfsSectorExposureCallback
         * @param {String} error Error message, if any.
         * @param {module:model/ETFsSectorExposure} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * ETFs Sector Exposure
         * Get ETF sector exposure data.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol ETF symbol.
         * @param {String} opts.isin ETF isin.
         * @param {module:api/DefaultApi~etfsSectorExposureCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/ETFsSectorExposure}
         */
      }, {
        key: "etfsSectorExposure",
        value: function etfsSectorExposure(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _ETFsSectorExposure["default"];
          return this.apiClient.callApi("/etf/sector", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the fdaCommitteeMeetingCalendar operation.
         * @callback module:api/DefaultApi~fdaCommitteeMeetingCalendarCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/FDAComitteeMeeting>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * FDA Committee Meeting Calendar
         * FDA's advisory committees are established to provide functions which support the agency's mission of protecting and promoting the public health, while meeting the requirements set forth in the Federal Advisory Committee Act. Committees are either mandated by statute or established at the discretion of the Department of Health and Human Services. Each committee is subject to renewal at two-year intervals unless the committee charter states otherwise.
         * @param {module:api/DefaultApi~fdaCommitteeMeetingCalendarCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/FDAComitteeMeeting>}
         */
      }, {
        key: "fdaCommitteeMeetingCalendar",
        value: function fdaCommitteeMeetingCalendar(callback) {
          var postBody = null;
          var pathParams = {};
          var queryParams = {};
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_FDAComitteeMeeting["default"]];
          return this.apiClient.callApi("/fda-advisory-committee-calendar", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the filings operation.
         * @callback module:api/DefaultApi~filingsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/Filing>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * SEC Filings
         * List company's filing. Limit to 250 documents at a time. This data is available for bulk download on <a href=\"https://www.kaggle.com/finnhub/sec-filings\" target=\"_blank\">Kaggle SEC Filings database</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol. Leave <code>symbol</code>,<code>cik</code> and <code>accessNumber</code> empty to list latest filings.
         * @param {String} opts.cik CIK.
         * @param {String} opts.accessNumber Access number of a specific report you want to retrieve data from.
         * @param {String} opts.form Filter by form. You can use this value <code>NT 10-K</code> to find non-timely filings for a company.
         * @param {Date} opts.from From date: 2020-03-15.
         * @param {Date} opts.to To date: 2020-03-16.
         * @param {module:api/DefaultApi~filingsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/Filing>}
         */
      }, {
        key: "filings",
        value: function filings(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "cik": opts["cik"],
            "accessNumber": opts["accessNumber"],
            "form": opts["form"],
            "from": opts["from"],
            "to": opts["to"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_Filing["default"]];
          return this.apiClient.callApi("/stock/filings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the filingsSentiment operation.
         * @callback module:api/DefaultApi~filingsSentimentCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SECSentimentAnalysis} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * SEC Sentiment Analysis
         * Get sentiment analysis of 10-K and 10-Q filings from SEC. An abnormal increase in the number of positive/negative words in filings can signal a significant change in the company's stock price in the upcoming 4 quarters. We make use of <a href= \"https://sraf.nd.edu/textual-analysis/resources/\" target=\"_blank\">Loughran and McDonald Sentiment Word Lists</a> to calculate the sentiment for each filing.
         * @param {String} accessNumber Access number of a specific report you want to retrieve data from.
         * @param {module:api/DefaultApi~filingsSentimentCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SECSentimentAnalysis}
         */
      }, {
        key: "filingsSentiment",
        value: function filingsSentiment(accessNumber, callback) {
          var postBody = null;
          if (accessNumber === void 0 || accessNumber === null) {
            throw new Error("Missing the required parameter 'accessNumber' when calling filingsSentiment");
          }
          var pathParams = {};
          var queryParams = {
            "accessNumber": accessNumber
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SECSentimentAnalysis["default"];
          return this.apiClient.callApi("/stock/filings-sentiment", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the financials operation.
         * @callback module:api/DefaultApi~financialsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/FinancialStatements} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Financial Statements
         * <p>Get standardized balance sheet, income statement and cash flow for global companies going back 30+ years. Data is sourced from original filings most of which made available through <a href=\"#filings\">SEC Filings</a> and <a href=\"#international-filings\">International Filings</a> endpoints.</p><p><i>Wondering why our standardized data is different from Bloomberg, Reuters, Factset, S&P or Yahoo Finance ? Check out our <a href=\"/faq\">FAQ page</a> to learn more</i></p>
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {String} statement Statement can take 1 of these values <code>bs, ic, cf</code> for Balance Sheet, Income Statement, Cash Flow respectively.
         * @param {String} freq Frequency can take 1 of these values <code>annual, quarterly, ttm, ytd</code>.  TTM (Trailing Twelve Months) option is available for Income Statement and Cash Flow. YTD (Year To Date) option is only available for Cash Flow.
         * @param {module:api/DefaultApi~financialsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/FinancialStatements}
         */
      }, {
        key: "financials",
        value: function financials(symbol, statement, freq, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling financials");
          }
          if (statement === void 0 || statement === null) {
            throw new Error("Missing the required parameter 'statement' when calling financials");
          }
          if (freq === void 0 || freq === null) {
            throw new Error("Missing the required parameter 'freq' when calling financials");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "statement": statement,
            "freq": freq
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _FinancialStatements["default"];
          return this.apiClient.callApi("/stock/financials", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the financialsReported operation.
         * @callback module:api/DefaultApi~financialsReportedCallback
         * @param {String} error Error message, if any.
         * @param {module:model/FinancialsAsReported} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Financials As Reported
         * Get financials as reported. This data is available for bulk download on <a href=\"https://www.kaggle.com/finnhub/reported-financials\" target=\"_blank\">Kaggle SEC Financials database</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol.
         * @param {String} opts.cik CIK.
         * @param {String} opts.accessNumber Access number of a specific report you want to retrieve financials from.
         * @param {String} opts.freq Frequency. Can be either <code>annual</code> or <code>quarterly</code>. Default to <code>annual</code>.
         * @param {Date} opts.from From date <code>YYYY-MM-DD</code>. Filter for endDate.
         * @param {Date} opts.to To date <code>YYYY-MM-DD</code>. Filter for endDate.
         * @param {module:api/DefaultApi~financialsReportedCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/FinancialsAsReported}
         */
      }, {
        key: "financialsReported",
        value: function financialsReported(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "cik": opts["cik"],
            "accessNumber": opts["accessNumber"],
            "freq": opts["freq"],
            "from": opts["from"],
            "to": opts["to"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _FinancialsAsReported["default"];
          return this.apiClient.callApi("/stock/financials-reported", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the forexCandles operation.
         * @callback module:api/DefaultApi~forexCandlesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/ForexCandles} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Forex Candles
         * Get candlestick data for forex symbols.
         * @param {String} symbol Use symbol returned in <code>/forex/symbol</code> endpoint for this field.
         * @param {String} resolution Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.
         * @param {Number} from UNIX timestamp. Interval initial value.
         * @param {Number} to UNIX timestamp. Interval end value.
         * @param {module:api/DefaultApi~forexCandlesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/ForexCandles}
         */
      }, {
        key: "forexCandles",
        value: function forexCandles(symbol, resolution, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling forexCandles");
          }
          if (resolution === void 0 || resolution === null) {
            throw new Error("Missing the required parameter 'resolution' when calling forexCandles");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling forexCandles");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling forexCandles");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "resolution": resolution,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _ForexCandles["default"];
          return this.apiClient.callApi("/forex/candle", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the forexExchanges operation.
         * @callback module:api/DefaultApi~forexExchangesCallback
         * @param {String} error Error message, if any.
         * @param {Array.<String>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Forex Exchanges
         * List supported forex exchanges
         * @param {module:api/DefaultApi~forexExchangesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<String>}
         */
      }, {
        key: "forexExchanges",
        value: function forexExchanges(callback) {
          var postBody = null;
          var pathParams = {};
          var queryParams = {};
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = ["String"];
          return this.apiClient.callApi("/forex/exchange", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the forexRates operation.
         * @callback module:api/DefaultApi~forexRatesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/Forexrates} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Forex rates
         * Get rates for all forex pairs. Ideal for currency conversion
         * @param {Object} opts Optional parameters
         * @param {String} opts.base Base currency. Default to EUR.
         * @param {String} opts.date Date. Leave blank to get the latest data.
         * @param {module:api/DefaultApi~forexRatesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/Forexrates}
         */
      }, {
        key: "forexRates",
        value: function forexRates(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "base": opts["base"],
            "date": opts["date"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _Forexrates["default"];
          return this.apiClient.callApi("/forex/rates", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the forexSymbols operation.
         * @callback module:api/DefaultApi~forexSymbolsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/ForexSymbol>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Forex Symbol
         * List supported forex symbols.
         * @param {String} exchange Exchange you want to get the list of symbols from.
         * @param {module:api/DefaultApi~forexSymbolsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/ForexSymbol>}
         */
      }, {
        key: "forexSymbols",
        value: function forexSymbols(exchange, callback) {
          var postBody = null;
          if (exchange === void 0 || exchange === null) {
            throw new Error("Missing the required parameter 'exchange' when calling forexSymbols");
          }
          var pathParams = {};
          var queryParams = {
            "exchange": exchange
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_ForexSymbol["default"]];
          return this.apiClient.callApi("/forex/symbol", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the fundOwnership operation.
         * @callback module:api/DefaultApi~fundOwnershipCallback
         * @param {String} error Error message, if any.
         * @param {module:model/FundOwnership} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Fund Ownership
         * Get a full list fund and institutional investors of a company in descending order of the number of shares held. Data is sourced from <code>13F form</code>, <code>Schedule 13D</code> and <code>13G</code> for US market, <code>UK Share Register</code> for UK market, <code>SEDI</code> for Canadian market and equivalent filings for other international markets.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {Number} opts.limit Limit number of results. Leave empty to get the full list.
         * @param {module:api/DefaultApi~fundOwnershipCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/FundOwnership}
         */
      }, {
        key: "fundOwnership",
        value: function fundOwnership(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling fundOwnership");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "limit": opts["limit"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _FundOwnership["default"];
          return this.apiClient.callApi("/stock/fund-ownership", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the indicesConstituents operation.
         * @callback module:api/DefaultApi~indicesConstituentsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/IndicesConstituents} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Indices Constituents
         * Get a list of index's constituents. A list of supported indices for this endpoint can be found <a href=\"/api/v1/index/list?token=\" target=\"_blank\">here</a>.
         * @param {String} symbol symbol
         * @param {module:api/DefaultApi~indicesConstituentsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/IndicesConstituents}
         */
      }, {
        key: "indicesConstituents",
        value: function indicesConstituents(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling indicesConstituents");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _IndicesConstituents["default"];
          return this.apiClient.callApi("/index/constituents", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the indicesHistoricalConstituents operation.
         * @callback module:api/DefaultApi~indicesHistoricalConstituentsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/IndicesHistoricalConstituents} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Indices Historical Constituents
         * Get full history of index's constituents including symbols and dates of joining and leaving the Index. Currently support <code>^GSPC</code>, <code>^NDX</code>, <code>^DJI</code>
         * @param {String} symbol symbol
         * @param {module:api/DefaultApi~indicesHistoricalConstituentsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/IndicesHistoricalConstituents}
         */
      }, {
        key: "indicesHistoricalConstituents",
        value: function indicesHistoricalConstituents(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling indicesHistoricalConstituents");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _IndicesHistoricalConstituents["default"];
          return this.apiClient.callApi("/index/historical-constituents", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the insiderSentiment operation.
         * @callback module:api/DefaultApi~insiderSentimentCallback
         * @param {String} error Error message, if any.
         * @param {module:model/InsiderSentiments} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Insider Sentiment
         * Get insider sentiment data for US companies calculated using method discussed <a href=\"https://medium.com/@stock-api/finnhub-insiders-sentiment-analysis-cc43f9f64b3a\" target=\"_blank\">here</a>. The MSPR ranges from -100 for the most negative to 100 for the most positive which can signal price changes in the coming 30-90 days.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Date} from From date: 2020-03-15.
         * @param {Date} to To date: 2020-03-16.
         * @param {module:api/DefaultApi~insiderSentimentCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/InsiderSentiments}
         */
      }, {
        key: "insiderSentiment",
        value: function insiderSentiment(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling insiderSentiment");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling insiderSentiment");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling insiderSentiment");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _InsiderSentiments["default"];
          return this.apiClient.callApi("/stock/insider-sentiment", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the insiderTransactions operation.
         * @callback module:api/DefaultApi~insiderTransactionsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/InsiderTransactions} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Insider Transactions
         * Company insider transactions data sourced from <code>Form 3,4,5</code>, SEDI and relevant companies' filings. This endpoint covers US, Canada, Australia, and selected EU companies. Limit to 100 transactions per API call.
         * @param {String} symbol Symbol of the company: AAPL. Leave this param blank to get the latest transactions.
         * @param {Object} opts Optional parameters
         * @param {Date} opts.from From date: 2020-03-15.
         * @param {Date} opts.to To date: 2020-03-16.
         * @param {module:api/DefaultApi~insiderTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/InsiderTransactions}
         */
      }, {
        key: "insiderTransactions",
        value: function insiderTransactions(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling insiderTransactions");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": opts["from"],
            "to": opts["to"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _InsiderTransactions["default"];
          return this.apiClient.callApi("/stock/insider-transactions", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the institutionalOwnership operation.
         * @callback module:api/DefaultApi~institutionalOwnershipCallback
         * @param {String} error Error message, if any.
         * @param {module:model/InstitutionalOwnership} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Institutional Ownership
         * Get a list institutional investors' positions for a particular stock overtime. Data from 13-F filings. Limit to 1 year of data at a time.
         * @param {String} symbol Filter by symbol.
         * @param {String} cusip Filter by CUSIP.
         * @param {String} from From date <code>YYYY-MM-DD</code>.
         * @param {String} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~institutionalOwnershipCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/InstitutionalOwnership}
         */
      }, {
        key: "institutionalOwnership",
        value: function institutionalOwnership(symbol, cusip, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling institutionalOwnership");
          }
          if (cusip === void 0 || cusip === null) {
            throw new Error("Missing the required parameter 'cusip' when calling institutionalOwnership");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling institutionalOwnership");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling institutionalOwnership");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "cusip": cusip,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _InstitutionalOwnership["default"];
          return this.apiClient.callApi("/institutional/ownership", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the institutionalPortfolio operation.
         * @callback module:api/DefaultApi~institutionalPortfolioCallback
         * @param {String} error Error message, if any.
         * @param {module:model/InstitutionalPortfolio} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Institutional Portfolio
         * Get the holdings/portfolio data of institutional investors from 13-F filings. Limit to 1 year of data at a time. You can get a list of supported CIK <a href=\"/api/v1/institutional/list?token=\" target=\"_blank\">here</a>.
         * @param {String} cik Fund's CIK.
         * @param {String} from From date <code>YYYY-MM-DD</code>.
         * @param {String} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~institutionalPortfolioCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/InstitutionalPortfolio}
         */
      }, {
        key: "institutionalPortfolio",
        value: function institutionalPortfolio(cik, from, to, callback) {
          var postBody = null;
          if (cik === void 0 || cik === null) {
            throw new Error("Missing the required parameter 'cik' when calling institutionalPortfolio");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling institutionalPortfolio");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling institutionalPortfolio");
          }
          var pathParams = {};
          var queryParams = {
            "cik": cik,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _InstitutionalPortfolio["default"];
          return this.apiClient.callApi("/institutional/portfolio", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the institutionalProfile operation.
         * @callback module:api/DefaultApi~institutionalProfileCallback
         * @param {String} error Error message, if any.
         * @param {module:model/InstitutionalProfile} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Institutional Profile
         * Get a list of well-known institutional investors. Currently support 60+ profiles.
         * @param {Object} opts Optional parameters
         * @param {String} opts.cik Filter by CIK. Leave blank to get the full list.
         * @param {module:api/DefaultApi~institutionalProfileCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/InstitutionalProfile}
         */
      }, {
        key: "institutionalProfile",
        value: function institutionalProfile(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "cik": opts["cik"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _InstitutionalProfile["default"];
          return this.apiClient.callApi("/institutional/profile", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the internationalFilings operation.
         * @callback module:api/DefaultApi~internationalFilingsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/InternationalFiling>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * International Filings
         * List filings for international companies. Limit to 250 documents at a time. These are the documents we use to source our fundamental data. Only support SEDAR and UK Companies House for normal usage. Enterprise clients who need access to the full filings for global markets should contact us for the access.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol. Leave empty to list latest filings.
         * @param {String} opts.country Filter by country using country's 2-letter code.
         * @param {module:api/DefaultApi~internationalFilingsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/InternationalFiling>}
         */
      }, {
        key: "internationalFilings",
        value: function internationalFilings(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "country": opts["country"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_InternationalFiling["default"]];
          return this.apiClient.callApi("/stock/international-filings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the investmentThemes operation.
         * @callback module:api/DefaultApi~investmentThemesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/InvestmentThemes} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Investment Themes (Thematic Investing)
         * <p>Thematic investing involves creating a portfolio (or portion of a portfolio) by gathering together a collection of companies involved in certain areas that you predict will generate above-market returns over the long term. Themes can be based on a concept such as ageing populations or a sub-sector such as robotics, and drones. Thematic investing focuses on predicted long-term trends rather than specific companies or sectors, enabling investors to access structural, one-off shifts that can change an entire industry.</p><p>This endpoint will help you get portfolios of different investment themes that are changing our life and are the way of the future.</p><p>A full list of themes supported can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\">here</a>. The theme coverage and portfolios are updated bi-weekly by our analysts. Our approach excludes penny, super-small cap and illiquid stocks.</p>
         * @param {String} theme Investment theme. A full list of themes supported can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\">here</a>.
         * @param {module:api/DefaultApi~investmentThemesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/InvestmentThemes}
         */
      }, {
        key: "investmentThemes",
        value: function investmentThemes(theme, callback) {
          var postBody = null;
          if (theme === void 0 || theme === null) {
            throw new Error("Missing the required parameter 'theme' when calling investmentThemes");
          }
          var pathParams = {};
          var queryParams = {
            "theme": theme
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _InvestmentThemes["default"];
          return this.apiClient.callApi("/stock/investment-theme", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the ipoCalendar operation.
         * @callback module:api/DefaultApi~ipoCalendarCallback
         * @param {String} error Error message, if any.
         * @param {module:model/IPOCalendar} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * IPO Calendar
         * Get recent and upcoming IPO.
         * @param {Date} from From date: 2020-03-15.
         * @param {Date} to To date: 2020-03-16.
         * @param {module:api/DefaultApi~ipoCalendarCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/IPOCalendar}
         */
      }, {
        key: "ipoCalendar",
        value: function ipoCalendar(from, to, callback) {
          var postBody = null;
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling ipoCalendar");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling ipoCalendar");
          }
          var pathParams = {};
          var queryParams = {
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _IPOCalendar["default"];
          return this.apiClient.callApi("/calendar/ipo", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the isinChange operation.
         * @callback module:api/DefaultApi~isinChangeCallback
         * @param {String} error Error message, if any.
         * @param {module:model/IsinChange} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * ISIN Change
         * Get a list of ISIN changes for EU-listed securities. Limit to 2000 events at a time.
         * @param {String} from From date <code>YYYY-MM-DD</code>.
         * @param {String} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~isinChangeCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/IsinChange}
         */
      }, {
        key: "isinChange",
        value: function isinChange(from, to, callback) {
          var postBody = null;
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling isinChange");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling isinChange");
          }
          var pathParams = {};
          var queryParams = {
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _IsinChange["default"];
          return this.apiClient.callApi("/ca/isin-change", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the marketHoliday operation.
         * @callback module:api/DefaultApi~marketHolidayCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MarketHoliday} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Market Holiday
         * Get a list of holidays for global exchanges.
         * @param {String} exchange Exchange code.
         * @param {module:api/DefaultApi~marketHolidayCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MarketHoliday}
         */
      }, {
        key: "marketHoliday",
        value: function marketHoliday(exchange, callback) {
          var postBody = null;
          if (exchange === void 0 || exchange === null) {
            throw new Error("Missing the required parameter 'exchange' when calling marketHoliday");
          }
          var pathParams = {};
          var queryParams = {
            "exchange": exchange
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MarketHoliday["default"];
          return this.apiClient.callApi("/stock/market-holiday", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the marketNews operation.
         * @callback module:api/DefaultApi~marketNewsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/MarketNews>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Market News
         * Get latest market news.
         * @param {String} category This parameter can be 1 of the following values <code>general, forex, crypto, merger</code>.
         * @param {Object} opts Optional parameters
         * @param {Number} opts.minId Use this field to get only news after this ID. Default to 0
         * @param {module:api/DefaultApi~marketNewsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/MarketNews>}
         */
      }, {
        key: "marketNews",
        value: function marketNews(category, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (category === void 0 || category === null) {
            throw new Error("Missing the required parameter 'category' when calling marketNews");
          }
          var pathParams = {};
          var queryParams = {
            "category": category,
            "minId": opts["minId"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_MarketNews["default"]];
          return this.apiClient.callApi("/news", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the marketStatus operation.
         * @callback module:api/DefaultApi~marketStatusCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MarketStatus} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Market Status
         * Get current market status for global exchanges (whether exchanges are open or close).
         * @param {String} exchange Exchange code.
         * @param {module:api/DefaultApi~marketStatusCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MarketStatus}
         */
      }, {
        key: "marketStatus",
        value: function marketStatus(exchange, callback) {
          var postBody = null;
          if (exchange === void 0 || exchange === null) {
            throw new Error("Missing the required parameter 'exchange' when calling marketStatus");
          }
          var pathParams = {};
          var queryParams = {
            "exchange": exchange
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MarketStatus["default"];
          return this.apiClient.callApi("/stock/market-status", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the mutualFundCountryExposure operation.
         * @callback module:api/DefaultApi~mutualFundCountryExposureCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MutualFundCountryExposure} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Mutual Funds Country Exposure
         * Get Mutual Funds country exposure data.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol.
         * @param {String} opts.isin Fund's isin.
         * @param {module:api/DefaultApi~mutualFundCountryExposureCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MutualFundCountryExposure}
         */
      }, {
        key: "mutualFundCountryExposure",
        value: function mutualFundCountryExposure(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MutualFundCountryExposure["default"];
          return this.apiClient.callApi("/mutual-fund/country", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the mutualFundEet operation.
         * @callback module:api/DefaultApi~mutualFundEetCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MutualFundEet} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Mutual Funds EET
         * Get EET data for EU funds. For PAIs data, please see the EET PAI endpoint.
         * @param {String} isin ISIN.
         * @param {module:api/DefaultApi~mutualFundEetCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MutualFundEet}
         */
      }, {
        key: "mutualFundEet",
        value: function mutualFundEet(isin, callback) {
          var postBody = null;
          if (isin === void 0 || isin === null) {
            throw new Error("Missing the required parameter 'isin' when calling mutualFundEet");
          }
          var pathParams = {};
          var queryParams = {
            "isin": isin
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MutualFundEet["default"];
          return this.apiClient.callApi("/mutual-fund/eet", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the mutualFundEetPai operation.
         * @callback module:api/DefaultApi~mutualFundEetPaiCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MutualFundEetPai} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Mutual Funds EET PAI
         * Get EET PAI data for EU funds.
         * @param {String} isin ISIN.
         * @param {module:api/DefaultApi~mutualFundEetPaiCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MutualFundEetPai}
         */
      }, {
        key: "mutualFundEetPai",
        value: function mutualFundEetPai(isin, callback) {
          var postBody = null;
          if (isin === void 0 || isin === null) {
            throw new Error("Missing the required parameter 'isin' when calling mutualFundEetPai");
          }
          var pathParams = {};
          var queryParams = {
            "isin": isin
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MutualFundEetPai["default"];
          return this.apiClient.callApi("/mutual-fund/eet-pai", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the mutualFundHoldings operation.
         * @callback module:api/DefaultApi~mutualFundHoldingsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MutualFundHoldings} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Mutual Funds Holdings
         * Get full Mutual Funds holdings/constituents. This endpoint covers both US and global mutual funds. For international funds, you must query the data using ISIN. A list of supported funds can be found <a href=\"/api/v1/mutual-fund/list?token=\" target=\"_blank\">here</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Fund's symbol.
         * @param {String} opts.isin Fund's isin.
         * @param {Number} opts.skip Skip the first n results. You can use this parameter to query historical constituents data. The latest result is returned if skip=0 or not set.
         * @param {module:api/DefaultApi~mutualFundHoldingsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MutualFundHoldings}
         */
      }, {
        key: "mutualFundHoldings",
        value: function mutualFundHoldings(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"],
            "skip": opts["skip"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MutualFundHoldings["default"];
          return this.apiClient.callApi("/mutual-fund/holdings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the mutualFundProfile operation.
         * @callback module:api/DefaultApi~mutualFundProfileCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MutualFundProfile} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Mutual Funds Profile
         * Get mutual funds profile information. This endpoint covers both US and global mutual funds. For international funds, you must query the data using ISIN. A list of supported funds can be found <a href=\"/api/v1/mutual-fund/list?token=\" target=\"_blank\">here</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Fund's symbol.
         * @param {String} opts.isin Fund's isin.
         * @param {module:api/DefaultApi~mutualFundProfileCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MutualFundProfile}
         */
      }, {
        key: "mutualFundProfile",
        value: function mutualFundProfile(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MutualFundProfile["default"];
          return this.apiClient.callApi("/mutual-fund/profile", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the mutualFundSectorExposure operation.
         * @callback module:api/DefaultApi~mutualFundSectorExposureCallback
         * @param {String} error Error message, if any.
         * @param {module:model/MutualFundSectorExposure} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Mutual Funds Sector Exposure
         * Get Mutual Funds sector exposure data.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Mutual Fund symbol.
         * @param {String} opts.isin Fund's isin.
         * @param {module:api/DefaultApi~mutualFundSectorExposureCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/MutualFundSectorExposure}
         */
      }, {
        key: "mutualFundSectorExposure",
        value: function mutualFundSectorExposure(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "isin": opts["isin"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _MutualFundSectorExposure["default"];
          return this.apiClient.callApi("/mutual-fund/sector", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the newsSentiment operation.
         * @callback module:api/DefaultApi~newsSentimentCallback
         * @param {String} error Error message, if any.
         * @param {module:model/NewsSentiment} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * News Sentiment
         * Get company's news sentiment and statistics. This endpoint is only available for US companies.
         * @param {String} symbol Company symbol.
         * @param {module:api/DefaultApi~newsSentimentCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/NewsSentiment}
         */
      }, {
        key: "newsSentiment",
        value: function newsSentiment(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling newsSentiment");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _NewsSentiment["default"];
          return this.apiClient.callApi("/news-sentiment", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the ownership operation.
         * @callback module:api/DefaultApi~ownershipCallback
         * @param {String} error Error message, if any.
         * @param {module:model/Ownership} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Ownership
         * Get a full list of shareholders of a company in descending order of the number of shares held. Data is sourced from <code>13F form</code>, <code>Schedule 13D</code> and <code>13G</code> for US market, <code>UK Share Register</code> for UK market, <code>SEDI</code> for Canadian market and equivalent filings for other international markets.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {Number} opts.limit Limit number of results. Leave empty to get the full list.
         * @param {module:api/DefaultApi~ownershipCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/Ownership}
         */
      }, {
        key: "ownership",
        value: function ownership(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling ownership");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "limit": opts["limit"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _Ownership["default"];
          return this.apiClient.callApi("/stock/ownership", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the patternRecognition operation.
         * @callback module:api/DefaultApi~patternRecognitionCallback
         * @param {String} error Error message, if any.
         * @param {module:model/PatternRecognition} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Pattern Recognition
         * Run pattern recognition algorithm on a symbol. Support double top/bottom, triple top/bottom, head and shoulders, triangle, wedge, channel, flag, and candlestick patterns.
         * @param {String} symbol Symbol
         * @param {String} resolution Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.
         * @param {module:api/DefaultApi~patternRecognitionCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/PatternRecognition}
         */
      }, {
        key: "patternRecognition",
        value: function patternRecognition(symbol, resolution, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling patternRecognition");
          }
          if (resolution === void 0 || resolution === null) {
            throw new Error("Missing the required parameter 'resolution' when calling patternRecognition");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "resolution": resolution
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _PatternRecognition["default"];
          return this.apiClient.callApi("/scan/pattern", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the pressReleases operation.
         * @callback module:api/DefaultApi~pressReleasesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/PressRelease} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Major Press Releases
         * <p>Get latest major press releases of a company. This data can be used to highlight the most significant events comprised of mostly press releases sourced from the exchanges, BusinessWire, AccessWire, GlobeNewswire, Newsfile, and PRNewswire.</p><p>Full-text press releases data is available for Enterprise clients. <a href=\"mailto:support@finnhub.io\">Contact Us</a> to learn more.</p>
         * @param {String} symbol Company symbol.
         * @param {Object} opts Optional parameters
         * @param {Date} opts.from From time: 2020-01-01.
         * @param {Date} opts.to To time: 2020-01-05.
         * @param {module:api/DefaultApi~pressReleasesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/PressRelease}
         */
      }, {
        key: "pressReleases",
        value: function pressReleases(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling pressReleases");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": opts["from"],
            "to": opts["to"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _PressRelease["default"];
          return this.apiClient.callApi("/press-releases", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the priceMetrics operation.
         * @callback module:api/DefaultApi~priceMetricsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/PriceMetrics} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Price Metrics
         * Get company price performance statistics such as 52-week high/low, YTD return and much more.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {Object} opts Optional parameters
         * @param {String} opts.date Get data on a specific date in the past. The data is available weekly so your date will be automatically adjusted to the last day of that week.
         * @param {module:api/DefaultApi~priceMetricsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/PriceMetrics}
         */
      }, {
        key: "priceMetrics",
        value: function priceMetrics(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling priceMetrics");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "date": opts["date"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _PriceMetrics["default"];
          return this.apiClient.callApi("/stock/price-metric", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the priceTarget operation.
         * @callback module:api/DefaultApi~priceTargetCallback
         * @param {String} error Error message, if any.
         * @param {module:model/PriceTarget} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Price Target
         * Get latest price target consensus.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {module:api/DefaultApi~priceTargetCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/PriceTarget}
         */
      }, {
        key: "priceTarget",
        value: function priceTarget(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling priceTarget");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _PriceTarget["default"];
          return this.apiClient.callApi("/stock/price-target", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the quote operation.
         * @callback module:api/DefaultApi~quoteCallback
         * @param {String} error Error message, if any.
         * @param {module:model/Quote} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Quote
         * <p>Get real-time quote data for US stocks. Constant polling is not recommended. Use websocket if you need real-time updates.</p><p>Real-time stock prices for international markets are supported for Enterprise clients via our partner's feed. <a href=\"mailto:support@finnhub.io\">Contact Us</a> to learn more.</p>
         * @param {String} symbol Symbol
         * @param {module:api/DefaultApi~quoteCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/Quote}
         */
      }, {
        key: "quote",
        value: function quote(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling quote");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _Quote["default"];
          return this.apiClient.callApi("/quote", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the recommendationTrends operation.
         * @callback module:api/DefaultApi~recommendationTrendsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/RecommendationTrend>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Recommendation Trends
         * Get latest analyst recommendation trends for a company.
         * @param {String} symbol Symbol of the company: AAPL.
         * @param {module:api/DefaultApi~recommendationTrendsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/RecommendationTrend>}
         */
      }, {
        key: "recommendationTrends",
        value: function recommendationTrends(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling recommendationTrends");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_RecommendationTrend["default"]];
          return this.apiClient.callApi("/stock/recommendation", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the revenueBreakdown operation.
         * @callback module:api/DefaultApi~revenueBreakdownCallback
         * @param {String} error Error message, if any.
         * @param {module:model/RevenueBreakdown} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Revenue Breakdown
         * Get revenue breakdown by product. This dataset is only available for US companies which disclose their revenue breakdown in the annual or quarterly reports.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol.
         * @param {String} opts.cik CIK.
         * @param {module:api/DefaultApi~revenueBreakdownCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/RevenueBreakdown}
         */
      }, {
        key: "revenueBreakdown",
        value: function revenueBreakdown(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "cik": opts["cik"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _RevenueBreakdown["default"];
          return this.apiClient.callApi("/stock/revenue-breakdown", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the sectorMetric operation.
         * @callback module:api/DefaultApi~sectorMetricCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SectorMetric} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Sector Metrics
         * Get ratios for different sectors and regions/indices.
         * @param {String} region Region. A list of supported values for this field can be found <a href=\"https://docs.google.com/spreadsheets/d/1afedyv7yWJ-z7pMjaAZK-f6ENY3mI3EBCk95QffpoHw/edit?usp=sharing\" target=\"_blank\">here</a>.
         * @param {module:api/DefaultApi~sectorMetricCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SectorMetric}
         */
      }, {
        key: "sectorMetric",
        value: function sectorMetric(region, callback) {
          var postBody = null;
          if (region === void 0 || region === null) {
            throw new Error("Missing the required parameter 'region' when calling sectorMetric");
          }
          var pathParams = {};
          var queryParams = {
            "region": region
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SectorMetric["default"];
          return this.apiClient.callApi("/sector/metrics", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the similarityIndex operation.
         * @callback module:api/DefaultApi~similarityIndexCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SimilarityIndex} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Similarity Index
         * <p>Calculate the textual difference between a company's 10-K / 10-Q reports and the same type of report in the previous year using Cosine Similarity. For example, this endpoint compares 2019's 10-K with 2018's 10-K. Companies breaking from its routines in disclosure of financial condition and risk analysis section can signal a significant change in the company's stock price in the upcoming 4 quarters.</p>
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol. Required if cik is empty
         * @param {String} opts.cik CIK. Required if symbol is empty
         * @param {String} opts.freq <code>annual</code> or <code>quarterly</code>. Default to <code>annual</code>
         * @param {module:api/DefaultApi~similarityIndexCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SimilarityIndex}
         */
      }, {
        key: "similarityIndex",
        value: function similarityIndex(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "cik": opts["cik"],
            "freq": opts["freq"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SimilarityIndex["default"];
          return this.apiClient.callApi("/stock/similarity-index", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the socialSentiment operation.
         * @callback module:api/DefaultApi~socialSentimentCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SocialSentiment} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Social Sentiment
         * <p>Get social sentiment for stocks on Reddit and Twitter.</p>
         * @param {String} symbol Company symbol.
         * @param {Object} opts Optional parameters
         * @param {Date} opts.from From date <code>YYYY-MM-DD</code>.
         * @param {Date} opts.to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~socialSentimentCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SocialSentiment}
         */
      }, {
        key: "socialSentiment",
        value: function socialSentiment(symbol, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling socialSentiment");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": opts["from"],
            "to": opts["to"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SocialSentiment["default"];
          return this.apiClient.callApi("/stock/social-sentiment", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockBasicDividends operation.
         * @callback module:api/DefaultApi~stockBasicDividendsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/Dividends2} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Dividends 2 (Basic)
         * Get global dividends data.
         * @param {String} symbol Symbol.
         * @param {module:api/DefaultApi~stockBasicDividendsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/Dividends2}
         */
      }, {
        key: "stockBasicDividends",
        value: function stockBasicDividends(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockBasicDividends");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _Dividends2["default"];
          return this.apiClient.callApi("/stock/dividend2", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockBidask operation.
         * @callback module:api/DefaultApi~stockBidaskCallback
         * @param {String} error Error message, if any.
         * @param {module:model/LastBidAsk} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Last Bid-Ask
         * Get last bid/ask data for US stocks.
         * @param {String} symbol Symbol.
         * @param {module:api/DefaultApi~stockBidaskCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/LastBidAsk}
         */
      }, {
        key: "stockBidask",
        value: function stockBidask(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockBidask");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _LastBidAsk["default"];
          return this.apiClient.callApi("/stock/bidask", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockCandles operation.
         * @callback module:api/DefaultApi~stockCandlesCallback
         * @param {String} error Error message, if any.
         * @param {module:model/StockCandles} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Stock Candles
         * <p>Get candlestick data (OHLCV) for stocks.</p><p>Daily data will be adjusted for Splits. Intraday data will remain unadjusted. Only 1 month of intraday will be returned at a time. If you need more historical intraday data, please use the from and to params iteratively to request more data.</p>
         * @param {String} symbol Symbol.
         * @param {String} resolution Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.
         * @param {Number} from UNIX timestamp. Interval initial value.
         * @param {Number} to UNIX timestamp. Interval end value.
         * @param {module:api/DefaultApi~stockCandlesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/StockCandles}
         */
      }, {
        key: "stockCandles",
        value: function stockCandles(symbol, resolution, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockCandles");
          }
          if (resolution === void 0 || resolution === null) {
            throw new Error("Missing the required parameter 'resolution' when calling stockCandles");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling stockCandles");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling stockCandles");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "resolution": resolution,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _StockCandles["default"];
          return this.apiClient.callApi("/stock/candle", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockDividends operation.
         * @callback module:api/DefaultApi~stockDividendsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/Dividends>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Dividends
         * Get dividends data for common stocks going back 30 years.
         * @param {String} symbol Symbol.
         * @param {Date} from YYYY-MM-DD.
         * @param {Date} to YYYY-MM-DD.
         * @param {module:api/DefaultApi~stockDividendsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/Dividends>}
         */
      }, {
        key: "stockDividends",
        value: function stockDividends(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockDividends");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling stockDividends");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling stockDividends");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_Dividends["default"]];
          return this.apiClient.callApi("/stock/dividend", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockLobbying operation.
         * @callback module:api/DefaultApi~stockLobbyingCallback
         * @param {String} error Error message, if any.
         * @param {module:model/LobbyingResult} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Senate Lobbying
         * Get a list of reported lobbying activities in the Senate and the House.
         * @param {String} symbol Symbol.
         * @param {Date} from From date <code>YYYY-MM-DD</code>.
         * @param {Date} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~stockLobbyingCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/LobbyingResult}
         */
      }, {
        key: "stockLobbying",
        value: function stockLobbying(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockLobbying");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling stockLobbying");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling stockLobbying");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _LobbyingResult["default"];
          return this.apiClient.callApi("/stock/lobbying", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockNbbo operation.
         * @callback module:api/DefaultApi~stockNbboCallback
         * @param {String} error Error message, if any.
         * @param {module:model/HistoricalNBBO} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Historical NBBO
         * <p>Get historical best bid and offer for US stocks, LSE, TSX, Euronext and Deutsche Borse.</p><p>For US market, this endpoint only serves historical NBBO from the beginning of 2020. To download more historical data, please visit our bulk download page in the Dashboard <a target=\"_blank\" href=\"/dashboard/download\",>here</a>.</p>
         * @param {String} symbol Symbol.
         * @param {Date} date Date: 2020-04-02.
         * @param {Number} limit Limit number of ticks returned. Maximum value: <code>25000</code>
         * @param {Number} skip Number of ticks to skip. Use this parameter to loop through the entire data.
         * @param {module:api/DefaultApi~stockNbboCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/HistoricalNBBO}
         */
      }, {
        key: "stockNbbo",
        value: function stockNbbo(symbol, date, limit, skip, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockNbbo");
          }
          if (date === void 0 || date === null) {
            throw new Error("Missing the required parameter 'date' when calling stockNbbo");
          }
          if (limit === void 0 || limit === null) {
            throw new Error("Missing the required parameter 'limit' when calling stockNbbo");
          }
          if (skip === void 0 || skip === null) {
            throw new Error("Missing the required parameter 'skip' when calling stockNbbo");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "date": date,
            "limit": limit,
            "skip": skip
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _HistoricalNBBO["default"];
          return this.apiClient.callApi("/stock/bbo", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockSplits operation.
         * @callback module:api/DefaultApi~stockSplitsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/Split>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Splits
         * Get splits data for stocks.
         * @param {String} symbol Symbol.
         * @param {Date} from YYYY-MM-DD.
         * @param {Date} to YYYY-MM-DD.
         * @param {module:api/DefaultApi~stockSplitsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/Split>}
         */
      }, {
        key: "stockSplits",
        value: function stockSplits(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockSplits");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling stockSplits");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling stockSplits");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_Split["default"]];
          return this.apiClient.callApi("/stock/split", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockSymbols operation.
         * @callback module:api/DefaultApi~stockSymbolsCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/StockSymbol>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Stock Symbol
         * List supported stocks. We use the following symbology to identify stocks on Finnhub <code>Exchange_Ticker.Exchange_Code</code>. A list of supported exchange codes can be found <a href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\" target=\"_blank\">here</a>.
         * @param {String} exchange Exchange you want to get the list of symbols from. List of exchange codes can be found <a href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\" target=\"_blank\">here</a>.
         * @param {Object} opts Optional parameters
         * @param {String} opts.mic Filter by MIC code.
         * @param {String} opts.securityType Filter by security type used by OpenFigi standard.
         * @param {String} opts.currency Filter by currency.
         * @param {module:api/DefaultApi~stockSymbolsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/StockSymbol>}
         */
      }, {
        key: "stockSymbols",
        value: function stockSymbols(exchange, opts, callback) {
          opts = opts || {};
          var postBody = null;
          if (exchange === void 0 || exchange === null) {
            throw new Error("Missing the required parameter 'exchange' when calling stockSymbols");
          }
          var pathParams = {};
          var queryParams = {
            "exchange": exchange,
            "mic": opts["mic"],
            "securityType": opts["securityType"],
            "currency": opts["currency"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_StockSymbol["default"]];
          return this.apiClient.callApi("/stock/symbol", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockTick operation.
         * @callback module:api/DefaultApi~stockTickCallback
         * @param {String} error Error message, if any.
         * @param {module:model/TickData} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Tick Data
         * <p>Get historical tick data for global exchanges. You can send the request directly to our tick server at <a href=\"https://tick.finnhub.io/\">https://tick.finnhub.io/</a> with the same path and parameters or get redirected there if you call our main server.</p><p>For more historical tick data, you can visit our bulk download page in the Dashboard <a target=\"_blank\" href=\"/dashboard/download\",>here</a> to speed up the download process.</p><table class=\"table table-hover\">   <thead>     <tr>       <th>Exchange</th>       <th>Segment</th>       <th>Delay</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"text-blue\">US CTA/UTP</th>       <td>Full SIP</td>       <td>End-of-day</td>     </tr>     <tr>       <td class=\"text-blue\">TSX</th>       <td><ul><li>TSX</li><li>TSX Venture</li><li>Index</li></ul></td>       <td>End-of-day</td>     </tr>     <tr>       <td class=\"text-blue\">LSE</th>       <td><ul><li>London Stock Exchange (L)</li><li>LSE International (L)</li><li>LSE European (L)</li></ul></td>       <td>15 minute</td>     </tr>     <tr>       <td class=\"text-blue\">Euronext</th>       <td><ul> <li>Euronext Paris (PA)</li> <li>Euronext Amsterdam (AS)</li> <li>Euronext Lisbon (LS)</li> <li>Euronext Brussels (BR)</li> <li>Euronext Oslo (OL)</li> <li>Euronext London (LN)</li> <li>Euronext Dublin (IR)</li> <li>Index</li> <li>Warrant</li></ul></td>       <td>End-of-day</td>     </tr>     <tr>       <td class=\"text-blue\">Deutsche Börse</th>       <td><ul> <li>Frankfurt (F)</li> <li>Xetra (DE)</li> <li>Duesseldorf (DU)</li> <li>Hamburg (HM)</li> <li>Berlin (BE)</li> <li>Hanover (HA)</li> <li>Stoxx (SX)</li> <li>TradeGate (TG)</li> <li>Zertifikate (SC)</li> <li>Index</li> <li>Warrant</li></ul></td>       <td>End-of-day</td>     </tr>   </tbody> </table>
         * @param {String} symbol Symbol.
         * @param {Date} date Date: 2020-04-02.
         * @param {Number} limit Limit number of ticks returned. Maximum value: <code>25000</code>
         * @param {Number} skip Number of ticks to skip. Use this parameter to loop through the entire data.
         * @param {module:api/DefaultApi~stockTickCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/TickData}
         */
      }, {
        key: "stockTick",
        value: function stockTick(symbol, date, limit, skip, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockTick");
          }
          if (date === void 0 || date === null) {
            throw new Error("Missing the required parameter 'date' when calling stockTick");
          }
          if (limit === void 0 || limit === null) {
            throw new Error("Missing the required parameter 'limit' when calling stockTick");
          }
          if (skip === void 0 || skip === null) {
            throw new Error("Missing the required parameter 'skip' when calling stockTick");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "date": date,
            "limit": limit,
            "skip": skip
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _TickData["default"];
          return this.apiClient.callApi("/stock/tick", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockUsaSpending operation.
         * @callback module:api/DefaultApi~stockUsaSpendingCallback
         * @param {String} error Error message, if any.
         * @param {module:model/UsaSpendingResult} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * USA Spending
         * Get a list of government's spending activities from USASpending dataset for public companies. This dataset can help you identify companies that win big government contracts which is extremely important for industries such as Defense, Aerospace, and Education.
         * @param {String} symbol Symbol.
         * @param {Date} from From date <code>YYYY-MM-DD</code>. Filter for <code>actionDate</code>
         * @param {Date} to To date <code>YYYY-MM-DD</code>. Filter for <code>actionDate</code>
         * @param {module:api/DefaultApi~stockUsaSpendingCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/UsaSpendingResult}
         */
      }, {
        key: "stockUsaSpending",
        value: function stockUsaSpending(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockUsaSpending");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling stockUsaSpending");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling stockUsaSpending");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _UsaSpendingResult["default"];
          return this.apiClient.callApi("/stock/usa-spending", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockUsptoPatent operation.
         * @callback module:api/DefaultApi~stockUsptoPatentCallback
         * @param {String} error Error message, if any.
         * @param {module:model/UsptoPatentResult} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * USPTO Patents
         * List USPTO patents for companies. Limit to 250 records per API call.
         * @param {String} symbol Symbol.
         * @param {Date} from From date <code>YYYY-MM-DD</code>.
         * @param {Date} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~stockUsptoPatentCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/UsptoPatentResult}
         */
      }, {
        key: "stockUsptoPatent",
        value: function stockUsptoPatent(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockUsptoPatent");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling stockUsptoPatent");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling stockUsptoPatent");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _UsptoPatentResult["default"];
          return this.apiClient.callApi("/stock/uspto-patent", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the stockVisaApplication operation.
         * @callback module:api/DefaultApi~stockVisaApplicationCallback
         * @param {String} error Error message, if any.
         * @param {module:model/VisaApplicationResult} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * H1-B Visa Application
         * Get a list of H1-B and Permanent visa applications for companies from the DOL. The data is updated quarterly.
         * @param {String} symbol Symbol.
         * @param {Date} from From date <code>YYYY-MM-DD</code>. Filter on the <code>beginDate</code> column.
         * @param {Date} to To date <code>YYYY-MM-DD</code>. Filter on the <code>beginDate</code> column.
         * @param {module:api/DefaultApi~stockVisaApplicationCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/VisaApplicationResult}
         */
      }, {
        key: "stockVisaApplication",
        value: function stockVisaApplication(symbol, from, to, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling stockVisaApplication");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling stockVisaApplication");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling stockVisaApplication");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _VisaApplicationResult["default"];
          return this.apiClient.callApi("/stock/visa-application", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the supplyChainRelationships operation.
         * @callback module:api/DefaultApi~supplyChainRelationshipsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SupplyChainRelationships} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Supply Chain Relationships
         * <p>This endpoint provides an overall map of public companies' key customers and suppliers. The data offers a deeper look into a company's supply chain and how products are created. The data will help investors manage risk, limit exposure or generate alpha-generating ideas and trading insights.</p>
         * @param {String} symbol Symbol.
         * @param {module:api/DefaultApi~supplyChainRelationshipsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SupplyChainRelationships}
         */
      }, {
        key: "supplyChainRelationships",
        value: function supplyChainRelationships(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling supplyChainRelationships");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SupplyChainRelationships["default"];
          return this.apiClient.callApi("/stock/supply-chain", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the supportResistance operation.
         * @callback module:api/DefaultApi~supportResistanceCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SupportResistance} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Support/Resistance
         * Get support and resistance levels for a symbol.
         * @param {String} symbol Symbol
         * @param {String} resolution Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.
         * @param {module:api/DefaultApi~supportResistanceCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SupportResistance}
         */
      }, {
        key: "supportResistance",
        value: function supportResistance(symbol, resolution, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling supportResistance");
          }
          if (resolution === void 0 || resolution === null) {
            throw new Error("Missing the required parameter 'resolution' when calling supportResistance");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "resolution": resolution
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SupportResistance["default"];
          return this.apiClient.callApi("/scan/support-resistance", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the symbolChange operation.
         * @callback module:api/DefaultApi~symbolChangeCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SymbolChange} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Symbol Change
         * Get a list of symbol changes for US-listed, EU-listed, NSE and ASX securities. Limit to 2000 events at a time.
         * @param {String} from From date <code>YYYY-MM-DD</code>.
         * @param {String} to To date <code>YYYY-MM-DD</code>.
         * @param {module:api/DefaultApi~symbolChangeCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SymbolChange}
         */
      }, {
        key: "symbolChange",
        value: function symbolChange(from, to, callback) {
          var postBody = null;
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling symbolChange");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling symbolChange");
          }
          var pathParams = {};
          var queryParams = {
            "from": from,
            "to": to
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SymbolChange["default"];
          return this.apiClient.callApi("/ca/symbol-change", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the symbolSearch operation.
         * @callback module:api/DefaultApi~symbolSearchCallback
         * @param {String} error Error message, if any.
         * @param {module:model/SymbolLookup} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Symbol Lookup
         * Search for best-matching symbols based on your query. You can input anything from symbol, security's name to ISIN and Cusip.
         * @param {String} q Query text can be symbol, name, isin, or cusip.
         * @param {module:api/DefaultApi~symbolSearchCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/SymbolLookup}
         */
      }, {
        key: "symbolSearch",
        value: function symbolSearch(q, callback) {
          var postBody = null;
          if (q === void 0 || q === null) {
            throw new Error("Missing the required parameter 'q' when calling symbolSearch");
          }
          var pathParams = {};
          var queryParams = {
            "q": q
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _SymbolLookup["default"];
          return this.apiClient.callApi("/search", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the technicalIndicator operation.
         * @callback module:api/DefaultApi~technicalIndicatorCallback
         * @param {String} error Error message, if any.
         * @param {Object} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Technical Indicators
         * Return technical indicator with price data. List of supported indicators can be found <a href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\" target=\"_blank\">here</a>.
         * @param {String} symbol symbol
         * @param {String} resolution Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.
         * @param {Number} from UNIX timestamp. Interval initial value.
         * @param {Number} to UNIX timestamp. Interval end value.
         * @param {String} indicator Indicator name. Full list can be found <a href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\" target=\"_blank\">here</a>.
         * @param {Object} opts Optional parameters
         * @param {Object} opts.indicatorFields Check out <a href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\" target=\"_blank\">this page</a> to see which indicators and params are supported.
         * @param {module:api/DefaultApi~technicalIndicatorCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Object}
         */
      }, {
        key: "technicalIndicator",
        value: function technicalIndicator(symbol, resolution, from, to, indicator, opts, callback) {
          opts = opts || {};
          var postBody = opts["indicatorFields"];
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling technicalIndicator");
          }
          if (resolution === void 0 || resolution === null) {
            throw new Error("Missing the required parameter 'resolution' when calling technicalIndicator");
          }
          if (from === void 0 || from === null) {
            throw new Error("Missing the required parameter 'from' when calling technicalIndicator");
          }
          if (to === void 0 || to === null) {
            throw new Error("Missing the required parameter 'to' when calling technicalIndicator");
          }
          if (indicator === void 0 || indicator === null) {
            throw new Error("Missing the required parameter 'indicator' when calling technicalIndicator");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol,
            "resolution": resolution,
            "from": from,
            "to": to,
            "indicator": indicator
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = ["application/json"];
          var accepts = ["application/json"];
          var returnType = Object;
          return this.apiClient.callApi("/indicator", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the transcripts operation.
         * @callback module:api/DefaultApi~transcriptsCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EarningsCallTranscripts} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Earnings Call Transcripts
         * <p>Get earnings call transcripts, audio and participants' list. Data is available for US, UK, European, Australian and Canadian companies.<p>15+ years of data is available with 220,000+ audio which add up to 7TB in size.</p>
         * @param {String} id Transcript's id obtained with <a href=\"#transcripts-list\">Transcripts List endpoint</a>.
         * @param {module:api/DefaultApi~transcriptsCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EarningsCallTranscripts}
         */
      }, {
        key: "transcripts",
        value: function transcripts(id, callback) {
          var postBody = null;
          if (id === void 0 || id === null) {
            throw new Error("Missing the required parameter 'id' when calling transcripts");
          }
          var pathParams = {};
          var queryParams = {
            "id": id
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EarningsCallTranscripts["default"];
          return this.apiClient.callApi("/stock/transcripts", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the transcriptsList operation.
         * @callback module:api/DefaultApi~transcriptsListCallback
         * @param {String} error Error message, if any.
         * @param {module:model/EarningsCallTranscriptsList} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Earnings Call Transcripts List
         * List earnings call transcripts' metadata. This endpoint is available for US, UK, European, Australian and Canadian companies.
         * @param {String} symbol Company symbol: AAPL. Leave empty to list the latest transcripts
         * @param {module:api/DefaultApi~transcriptsListCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link module:model/EarningsCallTranscriptsList}
         */
      }, {
        key: "transcriptsList",
        value: function transcriptsList(symbol, callback) {
          var postBody = null;
          if (symbol === void 0 || symbol === null) {
            throw new Error("Missing the required parameter 'symbol' when calling transcriptsList");
          }
          var pathParams = {};
          var queryParams = {
            "symbol": symbol
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = _EarningsCallTranscriptsList["default"];
          return this.apiClient.callApi("/stock/transcripts/list", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
        /**
         * Callback function to receive the result of the upgradeDowngrade operation.
         * @callback module:api/DefaultApi~upgradeDowngradeCallback
         * @param {String} error Error message, if any.
         * @param {Array.<module:model/UpgradeDowngrade>} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */
        /**
         * Stock Upgrade/Downgrade
         * Get latest stock upgrade and downgrade.
         * @param {Object} opts Optional parameters
         * @param {String} opts.symbol Symbol of the company: AAPL. If left blank, the API will return latest stock upgrades/downgrades.
         * @param {Date} opts.from From date: 2000-03-15.
         * @param {Date} opts.to To date: 2020-03-16.
         * @param {module:api/DefaultApi~upgradeDowngradeCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Array.<module:model/UpgradeDowngrade>}
         */
      }, {
        key: "upgradeDowngrade",
        value: function upgradeDowngrade(opts, callback) {
          opts = opts || {};
          var postBody = null;
          var pathParams = {};
          var queryParams = {
            "symbol": opts["symbol"],
            "from": opts["from"],
            "to": opts["to"]
          };
          var headerParams = {};
          var formParams = {};
          var authNames = ["api_key"];
          var contentTypes = [];
          var accepts = ["application/json"];
          var returnType = [_UpgradeDowngrade["default"]];
          return this.apiClient.callApi("/stock/upgrade-downgrade", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
        }
      }]);
      return DefaultApi2;
    }();
    exports["default"] = DefaultApi;
  }
});

// ../node_modules/finnhub/dist/index.js
var require_dist = __commonJS({
  "../node_modules/finnhub/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "ApiClient", {
      enumerable: true,
      get: function get() {
        return _ApiClient["default"];
      }
    });
    Object.defineProperty(exports, "AggregateIndicators", {
      enumerable: true,
      get: function get() {
        return _AggregateIndicators["default"];
      }
    });
    Object.defineProperty(exports, "BasicFinancials", {
      enumerable: true,
      get: function get() {
        return _BasicFinancials["default"];
      }
    });
    Object.defineProperty(exports, "BondCandles", {
      enumerable: true,
      get: function get() {
        return _BondCandles["default"];
      }
    });
    Object.defineProperty(exports, "BondProfile", {
      enumerable: true,
      get: function get() {
        return _BondProfile["default"];
      }
    });
    Object.defineProperty(exports, "BondTickData", {
      enumerable: true,
      get: function get() {
        return _BondTickData["default"];
      }
    });
    Object.defineProperty(exports, "BondYieldCurve", {
      enumerable: true,
      get: function get() {
        return _BondYieldCurve["default"];
      }
    });
    Object.defineProperty(exports, "BondYieldCurveInfo", {
      enumerable: true,
      get: function get() {
        return _BondYieldCurveInfo["default"];
      }
    });
    Object.defineProperty(exports, "BreakdownItem", {
      enumerable: true,
      get: function get() {
        return _BreakdownItem["default"];
      }
    });
    Object.defineProperty(exports, "Company", {
      enumerable: true,
      get: function get() {
        return _Company["default"];
      }
    });
    Object.defineProperty(exports, "CompanyESG", {
      enumerable: true,
      get: function get() {
        return _CompanyESG["default"];
      }
    });
    Object.defineProperty(exports, "CompanyEarningsQualityScore", {
      enumerable: true,
      get: function get() {
        return _CompanyEarningsQualityScore["default"];
      }
    });
    Object.defineProperty(exports, "CompanyEarningsQualityScoreData", {
      enumerable: true,
      get: function get() {
        return _CompanyEarningsQualityScoreData["default"];
      }
    });
    Object.defineProperty(exports, "CompanyExecutive", {
      enumerable: true,
      get: function get() {
        return _CompanyExecutive["default"];
      }
    });
    Object.defineProperty(exports, "CompanyNews", {
      enumerable: true,
      get: function get() {
        return _CompanyNews["default"];
      }
    });
    Object.defineProperty(exports, "CompanyNewsStatistics", {
      enumerable: true,
      get: function get() {
        return _CompanyNewsStatistics["default"];
      }
    });
    Object.defineProperty(exports, "CompanyProfile", {
      enumerable: true,
      get: function get() {
        return _CompanyProfile["default"];
      }
    });
    Object.defineProperty(exports, "CompanyProfile2", {
      enumerable: true,
      get: function get() {
        return _CompanyProfile2["default"];
      }
    });
    Object.defineProperty(exports, "CongressionalTrading", {
      enumerable: true,
      get: function get() {
        return _CongressionalTrading["default"];
      }
    });
    Object.defineProperty(exports, "CongressionalTransaction", {
      enumerable: true,
      get: function get() {
        return _CongressionalTransaction["default"];
      }
    });
    Object.defineProperty(exports, "CountryMetadata", {
      enumerable: true,
      get: function get() {
        return _CountryMetadata["default"];
      }
    });
    Object.defineProperty(exports, "CovidInfo", {
      enumerable: true,
      get: function get() {
        return _CovidInfo["default"];
      }
    });
    Object.defineProperty(exports, "CryptoCandles", {
      enumerable: true,
      get: function get() {
        return _CryptoCandles["default"];
      }
    });
    Object.defineProperty(exports, "CryptoProfile", {
      enumerable: true,
      get: function get() {
        return _CryptoProfile["default"];
      }
    });
    Object.defineProperty(exports, "CryptoSymbol", {
      enumerable: true,
      get: function get() {
        return _CryptoSymbol["default"];
      }
    });
    Object.defineProperty(exports, "Development", {
      enumerable: true,
      get: function get() {
        return _Development["default"];
      }
    });
    Object.defineProperty(exports, "Dividends", {
      enumerable: true,
      get: function get() {
        return _Dividends["default"];
      }
    });
    Object.defineProperty(exports, "Dividends2", {
      enumerable: true,
      get: function get() {
        return _Dividends2["default"];
      }
    });
    Object.defineProperty(exports, "Dividends2Info", {
      enumerable: true,
      get: function get() {
        return _Dividends2Info["default"];
      }
    });
    Object.defineProperty(exports, "DocumentResponse", {
      enumerable: true,
      get: function get() {
        return _DocumentResponse["default"];
      }
    });
    Object.defineProperty(exports, "ETFCountryExposureData", {
      enumerable: true,
      get: function get() {
        return _ETFCountryExposureData["default"];
      }
    });
    Object.defineProperty(exports, "ETFHoldingsData", {
      enumerable: true,
      get: function get() {
        return _ETFHoldingsData["default"];
      }
    });
    Object.defineProperty(exports, "ETFProfileData", {
      enumerable: true,
      get: function get() {
        return _ETFProfileData["default"];
      }
    });
    Object.defineProperty(exports, "ETFSectorExposureData", {
      enumerable: true,
      get: function get() {
        return _ETFSectorExposureData["default"];
      }
    });
    Object.defineProperty(exports, "ETFsCountryExposure", {
      enumerable: true,
      get: function get() {
        return _ETFsCountryExposure["default"];
      }
    });
    Object.defineProperty(exports, "ETFsHoldings", {
      enumerable: true,
      get: function get() {
        return _ETFsHoldings["default"];
      }
    });
    Object.defineProperty(exports, "ETFsProfile", {
      enumerable: true,
      get: function get() {
        return _ETFsProfile["default"];
      }
    });
    Object.defineProperty(exports, "ETFsSectorExposure", {
      enumerable: true,
      get: function get() {
        return _ETFsSectorExposure["default"];
      }
    });
    Object.defineProperty(exports, "EarningRelease", {
      enumerable: true,
      get: function get() {
        return _EarningRelease["default"];
      }
    });
    Object.defineProperty(exports, "EarningResult", {
      enumerable: true,
      get: function get() {
        return _EarningResult["default"];
      }
    });
    Object.defineProperty(exports, "EarningsCalendar", {
      enumerable: true,
      get: function get() {
        return _EarningsCalendar["default"];
      }
    });
    Object.defineProperty(exports, "EarningsCallTranscripts", {
      enumerable: true,
      get: function get() {
        return _EarningsCallTranscripts["default"];
      }
    });
    Object.defineProperty(exports, "EarningsCallTranscriptsList", {
      enumerable: true,
      get: function get() {
        return _EarningsCallTranscriptsList["default"];
      }
    });
    Object.defineProperty(exports, "EarningsEstimates", {
      enumerable: true,
      get: function get() {
        return _EarningsEstimates["default"];
      }
    });
    Object.defineProperty(exports, "EarningsEstimatesInfo", {
      enumerable: true,
      get: function get() {
        return _EarningsEstimatesInfo["default"];
      }
    });
    Object.defineProperty(exports, "EbitEstimates", {
      enumerable: true,
      get: function get() {
        return _EbitEstimates["default"];
      }
    });
    Object.defineProperty(exports, "EbitEstimatesInfo", {
      enumerable: true,
      get: function get() {
        return _EbitEstimatesInfo["default"];
      }
    });
    Object.defineProperty(exports, "EbitdaEstimates", {
      enumerable: true,
      get: function get() {
        return _EbitdaEstimates["default"];
      }
    });
    Object.defineProperty(exports, "EbitdaEstimatesInfo", {
      enumerable: true,
      get: function get() {
        return _EbitdaEstimatesInfo["default"];
      }
    });
    Object.defineProperty(exports, "EconomicCalendar", {
      enumerable: true,
      get: function get() {
        return _EconomicCalendar["default"];
      }
    });
    Object.defineProperty(exports, "EconomicCode", {
      enumerable: true,
      get: function get() {
        return _EconomicCode["default"];
      }
    });
    Object.defineProperty(exports, "EconomicData", {
      enumerable: true,
      get: function get() {
        return _EconomicData["default"];
      }
    });
    Object.defineProperty(exports, "EconomicDataInfo", {
      enumerable: true,
      get: function get() {
        return _EconomicDataInfo["default"];
      }
    });
    Object.defineProperty(exports, "EconomicEvent", {
      enumerable: true,
      get: function get() {
        return _EconomicEvent["default"];
      }
    });
    Object.defineProperty(exports, "ExcerptResponse", {
      enumerable: true,
      get: function get() {
        return _ExcerptResponse["default"];
      }
    });
    Object.defineProperty(exports, "FDAComitteeMeeting", {
      enumerable: true,
      get: function get() {
        return _FDAComitteeMeeting["default"];
      }
    });
    Object.defineProperty(exports, "Filing", {
      enumerable: true,
      get: function get() {
        return _Filing["default"];
      }
    });
    Object.defineProperty(exports, "FilingResponse", {
      enumerable: true,
      get: function get() {
        return _FilingResponse["default"];
      }
    });
    Object.defineProperty(exports, "FilingSentiment", {
      enumerable: true,
      get: function get() {
        return _FilingSentiment["default"];
      }
    });
    Object.defineProperty(exports, "FinancialStatements", {
      enumerable: true,
      get: function get() {
        return _FinancialStatements["default"];
      }
    });
    Object.defineProperty(exports, "FinancialsAsReported", {
      enumerable: true,
      get: function get() {
        return _FinancialsAsReported["default"];
      }
    });
    Object.defineProperty(exports, "ForexCandles", {
      enumerable: true,
      get: function get() {
        return _ForexCandles["default"];
      }
    });
    Object.defineProperty(exports, "ForexSymbol", {
      enumerable: true,
      get: function get() {
        return _ForexSymbol["default"];
      }
    });
    Object.defineProperty(exports, "Forexrates", {
      enumerable: true,
      get: function get() {
        return _Forexrates["default"];
      }
    });
    Object.defineProperty(exports, "FundOwnership", {
      enumerable: true,
      get: function get() {
        return _FundOwnership["default"];
      }
    });
    Object.defineProperty(exports, "FundOwnershipInfo", {
      enumerable: true,
      get: function get() {
        return _FundOwnershipInfo["default"];
      }
    });
    Object.defineProperty(exports, "HistoricalNBBO", {
      enumerable: true,
      get: function get() {
        return _HistoricalNBBO["default"];
      }
    });
    Object.defineProperty(exports, "IPOCalendar", {
      enumerable: true,
      get: function get() {
        return _IPOCalendar["default"];
      }
    });
    Object.defineProperty(exports, "IPOEvent", {
      enumerable: true,
      get: function get() {
        return _IPOEvent["default"];
      }
    });
    Object.defineProperty(exports, "InFilingResponse", {
      enumerable: true,
      get: function get() {
        return _InFilingResponse["default"];
      }
    });
    Object.defineProperty(exports, "InFilingSearchBody", {
      enumerable: true,
      get: function get() {
        return _InFilingSearchBody["default"];
      }
    });
    Object.defineProperty(exports, "IndexHistoricalConstituent", {
      enumerable: true,
      get: function get() {
        return _IndexHistoricalConstituent["default"];
      }
    });
    Object.defineProperty(exports, "Indicator", {
      enumerable: true,
      get: function get() {
        return _Indicator["default"];
      }
    });
    Object.defineProperty(exports, "IndicesConstituents", {
      enumerable: true,
      get: function get() {
        return _IndicesConstituents["default"];
      }
    });
    Object.defineProperty(exports, "IndicesConstituentsBreakdown", {
      enumerable: true,
      get: function get() {
        return _IndicesConstituentsBreakdown["default"];
      }
    });
    Object.defineProperty(exports, "IndicesHistoricalConstituents", {
      enumerable: true,
      get: function get() {
        return _IndicesHistoricalConstituents["default"];
      }
    });
    Object.defineProperty(exports, "InsiderSentiments", {
      enumerable: true,
      get: function get() {
        return _InsiderSentiments["default"];
      }
    });
    Object.defineProperty(exports, "InsiderSentimentsData", {
      enumerable: true,
      get: function get() {
        return _InsiderSentimentsData["default"];
      }
    });
    Object.defineProperty(exports, "InsiderTransactions", {
      enumerable: true,
      get: function get() {
        return _InsiderTransactions["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalOwnership", {
      enumerable: true,
      get: function get() {
        return _InstitutionalOwnership["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalOwnershipGroup", {
      enumerable: true,
      get: function get() {
        return _InstitutionalOwnershipGroup["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalOwnershipInfo", {
      enumerable: true,
      get: function get() {
        return _InstitutionalOwnershipInfo["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalPortfolio", {
      enumerable: true,
      get: function get() {
        return _InstitutionalPortfolio["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalPortfolioGroup", {
      enumerable: true,
      get: function get() {
        return _InstitutionalPortfolioGroup["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalPortfolioInfo", {
      enumerable: true,
      get: function get() {
        return _InstitutionalPortfolioInfo["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalProfile", {
      enumerable: true,
      get: function get() {
        return _InstitutionalProfile["default"];
      }
    });
    Object.defineProperty(exports, "InstitutionalProfileInfo", {
      enumerable: true,
      get: function get() {
        return _InstitutionalProfileInfo["default"];
      }
    });
    Object.defineProperty(exports, "InternationalFiling", {
      enumerable: true,
      get: function get() {
        return _InternationalFiling["default"];
      }
    });
    Object.defineProperty(exports, "InvestmentThemePortfolio", {
      enumerable: true,
      get: function get() {
        return _InvestmentThemePortfolio["default"];
      }
    });
    Object.defineProperty(exports, "InvestmentThemes", {
      enumerable: true,
      get: function get() {
        return _InvestmentThemes["default"];
      }
    });
    Object.defineProperty(exports, "IsinChange", {
      enumerable: true,
      get: function get() {
        return _IsinChange["default"];
      }
    });
    Object.defineProperty(exports, "IsinChangeInfo", {
      enumerable: true,
      get: function get() {
        return _IsinChangeInfo["default"];
      }
    });
    Object.defineProperty(exports, "KeyCustomersSuppliers", {
      enumerable: true,
      get: function get() {
        return _KeyCustomersSuppliers["default"];
      }
    });
    Object.defineProperty(exports, "LastBidAsk", {
      enumerable: true,
      get: function get() {
        return _LastBidAsk["default"];
      }
    });
    Object.defineProperty(exports, "LobbyingData", {
      enumerable: true,
      get: function get() {
        return _LobbyingData["default"];
      }
    });
    Object.defineProperty(exports, "LobbyingResult", {
      enumerable: true,
      get: function get() {
        return _LobbyingResult["default"];
      }
    });
    Object.defineProperty(exports, "MarketHoliday", {
      enumerable: true,
      get: function get() {
        return _MarketHoliday["default"];
      }
    });
    Object.defineProperty(exports, "MarketHolidayData", {
      enumerable: true,
      get: function get() {
        return _MarketHolidayData["default"];
      }
    });
    Object.defineProperty(exports, "MarketNews", {
      enumerable: true,
      get: function get() {
        return _MarketNews["default"];
      }
    });
    Object.defineProperty(exports, "MarketStatus", {
      enumerable: true,
      get: function get() {
        return _MarketStatus["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundCountryExposure", {
      enumerable: true,
      get: function get() {
        return _MutualFundCountryExposure["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundCountryExposureData", {
      enumerable: true,
      get: function get() {
        return _MutualFundCountryExposureData["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundEet", {
      enumerable: true,
      get: function get() {
        return _MutualFundEet["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundEetPai", {
      enumerable: true,
      get: function get() {
        return _MutualFundEetPai["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundHoldings", {
      enumerable: true,
      get: function get() {
        return _MutualFundHoldings["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundHoldingsData", {
      enumerable: true,
      get: function get() {
        return _MutualFundHoldingsData["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundProfile", {
      enumerable: true,
      get: function get() {
        return _MutualFundProfile["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundProfileData", {
      enumerable: true,
      get: function get() {
        return _MutualFundProfileData["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundSectorExposure", {
      enumerable: true,
      get: function get() {
        return _MutualFundSectorExposure["default"];
      }
    });
    Object.defineProperty(exports, "MutualFundSectorExposureData", {
      enumerable: true,
      get: function get() {
        return _MutualFundSectorExposureData["default"];
      }
    });
    Object.defineProperty(exports, "NewsSentiment", {
      enumerable: true,
      get: function get() {
        return _NewsSentiment["default"];
      }
    });
    Object.defineProperty(exports, "Ownership", {
      enumerable: true,
      get: function get() {
        return _Ownership["default"];
      }
    });
    Object.defineProperty(exports, "OwnershipInfo", {
      enumerable: true,
      get: function get() {
        return _OwnershipInfo["default"];
      }
    });
    Object.defineProperty(exports, "PatternRecognition", {
      enumerable: true,
      get: function get() {
        return _PatternRecognition["default"];
      }
    });
    Object.defineProperty(exports, "PressRelease", {
      enumerable: true,
      get: function get() {
        return _PressRelease["default"];
      }
    });
    Object.defineProperty(exports, "PriceMetrics", {
      enumerable: true,
      get: function get() {
        return _PriceMetrics["default"];
      }
    });
    Object.defineProperty(exports, "PriceTarget", {
      enumerable: true,
      get: function get() {
        return _PriceTarget["default"];
      }
    });
    Object.defineProperty(exports, "Quote", {
      enumerable: true,
      get: function get() {
        return _Quote["default"];
      }
    });
    Object.defineProperty(exports, "RecommendationTrend", {
      enumerable: true,
      get: function get() {
        return _RecommendationTrend["default"];
      }
    });
    Object.defineProperty(exports, "Report", {
      enumerable: true,
      get: function get() {
        return _Report["default"];
      }
    });
    Object.defineProperty(exports, "RevenueBreakdown", {
      enumerable: true,
      get: function get() {
        return _RevenueBreakdown["default"];
      }
    });
    Object.defineProperty(exports, "RevenueEstimates", {
      enumerable: true,
      get: function get() {
        return _RevenueEstimates["default"];
      }
    });
    Object.defineProperty(exports, "RevenueEstimatesInfo", {
      enumerable: true,
      get: function get() {
        return _RevenueEstimatesInfo["default"];
      }
    });
    Object.defineProperty(exports, "SECSentimentAnalysis", {
      enumerable: true,
      get: function get() {
        return _SECSentimentAnalysis["default"];
      }
    });
    Object.defineProperty(exports, "SearchBody", {
      enumerable: true,
      get: function get() {
        return _SearchBody["default"];
      }
    });
    Object.defineProperty(exports, "SearchFilter", {
      enumerable: true,
      get: function get() {
        return _SearchFilter["default"];
      }
    });
    Object.defineProperty(exports, "SearchResponse", {
      enumerable: true,
      get: function get() {
        return _SearchResponse["default"];
      }
    });
    Object.defineProperty(exports, "SectorMetric", {
      enumerable: true,
      get: function get() {
        return _SectorMetric["default"];
      }
    });
    Object.defineProperty(exports, "SectorMetricData", {
      enumerable: true,
      get: function get() {
        return _SectorMetricData["default"];
      }
    });
    Object.defineProperty(exports, "Sentiment", {
      enumerable: true,
      get: function get() {
        return _Sentiment["default"];
      }
    });
    Object.defineProperty(exports, "SentimentContent", {
      enumerable: true,
      get: function get() {
        return _SentimentContent["default"];
      }
    });
    Object.defineProperty(exports, "SimilarityIndex", {
      enumerable: true,
      get: function get() {
        return _SimilarityIndex["default"];
      }
    });
    Object.defineProperty(exports, "SimilarityIndexInfo", {
      enumerable: true,
      get: function get() {
        return _SimilarityIndexInfo["default"];
      }
    });
    Object.defineProperty(exports, "SocialSentiment", {
      enumerable: true,
      get: function get() {
        return _SocialSentiment["default"];
      }
    });
    Object.defineProperty(exports, "Split", {
      enumerable: true,
      get: function get() {
        return _Split["default"];
      }
    });
    Object.defineProperty(exports, "StockCandles", {
      enumerable: true,
      get: function get() {
        return _StockCandles["default"];
      }
    });
    Object.defineProperty(exports, "StockSymbol", {
      enumerable: true,
      get: function get() {
        return _StockSymbol["default"];
      }
    });
    Object.defineProperty(exports, "StockTranscripts", {
      enumerable: true,
      get: function get() {
        return _StockTranscripts["default"];
      }
    });
    Object.defineProperty(exports, "SupplyChainRelationships", {
      enumerable: true,
      get: function get() {
        return _SupplyChainRelationships["default"];
      }
    });
    Object.defineProperty(exports, "SupportResistance", {
      enumerable: true,
      get: function get() {
        return _SupportResistance["default"];
      }
    });
    Object.defineProperty(exports, "SymbolChange", {
      enumerable: true,
      get: function get() {
        return _SymbolChange["default"];
      }
    });
    Object.defineProperty(exports, "SymbolChangeInfo", {
      enumerable: true,
      get: function get() {
        return _SymbolChangeInfo["default"];
      }
    });
    Object.defineProperty(exports, "SymbolLookup", {
      enumerable: true,
      get: function get() {
        return _SymbolLookup["default"];
      }
    });
    Object.defineProperty(exports, "SymbolLookupInfo", {
      enumerable: true,
      get: function get() {
        return _SymbolLookupInfo["default"];
      }
    });
    Object.defineProperty(exports, "TechnicalAnalysis", {
      enumerable: true,
      get: function get() {
        return _TechnicalAnalysis["default"];
      }
    });
    Object.defineProperty(exports, "TickData", {
      enumerable: true,
      get: function get() {
        return _TickData["default"];
      }
    });
    Object.defineProperty(exports, "Transactions", {
      enumerable: true,
      get: function get() {
        return _Transactions["default"];
      }
    });
    Object.defineProperty(exports, "TranscriptContent", {
      enumerable: true,
      get: function get() {
        return _TranscriptContent["default"];
      }
    });
    Object.defineProperty(exports, "TranscriptParticipant", {
      enumerable: true,
      get: function get() {
        return _TranscriptParticipant["default"];
      }
    });
    Object.defineProperty(exports, "Trend", {
      enumerable: true,
      get: function get() {
        return _Trend["default"];
      }
    });
    Object.defineProperty(exports, "UpgradeDowngrade", {
      enumerable: true,
      get: function get() {
        return _UpgradeDowngrade["default"];
      }
    });
    Object.defineProperty(exports, "UsaSpending", {
      enumerable: true,
      get: function get() {
        return _UsaSpending["default"];
      }
    });
    Object.defineProperty(exports, "UsaSpendingResult", {
      enumerable: true,
      get: function get() {
        return _UsaSpendingResult["default"];
      }
    });
    Object.defineProperty(exports, "UsptoPatent", {
      enumerable: true,
      get: function get() {
        return _UsptoPatent["default"];
      }
    });
    Object.defineProperty(exports, "UsptoPatentResult", {
      enumerable: true,
      get: function get() {
        return _UsptoPatentResult["default"];
      }
    });
    Object.defineProperty(exports, "VisaApplication", {
      enumerable: true,
      get: function get() {
        return _VisaApplication["default"];
      }
    });
    Object.defineProperty(exports, "VisaApplicationResult", {
      enumerable: true,
      get: function get() {
        return _VisaApplicationResult["default"];
      }
    });
    Object.defineProperty(exports, "DefaultApi", {
      enumerable: true,
      get: function get() {
        return _DefaultApi["default"];
      }
    });
    var _ApiClient = _interopRequireDefault(require_ApiClient());
    var _AggregateIndicators = _interopRequireDefault(require_AggregateIndicators());
    var _BasicFinancials = _interopRequireDefault(require_BasicFinancials());
    var _BondCandles = _interopRequireDefault(require_BondCandles());
    var _BondProfile = _interopRequireDefault(require_BondProfile());
    var _BondTickData = _interopRequireDefault(require_BondTickData());
    var _BondYieldCurve = _interopRequireDefault(require_BondYieldCurve());
    var _BondYieldCurveInfo = _interopRequireDefault(require_BondYieldCurveInfo());
    var _BreakdownItem = _interopRequireDefault(require_BreakdownItem());
    var _Company = _interopRequireDefault(require_Company());
    var _CompanyESG = _interopRequireDefault(require_CompanyESG());
    var _CompanyEarningsQualityScore = _interopRequireDefault(require_CompanyEarningsQualityScore());
    var _CompanyEarningsQualityScoreData = _interopRequireDefault(require_CompanyEarningsQualityScoreData());
    var _CompanyExecutive = _interopRequireDefault(require_CompanyExecutive());
    var _CompanyNews = _interopRequireDefault(require_CompanyNews());
    var _CompanyNewsStatistics = _interopRequireDefault(require_CompanyNewsStatistics());
    var _CompanyProfile = _interopRequireDefault(require_CompanyProfile());
    var _CompanyProfile2 = _interopRequireDefault(require_CompanyProfile2());
    var _CongressionalTrading = _interopRequireDefault(require_CongressionalTrading());
    var _CongressionalTransaction = _interopRequireDefault(require_CongressionalTransaction());
    var _CountryMetadata = _interopRequireDefault(require_CountryMetadata());
    var _CovidInfo = _interopRequireDefault(require_CovidInfo());
    var _CryptoCandles = _interopRequireDefault(require_CryptoCandles());
    var _CryptoProfile = _interopRequireDefault(require_CryptoProfile());
    var _CryptoSymbol = _interopRequireDefault(require_CryptoSymbol());
    var _Development = _interopRequireDefault(require_Development());
    var _Dividends = _interopRequireDefault(require_Dividends());
    var _Dividends2 = _interopRequireDefault(require_Dividends2());
    var _Dividends2Info = _interopRequireDefault(require_Dividends2Info());
    var _DocumentResponse = _interopRequireDefault(require_DocumentResponse());
    var _ETFCountryExposureData = _interopRequireDefault(require_ETFCountryExposureData());
    var _ETFHoldingsData = _interopRequireDefault(require_ETFHoldingsData());
    var _ETFProfileData = _interopRequireDefault(require_ETFProfileData());
    var _ETFSectorExposureData = _interopRequireDefault(require_ETFSectorExposureData());
    var _ETFsCountryExposure = _interopRequireDefault(require_ETFsCountryExposure());
    var _ETFsHoldings = _interopRequireDefault(require_ETFsHoldings());
    var _ETFsProfile = _interopRequireDefault(require_ETFsProfile());
    var _ETFsSectorExposure = _interopRequireDefault(require_ETFsSectorExposure());
    var _EarningRelease = _interopRequireDefault(require_EarningRelease());
    var _EarningResult = _interopRequireDefault(require_EarningResult());
    var _EarningsCalendar = _interopRequireDefault(require_EarningsCalendar());
    var _EarningsCallTranscripts = _interopRequireDefault(require_EarningsCallTranscripts());
    var _EarningsCallTranscriptsList = _interopRequireDefault(require_EarningsCallTranscriptsList());
    var _EarningsEstimates = _interopRequireDefault(require_EarningsEstimates());
    var _EarningsEstimatesInfo = _interopRequireDefault(require_EarningsEstimatesInfo());
    var _EbitEstimates = _interopRequireDefault(require_EbitEstimates());
    var _EbitEstimatesInfo = _interopRequireDefault(require_EbitEstimatesInfo());
    var _EbitdaEstimates = _interopRequireDefault(require_EbitdaEstimates());
    var _EbitdaEstimatesInfo = _interopRequireDefault(require_EbitdaEstimatesInfo());
    var _EconomicCalendar = _interopRequireDefault(require_EconomicCalendar());
    var _EconomicCode = _interopRequireDefault(require_EconomicCode());
    var _EconomicData = _interopRequireDefault(require_EconomicData());
    var _EconomicDataInfo = _interopRequireDefault(require_EconomicDataInfo());
    var _EconomicEvent = _interopRequireDefault(require_EconomicEvent());
    var _ExcerptResponse = _interopRequireDefault(require_ExcerptResponse());
    var _FDAComitteeMeeting = _interopRequireDefault(require_FDAComitteeMeeting());
    var _Filing = _interopRequireDefault(require_Filing());
    var _FilingResponse = _interopRequireDefault(require_FilingResponse());
    var _FilingSentiment = _interopRequireDefault(require_FilingSentiment());
    var _FinancialStatements = _interopRequireDefault(require_FinancialStatements());
    var _FinancialsAsReported = _interopRequireDefault(require_FinancialsAsReported());
    var _ForexCandles = _interopRequireDefault(require_ForexCandles());
    var _ForexSymbol = _interopRequireDefault(require_ForexSymbol());
    var _Forexrates = _interopRequireDefault(require_Forexrates());
    var _FundOwnership = _interopRequireDefault(require_FundOwnership());
    var _FundOwnershipInfo = _interopRequireDefault(require_FundOwnershipInfo());
    var _HistoricalNBBO = _interopRequireDefault(require_HistoricalNBBO());
    var _IPOCalendar = _interopRequireDefault(require_IPOCalendar());
    var _IPOEvent = _interopRequireDefault(require_IPOEvent());
    var _InFilingResponse = _interopRequireDefault(require_InFilingResponse());
    var _InFilingSearchBody = _interopRequireDefault(require_InFilingSearchBody());
    var _IndexHistoricalConstituent = _interopRequireDefault(require_IndexHistoricalConstituent());
    var _Indicator = _interopRequireDefault(require_Indicator());
    var _IndicesConstituents = _interopRequireDefault(require_IndicesConstituents());
    var _IndicesConstituentsBreakdown = _interopRequireDefault(require_IndicesConstituentsBreakdown());
    var _IndicesHistoricalConstituents = _interopRequireDefault(require_IndicesHistoricalConstituents());
    var _InsiderSentiments = _interopRequireDefault(require_InsiderSentiments());
    var _InsiderSentimentsData = _interopRequireDefault(require_InsiderSentimentsData());
    var _InsiderTransactions = _interopRequireDefault(require_InsiderTransactions());
    var _InstitutionalOwnership = _interopRequireDefault(require_InstitutionalOwnership());
    var _InstitutionalOwnershipGroup = _interopRequireDefault(require_InstitutionalOwnershipGroup());
    var _InstitutionalOwnershipInfo = _interopRequireDefault(require_InstitutionalOwnershipInfo());
    var _InstitutionalPortfolio = _interopRequireDefault(require_InstitutionalPortfolio());
    var _InstitutionalPortfolioGroup = _interopRequireDefault(require_InstitutionalPortfolioGroup());
    var _InstitutionalPortfolioInfo = _interopRequireDefault(require_InstitutionalPortfolioInfo());
    var _InstitutionalProfile = _interopRequireDefault(require_InstitutionalProfile());
    var _InstitutionalProfileInfo = _interopRequireDefault(require_InstitutionalProfileInfo());
    var _InternationalFiling = _interopRequireDefault(require_InternationalFiling());
    var _InvestmentThemePortfolio = _interopRequireDefault(require_InvestmentThemePortfolio());
    var _InvestmentThemes = _interopRequireDefault(require_InvestmentThemes());
    var _IsinChange = _interopRequireDefault(require_IsinChange());
    var _IsinChangeInfo = _interopRequireDefault(require_IsinChangeInfo());
    var _KeyCustomersSuppliers = _interopRequireDefault(require_KeyCustomersSuppliers());
    var _LastBidAsk = _interopRequireDefault(require_LastBidAsk());
    var _LobbyingData = _interopRequireDefault(require_LobbyingData());
    var _LobbyingResult = _interopRequireDefault(require_LobbyingResult());
    var _MarketHoliday = _interopRequireDefault(require_MarketHoliday());
    var _MarketHolidayData = _interopRequireDefault(require_MarketHolidayData());
    var _MarketNews = _interopRequireDefault(require_MarketNews());
    var _MarketStatus = _interopRequireDefault(require_MarketStatus());
    var _MutualFundCountryExposure = _interopRequireDefault(require_MutualFundCountryExposure());
    var _MutualFundCountryExposureData = _interopRequireDefault(require_MutualFundCountryExposureData());
    var _MutualFundEet = _interopRequireDefault(require_MutualFundEet());
    var _MutualFundEetPai = _interopRequireDefault(require_MutualFundEetPai());
    var _MutualFundHoldings = _interopRequireDefault(require_MutualFundHoldings());
    var _MutualFundHoldingsData = _interopRequireDefault(require_MutualFundHoldingsData());
    var _MutualFundProfile = _interopRequireDefault(require_MutualFundProfile());
    var _MutualFundProfileData = _interopRequireDefault(require_MutualFundProfileData());
    var _MutualFundSectorExposure = _interopRequireDefault(require_MutualFundSectorExposure());
    var _MutualFundSectorExposureData = _interopRequireDefault(require_MutualFundSectorExposureData());
    var _NewsSentiment = _interopRequireDefault(require_NewsSentiment());
    var _Ownership = _interopRequireDefault(require_Ownership());
    var _OwnershipInfo = _interopRequireDefault(require_OwnershipInfo());
    var _PatternRecognition = _interopRequireDefault(require_PatternRecognition());
    var _PressRelease = _interopRequireDefault(require_PressRelease());
    var _PriceMetrics = _interopRequireDefault(require_PriceMetrics());
    var _PriceTarget = _interopRequireDefault(require_PriceTarget());
    var _Quote = _interopRequireDefault(require_Quote());
    var _RecommendationTrend = _interopRequireDefault(require_RecommendationTrend());
    var _Report = _interopRequireDefault(require_Report());
    var _RevenueBreakdown = _interopRequireDefault(require_RevenueBreakdown());
    var _RevenueEstimates = _interopRequireDefault(require_RevenueEstimates());
    var _RevenueEstimatesInfo = _interopRequireDefault(require_RevenueEstimatesInfo());
    var _SECSentimentAnalysis = _interopRequireDefault(require_SECSentimentAnalysis());
    var _SearchBody = _interopRequireDefault(require_SearchBody());
    var _SearchFilter = _interopRequireDefault(require_SearchFilter());
    var _SearchResponse = _interopRequireDefault(require_SearchResponse());
    var _SectorMetric = _interopRequireDefault(require_SectorMetric());
    var _SectorMetricData = _interopRequireDefault(require_SectorMetricData());
    var _Sentiment = _interopRequireDefault(require_Sentiment());
    var _SentimentContent = _interopRequireDefault(require_SentimentContent());
    var _SimilarityIndex = _interopRequireDefault(require_SimilarityIndex());
    var _SimilarityIndexInfo = _interopRequireDefault(require_SimilarityIndexInfo());
    var _SocialSentiment = _interopRequireDefault(require_SocialSentiment());
    var _Split = _interopRequireDefault(require_Split());
    var _StockCandles = _interopRequireDefault(require_StockCandles());
    var _StockSymbol = _interopRequireDefault(require_StockSymbol());
    var _StockTranscripts = _interopRequireDefault(require_StockTranscripts());
    var _SupplyChainRelationships = _interopRequireDefault(require_SupplyChainRelationships());
    var _SupportResistance = _interopRequireDefault(require_SupportResistance());
    var _SymbolChange = _interopRequireDefault(require_SymbolChange());
    var _SymbolChangeInfo = _interopRequireDefault(require_SymbolChangeInfo());
    var _SymbolLookup = _interopRequireDefault(require_SymbolLookup());
    var _SymbolLookupInfo = _interopRequireDefault(require_SymbolLookupInfo());
    var _TechnicalAnalysis = _interopRequireDefault(require_TechnicalAnalysis());
    var _TickData = _interopRequireDefault(require_TickData());
    var _Transactions = _interopRequireDefault(require_Transactions());
    var _TranscriptContent = _interopRequireDefault(require_TranscriptContent());
    var _TranscriptParticipant = _interopRequireDefault(require_TranscriptParticipant());
    var _Trend = _interopRequireDefault(require_Trend());
    var _UpgradeDowngrade = _interopRequireDefault(require_UpgradeDowngrade());
    var _UsaSpending = _interopRequireDefault(require_UsaSpending());
    var _UsaSpendingResult = _interopRequireDefault(require_UsaSpendingResult());
    var _UsptoPatent = _interopRequireDefault(require_UsptoPatent());
    var _UsptoPatentResult = _interopRequireDefault(require_UsptoPatentResult());
    var _VisaApplication = _interopRequireDefault(require_VisaApplication());
    var _VisaApplicationResult = _interopRequireDefault(require_VisaApplicationResult());
    var _DefaultApi = _interopRequireDefault(require_DefaultApi());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
  }
});
export default require_dist();
//# sourceMappingURL=finnhub.js.map
